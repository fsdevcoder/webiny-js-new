name: webiny-cms-project

components:
  function: '../../../node_modules/@webiny/serverless-function'
  api: '/Users/paveldenisjuk/webiny/js/aws-api-gateway'
  cdn: '/Users/paveldenisjuk/webiny/js/aws-cloudfront'

services:
  env:
    MONGODB_SERVER: __wby_inject__
    MONGODB_DB_NAME: __wby_inject__
    WEBINY_JWT_SECRET: __wby_inject__

#i18n:
#  component: ${components.function}
#  inputs:
#    memory: 128
#    code: ../code/api-service-i18n/build
#    handler: handler.handler
#    root: ../code/api-service-i18n
#    hook: yarn build:deploy
#    env: ${services.env}
#forms:
#  component: ${components.function}
#  inputs:
#    memory: 128
#    code: ../code/api-service-forms/build
#    handler: handler.handler
#    root: ../code/api-service-forms
#    hook: yarn build:deploy
#    env: ${services.env}
#security:
#  component: ${components.function}
#  inputs:
#    memory: 128
#    code: ../code/api-service-security/build
#    handler: handler.handler
#    root: ../code/api-service-security
#    hook: yarn build:deploy
#    env: ${services.env}
#pageBuilder:
#  component: ${components.function}
#  inputs:
#    memory: 128
#    code: ../code/api-service-page-builder/build
#    handler: handler.handler
#    root: ../code/api-service-page-builder
#    hook: yarn build:deploy
#    env: ${services.env}

gateway:
  component: ${components.function}
  inputs:
    description: Apollo Gateway
    memory: 128
    code: ../code/api-gateway/build
    handler: handler.handler
    root: ../code/api-gateway
    hook: yarn build:deploy
    env:
      SERVICE_FILES: ${files.api.url}/graphql

files:
  component: "../../../node_modules/@webiny/microservice"
  inputs:
    path: "../code/api-service-files"

api:
  component: ${components.api}
  inputs:
    name: "GraphQL API"
    description: "GraphQL API"
    stage: prod
    endpointTypes: ['REGIONAL']
    endpoints:
      - path: /graphql
        method: ANY
        function: ${gateway.arn}

cdn:
  component: ${components.cdn}
  inputs:
    origins:
      - url: ${files.api.url}
        pathPatterns:
          "/files/*":
            ttl: 60
      - url: ${api.url}
        pathPatterns:
          "/graphql":
            ttl: 0
            forward:
              headers: ["Accept", "Accept-Language"]
            allowedHttpMethods: ["GET", "HEAD", "OPTIONS", "PUT", "POST", "PATCH", "DELETE"]
