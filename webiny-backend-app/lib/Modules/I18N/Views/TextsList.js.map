{"version":3,"sources":["../../../../src/Modules/I18N/Views/TextsList.jsx"],"names":["TextsList","ref","Ui","View","defaultProps","renderer","showView","i18n","apply","data","textField","base","key","loadData"],"mappings":"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","file":"TextsList.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport TextsModal from './TextsList/TextsModal';\nimport ScanTextsModal from './TextsList/ScanTextsModal';\nimport ImportTextsModal from './TextsList/ImportTextsModal';\nimport ExportTextsModal from './TextsList/ExportTextsModal';\nimport css from './TextsList.scss';\n\n/**\n * @i18n.namespace Webiny.Backend.I18N.TextsList\n */\nclass TextsList extends Webiny.Ui.View {\n    constructor() {\n        super();\n        this.ref = null;\n    }\n}\n\nTextsList.defaultProps = {\n    renderer () {\n        return (\n            <Webiny.Ui.LazyLoad\n                modules={['ViewSwitcher', 'View', 'Button', 'ButtonGroup', 'Icon', 'List', 'Input', 'Link', 'Grid', 'Select']}>\n                {Ui => (\n                    <Ui.ViewSwitcher>\n                        <Ui.ViewSwitcher.View view=\"translationsList\" defaultView>\n                            {({showView}) => (\n                                <Ui.View.List>\n                                    <Ui.View.Header\n                                        title={this.i18n(`Texts`)}\n                                        description={this.i18n('Scan, create and manage existing texts in all installed apps.')}>\n                                        <Ui.ButtonGroup>\n                                            <Ui.Button\n                                                type=\"primary\"\n                                                onClick={showView('textsModal')}\n                                                icon=\"icon-plus-circled\"\n                                                label={this.i18n(`Create`)}/>\n                                            <Ui.Button\n                                                type=\"secondary\"\n                                                onClick={showView('importTextsModal')}\n                                                icon=\"fa-download\"\n                                                label={this.i18n(`Import`)}/>\n                                            <Ui.Button\n                                                type=\"secondary\"\n                                                onClick={showView('exportTextsModal')}\n                                                icon=\"fa-upload\"\n                                                label={this.i18n(`Export`)}/>\n                                            <Ui.Button\n                                                type=\"secondary\"\n                                                icon=\"icon-arrow-circle-right\"\n                                                onClick={showView('scanTextsModal')}\n                                                label={this.i18n(`Scan`)}/>\n                                        </Ui.ButtonGroup>\n                                    </Ui.View.Header>\n                                    <Ui.View.Body>\n                                        <Ui.List\n                                            ref={ref => this.ref = ref}\n                                            connectToRouter\n                                            title={this.i18n(`Translations`)}\n                                            api=\"/entities/webiny/i18n-texts\"\n                                            searchFields=\"key,base\"\n                                            fields=\"key,base,app,translations,group,createdOn\"\n                                            sort=\"-createdOn\">\n                                            <Ui.List.FormFilters>\n                                                {({apply}) => (\n                                                    <Ui.Grid.Row>\n                                                        <Ui.Grid.Col all={4}>\n                                                            <Ui.Input\n                                                                name=\"_searchQuery\"\n                                                                placeholder={this.i18n('Search by key or base text')}\n                                                                onEnter={apply()}/>\n                                                        </Ui.Grid.Col>\n                                                        <Ui.Grid.Col all={4}>\n                                                            <Ui.Select\n                                                                name=\"app\"\n                                                                api=\"/services/webiny/apps\"\n                                                                url=\"/installed\"\n                                                                textAttr=\"name\"\n                                                                valueAttr=\"name\"\n                                                                placeholder={this.i18n('Filter by app')}\n                                                                allowClear\n                                                                onChange={apply()}/>\n                                                        </Ui.Grid.Col>\n                                                        <Ui.Grid.Col all={4}>\n                                                            <Ui.Select\n                                                                api=\"/entities/webiny/i18n-text-groups\"\n                                                                name=\"group\"\n                                                                placeholder={this.i18n('Filter by text group')}\n                                                                allowClear\n                                                                onChange={apply()}/>\n                                                        </Ui.Grid.Col>\n                                                    </Ui.Grid.Row>\n                                                )}\n                                            </Ui.List.FormFilters>\n                                            <Ui.List.Table>\n                                                <Ui.List.Table.Row>\n                                                    <Ui.List.Table.Field label={this.i18n('Text')} align=\"left\">\n                                                        {({data}) => (\n                                                            <div className={css.textField}>\n                                                                <h1 className=\"base\">{data.base}</h1>\n                                                                <code className=\"key\">{data.key}</code>\n                                                            </div>\n                                                        )}\n                                                    </Ui.List.Table.Field>\n                                                    <Ui.List.Table.Field name=\"app\" label={this.i18n('App')} align=\"center\"/>\n                                                    <Ui.List.Table.Field name=\"group.name\" label={this.i18n('Group')} align=\"center\"/>\n                                                    <Ui.List.Table.DateField name=\"createdOn\" label={this.i18n('Created On')} align=\"center\"/>\n                                                    <Ui.List.Table.Actions>\n                                                        <Ui.List.Table.EditAction onClick={showView('textsModal')}/>\n                                                        <Ui.List.Table.DeleteAction/>\n                                                    </Ui.List.Table.Actions>\n                                                </Ui.List.Table.Row>\n                                                <Ui.List.Table.Footer/>\n                                            </Ui.List.Table>\n                                            <Ui.List.Pagination/>\n                                        </Ui.List>\n                                    </Ui.View.Body>\n                                </Ui.View.List>\n                            )}\n                        </Ui.ViewSwitcher.View>\n                        <Ui.ViewSwitcher.View view=\"textsModal\" modal>\n                            {({showView, data: {data}}) => (\n                                <TextsModal {...{showView, data}} onTextsSaved={() => this.ref.loadData()}/>\n                            )}\n                        </Ui.ViewSwitcher.View>\n                        <Ui.ViewSwitcher.View view=\"scanTextsModal\" modal>\n                            {({showView, data: {data}}) => (\n                                <ScanTextsModal {...{showView, data}} onTextsScanned={() => this.ref.loadData()}/>\n                            )}\n                        </Ui.ViewSwitcher.View>\n                        <Ui.ViewSwitcher.View view=\"importTextsModal\" modal>\n                            {({showView, data: {data}}) => (\n                                <ImportTextsModal {...{showView, data}} onTextsImported={() => this.ref.loadData()}/>\n                            )}\n                        </Ui.ViewSwitcher.View>\n                        <Ui.ViewSwitcher.View view=\"exportTextsModal\" modal>\n                            {({showView, data: {data}}) => (\n                                <ExportTextsModal {...{showView, data}}/>\n                            )}\n                        </Ui.ViewSwitcher.View>\n                    </Ui.ViewSwitcher>\n                )}\n            </Webiny.Ui.LazyLoad>\n        );\n    }\n};\n\nexport default TextsList;"]}