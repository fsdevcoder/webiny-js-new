{"version":3,"sources":["../../../../../src/Modules/I18N/Views/TextsList/ScanTextsModal.jsx"],"names":["ScanTextsModal","Ui","props","apps","options","overwriteExisting","model","form","showLoading","preview","setModel","response","api","post","hideLoading","isError","handleApiError","results","data","getData","onTextsScanned","i18n","num","created","updated","ignored","hide","isEmpty","submit","ModalComponent","defaultProps","assign","noop","createComponent","modulesProp","modules"],"mappings":"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","file":"ScanTextsModal.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport _ from 'lodash';\n\n/**\n * @i18n.namespace Webiny.Backend.I18N.ScanTexts\n */\nclass ScanTextsModal extends Webiny.Ui.ModalComponent {\n    renderDialog() {\n        const {Ui} = this.props;\n\n        return (\n            <Ui.Modal.Dialog>\n                <Ui.Form\n                    defaultModel={{apps: [], options: {overwriteExisting: false}}}\n                    api=\"/entities/webiny/i18n-texts\"\n                    onSubmit={async ({model, form}) => {\n                        form.showLoading();\n                        const preview = model.options.preview;\n                        form.setModel({response: null});\n                        const response = await form.api.post('/scan', {apps: model.apps, options: model.options});\n\n                        form.hideLoading();\n\n                        if (response.isError()) {\n                            return form.handleApiError(response);\n                        }\n\n                        form.setModel({results: {preview, data: response.getData()}}, () => !preview && this.props.onTextsScanned());\n                    }}>\n                    {({model, form}) => {\n                        let results = null;\n                        if (model.results) {\n                            if (model.results.preview) {\n                                results = (\n                                    <Ui.Alert>\n                                        {this.i18n('After scan, following changes will be applied:')}\n                                        <ul>\n                                            <li>{this.i18n('{num} created', {num: <strong>{model.results.data.created}</strong>})}</li>\n                                            <li>{this.i18n('{num} updated', {num: <strong>{model.results.data.updated}</strong>})}</li>\n                                            <li>{this.i18n('{num} ignored', {num: <strong>{model.results.data.ignored}</strong>})}</li>\n                                        </ul>\n                                    </Ui.Alert>\n                                );\n                            } else {\n                                results = (\n                                    <Ui.Alert type=\"success\">\n                                        {this.i18n('Texts were successfully scanned! Following changes were applied:')}\n                                        <ul>\n                                            <li>{this.i18n('{num} created', {num: <strong>{model.results.data.created}</strong>})}</li>\n                                            <li>{this.i18n('{num} updated', {num: <strong>{model.results.data.updated}</strong>})}</li>\n                                            <li>{this.i18n('{num} ignored', {num: <strong>{model.results.data.ignored}</strong>})}</li>\n                                        </ul>\n                                    </Ui.Alert>\n                                );\n                            }\n                        }\n\n                        return (\n                            <Ui.Modal.Content>\n                                <Ui.Form.Loader/>\n                                <Ui.Modal.Header title={this.i18n(`Scan Texts`)} onClose={this.hide}/>\n                                <Ui.Modal.Body>\n                                    <Ui.Form.Error/>\n                                    {results}\n                                    <Ui.Grid.Row>\n                                        <Ui.Grid.Col all={12}>\n                                            <Ui.CheckboxGroup\n                                                validate=\"required\"\n                                                name=\"apps\"\n                                                label={this.i18n('Select apps to scan for texts')}\n                                                api=\"/services/webiny/apps\"\n                                                url=\"/installed\"\n                                                textAttr=\"name\"\n                                                valueAttr=\"name\"/>\n                                        </Ui.Grid.Col>\n                                    </Ui.Grid.Row>\n\n                                    <Ui.Section title={this.i18n('Options')}/>\n                                    <Ui.Grid.Row>\n                                        <Ui.Grid.Col all={12}>\n                                            <Ui.Checkbox\n                                                name=\"options.overwriteExisting\"\n                                                label={this.i18n('Overwrite existing keys')}\n                                                tooltip={this.i18n('Previously scanned texts will be overwritten.')}/>\n                                            <Ui.Checkbox\n                                                name=\"options.preview\"\n                                                label={this.i18n('Preview')}/>\n                                        </Ui.Grid.Col>\n                                    </Ui.Grid.Row>\n\n                                </Ui.Modal.Body>\n                                <Ui.Modal.Footer >\n                                    <Ui.Button label={this.i18n(`Cancel`)} onClick={this.hide}/>\n                                    <Ui.Button\n                                        disabled={_.isEmpty(model.apps)}\n                                        type=\"primary\"\n                                        label={this.i18n(`Scan`)}\n                                        onClick={form.submit}/>\n                                </Ui.Modal.Footer>\n                            </Ui.Modal.Content>\n                        );\n                    }}\n                </Ui.Form>\n            </Ui.Modal.Dialog>\n        );\n    }\n}\n\nScanTextsModal.defaultProps = _.assign({}, Webiny.Ui.ModalComponent.defaultProps, {\n    onTextsScanned: _.noop\n});\n\nexport default Webiny.createComponent(ScanTextsModal, {\n    modulesProp: 'Ui',\n    modules: [\n        'Modal', 'Form', 'Grid', 'CheckboxGroup', 'Checkbox', 'Button', 'Section', 'DownloadLink', 'Alert'\n    ]\n});"]}