{"version":3,"sources":["../../../../../../src/Modules/I18N/Views/TranslationsList/TranslationListRow/EditableTranslation.jsx"],"names":["EditableTranslation","props","ref","state","assign","edit","bindMethods","setState","setTimeout","querySelector","focus","Ui","Component","defaultProps","locale","text","translation","renderer","translationText","get","isEmpty","noTranslationLabel","i18n","editableTranslation","noop","showForm","label","key","model","form","hideForm","trim","api","patch","id","response","isError","Growl","danger","getMessage","success","shortcut","navigator","platform","event","createComponent","modulesProp","modules"],"mappings":"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","file":"EditableTranslation.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport css from './EditableTranslation.scss';\nimport _ from 'lodash';\n\n/**\n * @i18n.namespace  Webiny.Backend.I18N.EditableTranslation\n */\nclass EditableTranslation extends Webiny.Ui.Component {\n    constructor(props) {\n        super();\n        this.ref = null;\n        this.state = _.assign({}, props, {edit: false});\n        this.bindMethods('showForm,hideForm');\n    }\n\n    showForm() {\n        this.setState({edit: true});\n        setTimeout(() => this.ref.querySelector('textarea').focus(), 100);\n    }\n\n    hideForm() {\n        this.setState({edit: false});\n    }\n}\n\nEditableTranslation.defaultProps = {\n    locale: null,\n    text: null,\n    translation: null,\n    renderer() {\n        const Ui = this.props.Ui;\n        const {text, locale, translation, edit} = this.state;\n\n        let translationText = _.get(translation, 'text');\n        if (_.isEmpty(translationText)) {\n            translationText = <div className={css.noTranslationLabel}>{this.i18n('No translation')}</div>;\n        } else {\n            translationText = <div>{translationText}</div>;\n        }\n\n        return (\n            <div ref={ref => this.ref = ref} className={css.editableTranslation} onClick={edit ? _.noop : this.showForm}>\n                <label>\n                    {!_.isEmpty(_.get(translation, 'text')) && <Ui.Icon icon=\"icon-check\"/>}\n                    {locale.label}\n                </label>\n                {this.state.edit ? (\n                    <Ui.Form\n                        defaultModel={{locale: locale.key, text: _.get(translation, 'text')}}\n                        api=\"/entities/webiny/i18n-texts\"\n                        onSubmit={({model, form}) => {\n                            this.hideForm();\n                            model.text = _.trim(model.text);\n                            this.setState({translation: model}, async () => {\n                                const response = await form.api.patch(`/${text.id}/translations`, model);\n                                if (response.isError()) {\n                                    this.showForm();\n                                    return Webiny.Growl.danger(response.getMessage());\n                                }\n\n                                Webiny.Growl.success(this.i18n('Translation successfully saved!'));\n                            });\n                        }}>\n                        {() => {\n                            const shortcut = navigator.platform === 'MacIntel' ? 'Cmd + Enter' : 'Ctrl + Enter';\n                            return (\n                                <Ui.Textarea\n                                    placeholder={this.i18n('Press {shortcut} to save translation or Esc to cancel', {shortcut})}\n                                    name=\"text\"\n                                    onKeyUp={event => event.key === 'Escape' && this.hideForm()}/>\n                            );\n                        }}\n                    </Ui.Form>\n                ) : translationText}\n            </div>\n        );\n    }\n};\n\nexport default Webiny.createComponent(EditableTranslation, {\n    modulesProp: 'Ui',\n    modules: ['Form', 'Textarea', 'Form', 'Icon']\n});\n"]}