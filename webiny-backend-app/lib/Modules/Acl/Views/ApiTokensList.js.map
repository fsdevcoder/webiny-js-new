{"version":3,"sources":["../../../../src/Modules/Acl/Views/ApiTokensList.jsx"],"names":["ApiTokensList","props","state","apiToken","Api","Endpoint","get","then","apiResponse","isError","setState","getData","Ui","View","defaultProps","renderer","Table","List","listProps","ref","apiTokensList","api","fields","searchFields","connectToRouter","perPage","systemApiToken","show","showView","i18n","apply","data","token","description","id","requests","value","loadData"],"mappings":"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","file":"ApiTokensList.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport ApiTokenModal from './Modal/ApiTokenModal';\nimport SystemApiTokenModal from './Modal/SystemApiToken';\n\n/**\n * @i18n.namespace Webiny.Backend.Acl.ApiTokensList\n */\nclass ApiTokensList extends Webiny.Ui.View {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            apiToken: null\n        };\n    }\n\n    componentWillMount() {\n        super.componentWillMount();\n        new Webiny.Api.Endpoint('/services/webiny/acl').get('token').then(apiResponse => {\n            if (!apiResponse.isError()) {\n                this.setState({apiToken: apiResponse.getData('token')});\n            }\n        });\n    }\n}\n\nApiTokensList.defaultProps = {\n    renderer() {\n        return (\n            <Webiny.Ui.LazyLoad modules={['ViewSwitcher', 'View', 'Button', 'Icon', 'List', 'Input', 'Link']}>\n                {(Ui) => {\n                    const Table = Ui.List.Table;\n\n                    const listProps = {\n                        ref: ref => this.apiTokensList = ref,\n                        api: '/entities/webiny/api-tokens',\n                        fields: '*,createdOn',\n                        searchFields: 'owner,token',\n                        connectToRouter: true,\n                        perPage: 100\n                    };\n\n                    let systemApiToken = null;\n                    if (this.state.apiToken) {\n                        systemApiToken = (\n                            <Ui.Button type=\"secondary\" align=\"right\" onClick={() => this.systemApiToken.show()}>\n                                <Ui.Icon icon=\"fa-key\"/>\n                                System API token\n                            </Ui.Button>\n                        );\n                    }\n\n                    return (\n                        <Ui.ViewSwitcher>\n                            <Ui.ViewSwitcher.View view=\"tokensListView\" defaultView>\n                                {({showView}) => (\n                                    <Ui.View.List>\n                                        <Ui.View.Header\n                                            title={this.i18n('ACL - API Tokens')}\n                                            description={this.i18n('If you want to grant access to your API to 3rd party clients, create an API token for them.')}>\n                                            <Ui.Button\n                                                type=\"primary\"\n                                                align=\"right\"\n                                                onClick={showView('tokenModalView')}\n                                                icon=\"icon-plus-circled\"\n                                                label={this.i18n('Create new token')}/>\n                                            {systemApiToken}\n                                            <SystemApiTokenModal\n                                                ref={ref => this.systemApiToken = ref}\n                                                token={this.state.apiToken}\n                                                createToken={showView('tokenModalView')}/>\n                                        </Ui.View.Header>\n                                        <Ui.View.Body>\n                                            <Ui.List {...listProps}>\n                                                <Ui.List.FormFilters>\n                                                    {({apply}) => (\n                                                        <Ui.Input\n                                                            placeholder={this.i18n('Search by owner or token')}\n                                                            name=\"_searchQuery\"\n                                                            onEnter={apply()}/>\n                                                    )}\n                                                </Ui.List.FormFilters>\n                                                <Table>\n                                                    <Table.Row>\n                                                        <Table.Field name=\"token\" align=\"left\" label={this.i18n('Token')}>\n                                                            {({data}) => (\n                                                                <Ui.Link onClick={() => showView('tokenModalView')({data})}>\n                                                                    <strong>{data.token}</strong><br/>\n                                                                    {data.description}\n                                                                </Ui.Link>\n                                                            )}\n                                                        </Table.Field>\n                                                        <Table.Field name=\"owner\" align=\"left\" label={this.i18n('Owner')} sort=\"owner\"/>\n                                                        <Table.TimeAgoField\n                                                            name=\"lastActivity\"\n                                                            align=\"center\"\n                                                            label={this.i18n('Last activity')}\n                                                            sort=\"lastActivity\"/>\n                                                        <Table.Field name=\"requests\" align=\"center\" label={this.i18n('Total Requests')} sort=\"requests\">\n                                                            {({data}) => (\n                                                                <Ui.Link route=\"ApiLogs.List\" params={{token: data.id}}>\n                                                                    {data.requests}\n                                                                </Ui.Link>\n                                                            )}\n                                                        </Table.Field>\n                                                        <Table.TimeAgoField\n                                                            name=\"createdOn\"\n                                                            align=\"center\"\n                                                            label={this.i18n('Created On')}\n                                                            sort=\"createdOn\"/>\n                                                        <Table.ToggleField\n                                                            name=\"enabled\"\n                                                            label={this.i18n('Enabled')}\n                                                            sort=\"enabled\"\n                                                            align=\"center\"\n                                                            message={({value}) => {\n                                                                if (!value) {\n                                                                    return (\n                                                                        <span>\n                                                                            {this.i18n(`This will disable API token and prevent it's bearer from using your API!`)}\n                                                                            <br/>{this.i18n('Are you sure you want to disable it?')}\n                                                                        </span>\n                                                                    );\n                                                                }\n                                                            }}/>\n                                                        <Table.Actions>\n                                                            <Table.EditAction label={this.i18n('Edit')} onClick={showView('tokenModalView')}/>\n                                                            <Table.DeleteAction/>\n                                                        </Table.Actions>\n                                                    </Table.Row>\n                                                    <Table.Footer/>\n                                                </Table>\n                                                <Ui.List.Pagination/>\n                                            </Ui.List>\n                                        </Ui.View.Body>\n                                    </Ui.View.List>\n                                )}\n                            </Ui.ViewSwitcher.View>\n                            <Ui.ViewSwitcher.View view=\"tokenModalView\" modal>\n                                {({showView, data: {data}}) => (\n                                    <ApiTokenModal\n                                        {...{showView,data}}\n                                        refreshTokens={() => this.apiTokensList.loadData()}/>\n                                )}\n                            </Ui.ViewSwitcher.View>\n                        </Ui.ViewSwitcher>\n                    );\n                }}\n            </Webiny.Ui.LazyLoad>\n        );\n    }\n};\n\nexport default ApiTokensList;"]}