{"version":3,"sources":["../../../../src/Modules/Acl/Views/ApiLogsList.jsx"],"names":["ApiLogsList","props","state","token","tokens","systemToken","id","description","incognitoRequests","setToken","Router","getParams","prepareTokenOptions","setState","loadToken","Api","Endpoint","get","_fields","then","apiResponse","getData","options","isError","push","map","row","user","createdBy","request","method","userLabel","tokenLabel","Ui","isNil","owner","firstName","lastName","email","url","option","desc","data","View","defaultProps","renderer","listProps","api","fields","query","sort","searchFields","layout","connectToRouter","title","i18n","list","apply","renderTokenOption","item","length","renderUrlField","createdOn","JSON","stringify","createComponent","modulesProp","modules"],"mappings":"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","file":"ApiLogsList.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {Webiny} from 'webiny-client';\n\n/**\n * @i18n.namespace Webiny.Backend.Acl.ApiLogsList\n */\nclass ApiLogsList extends Webiny.Ui.View {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            token: null,\n            tokens: []\n        };\n\n        this.systemToken = {\n            id: 'system',\n            description: 'System Token'\n        };\n\n        this.incognitoRequests = {\n            id: 'incognito',\n            description: 'Incognito Requests'\n        };\n    }\n\n    componentWillMount() {\n        super.componentWillMount();\n\n        // Set requested token data to render view title\n        this.setToken(Webiny.Router.getParams('token'));\n\n        this.prepareTokenOptions();\n    }\n\n    componentWillReceiveProps(props) {\n        super.componentWillReceiveProps(props);\n        this.setToken(Webiny.Router.getParams('token'));\n    }\n\n    setToken(token) {\n        if (!token) {\n            return this.setState({token: null});\n        }\n\n        if (token === 'system') {\n            this.setState({token: this.systemToken});\n        } else if (token === 'incognito') {\n            this.setState({token: this.incognitoRequests});\n        } else {\n            this.loadToken(token);\n        }\n    }\n\n    loadToken(id) {\n        return new Webiny.Api.Endpoint('/entities/webiny/api-tokens').get(id, {_fields: 'owner,description'}).then(apiResponse => {\n            this.setState({token: apiResponse.getData('entity')});\n        });\n    }\n\n    prepareTokenOptions() {\n        const options = [this.incognitoRequests];\n        // Check if current user has permissions to view system token and its logs\n        return new Webiny.Api.Endpoint('/services/webiny/acl').get('token').then(apiResponse => {\n            if (!apiResponse.isError()) {\n                // Great, the user can view system token\n                options.push(this.systemToken);\n            }\n\n            // Load other API tokens\n            return new Webiny.Api.Endpoint('/entities/webiny/api-tokens').get('/', {_fields: 'id,owner,description'}).then(apiResponse => {\n                if (!apiResponse.isError()) {\n                    apiResponse.getData('list').map(token => options.push(token));\n                }\n                this.setState({tokens: options});\n            });\n        });\n    }\n\n    renderUrlField(row) {\n        const {createdBy: user, token, request, method} = row;\n        let userLabel = null;\n        let tokenLabel = null;\n\n        const {Ui} = this.props;\n\n        if (!_.isNil(token)) {\n            if (token === 'system') {\n                tokenLabel = (\n                    <Ui.Label type=\"error\" inline>System token</Ui.Label>\n                );\n            } else {\n                tokenLabel = (\n                    <Ui.Label type=\"success\" inline>\n                        {token.description} ({token.owner})\n                    </Ui.Label>\n                );\n            }\n        }\n\n        if (!_.isNil(user) && !tokenLabel) {\n            userLabel = (\n                <Ui.Label type=\"default\" inline>\n                    {user.firstName} {user.lastName} ({user.email})\n                </Ui.Label>\n            );\n        }\n\n        if (!user && !token) {\n            tokenLabel = (\n                <Ui.Label type=\"default\" inline>Incognito</Ui.Label>\n            );\n        }\n\n        return (\n            <field>\n                {request.url}<br/>\n                <Ui.Label type=\"info\" inline>{method}</Ui.Label>\n                {userLabel}\n                {tokenLabel}\n            </field>\n        );\n    }\n\n    renderTokenOption({option}) {\n        let desc = option.data.description;\n        if (option.data.owner) {\n            desc += ` (${option.data.owner})`;\n        }\n        return desc;\n    }\n}\n\nApiLogsList.defaultProps = {\n    renderer() {\n        const listProps = {\n            api: '/entities/webiny/api-logs',\n            fields: '*,createdOn,createdBy[id,firstName,lastName,email],token[id,description,owner]',\n            query: {\n                token: Webiny.Router.getParams('token')\n            },\n            sort: '-createdOn',\n            searchFields: 'request.method,request.url',\n            layout: null,\n            connectToRouter: true\n        };\n\n        const {Ui} = this.props;\n\n        let title = null;\n        if (this.state.token) {\n            title = this.state.token.description;\n            if (this.state.token.owner) {\n                title += ` (${this.state.token.owner})`;\n            }\n        }\n\n        return (\n            <Ui.View.List>\n                <Ui.View.Header\n                    title={this.state.token ? this.i18n(`ACL - API Logs: {title}`, {title}) : this.i18n('ACL - API Logs')}\n                    description={this.i18n('Here you can view all API request logs.')}/>\n                <Ui.View.Body>\n                    <Ui.List {...listProps}>\n                        {({list}) => {\n                            return (\n                                <Ui.Grid.Row>\n                                    <Ui.Grid.Col all={12}>\n                                        <Ui.List.FormFilters>\n                                            {({apply}) => (\n                                                <Ui.Grid.Row>\n                                                    <Ui.Grid.Col all={3}>\n                                                        <Ui.Input\n                                                            name=\"_searchQuery\"\n                                                            placeholder={this.i18n('Search by method or URL')}\n                                                            onEnter={apply()}/>\n                                                    </Ui.Grid.Col>\n                                                    <Ui.Grid.Col all={3}>\n                                                        <Ui.Select\n                                                            api=\"/entities/webiny/api-logs/methods\"\n                                                            name=\"method\"\n                                                            placeholder={this.i18n('Filter by HTTP method')}\n                                                            allowClear\n                                                            onChange={apply()}/>\n                                                    </Ui.Grid.Col>\n                                                    <Ui.Grid.Col all={3}>\n                                                        <Ui.Select\n                                                            options={this.state.tokens}\n                                                            optionRenderer={this.renderTokenOption}\n                                                            selectedRenderer={this.renderTokenOption}\n                                                            name=\"token\"\n                                                            placeholder={this.i18n('Filter by token')}\n                                                            allowClear\n                                                            onChange={apply()}/>\n                                                    </Ui.Grid.Col>\n                                                    <Ui.Grid.Col all={3}>\n                                                        <Ui.Search\n                                                            api=\"/entities/webiny/users\"\n                                                            fields=\"id,firstName,lastName,email\"\n                                                            searchFields=\"firstName,lastName,email\"\n                                                            optionRenderer={({option: {data: item}}) => `${item.firstName} ${item.lastName} (${item.email})`}\n                                                            selectedRenderer={({option: {data: item}}) => `${item.firstName} ${item.lastName} (${item.email})`}\n                                                            name=\"createdBy\"\n                                                            placeholder={this.i18n('Filter by user')}\n                                                            onChange={apply()}/>\n                                                    </Ui.Grid.Col>\n                                                </Ui.Grid.Row>\n                                            )}\n                                        </Ui.List.FormFilters>\n                                    </Ui.Grid.Col>\n                                    <Ui.Grid.Col all={12}>\n                                        <Ui.List.Loader/>\n                                        <Ui.List.Table.Empty renderIf={!list.length}/>\n                                        <Ui.ExpandableList>\n                                            {list.map(row => {\n                                                return (\n                                                    <Ui.ExpandableList.Row key={row.id}>\n                                                        <Ui.ExpandableList.Field all={9} name=\"URL\" className=\"text-left\">\n                                                            {this.renderUrlField(row)}\n                                                        </Ui.ExpandableList.Field>\n                                                        <Ui.ExpandableList.Field all={3} name=\"Created On\" className=\"text-center\">\n                                                            <span>\n                                                                <Ui.Filters.TimeAgo value={row.createdOn}/>\n                                                                <br/>\n                                                                <Ui.Filters.DateTime value={row.createdOn}/>\n                                                            </span>\n                                                        </Ui.ExpandableList.Field>\n                                                        <Ui.ExpandableList.RowDetailsList title={row.request.url}>\n                                                            <Ui.CodeHighlight language=\"json\">\n                                                                {JSON.stringify(row.request, null, 2)}\n                                                            </Ui.CodeHighlight>\n                                                        </Ui.ExpandableList.RowDetailsList>\n                                                    </Ui.ExpandableList.Row>\n                                                );\n                                            })}\n                                        </Ui.ExpandableList>\n                                    </Ui.Grid.Col>\n                                    <Ui.Grid.Col all={12}>\n                                        <Ui.List.Pagination/>\n                                    </Ui.Grid.Col>\n                                </Ui.Grid.Row>\n                            );\n                        }}\n                    </Ui.List>\n                </Ui.View.Body>\n            </Ui.View.List>\n        );\n    }\n};\n\nexport default Webiny.createComponent(ApiLogsList, {\n    modulesProp: 'Ui',\n    modules: ['View', 'Link', 'List', 'Grid', 'Input', 'ExpandableList', 'Label', 'CodeHighlight', 'Select', 'Search', 'Filters']\n});"]}