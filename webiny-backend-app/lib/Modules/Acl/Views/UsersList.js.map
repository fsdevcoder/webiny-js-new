{"version":3,"sources":["../../../../src/Modules/Acl/Views/UsersList.jsx"],"names":["UsersList","bindMethods","row","fullName","trim","data","firstName","lastName","isEmpty","email","id","Ui","View","defaultProps","renderer","listProps","api","fields","connectToRouter","searchFields","props","List","Link","Icon","Input","Table","roles","i18n","permissions","apply","renderFullNameField","value","createComponent","modules"],"mappings":"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","file":"UsersList.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport _ from 'lodash';\n\n/**\n * @i18n.namespace Webiny.Backend.Acl.UsersList\n */\nclass UsersList extends Webiny.Ui.View {\n    constructor() {\n        super();\n        this.bindMethods('renderFullNameField');\n    }\n\n    renderFullNameField(row) {\n        let fullName = _.trim(`${row.data.firstName} ${row.data.lastName}`);\n        fullName = _.isEmpty(fullName) ? row.data.email : fullName;\n        return (\n            <span>\n                <strong>{fullName}</strong><br/>{row.data.id}\n            </span>\n        );\n    }\n}\n\nUsersList.defaultProps = {\n    renderer() {\n        const listProps = {\n            api: '/entities/webiny/users',\n            fields: 'id,enabled,firstName,lastName,email,createdOn,gravatar',\n            connectToRouter: true,\n            searchFields: 'firstName,lastName,email'\n        };\n\n        const {View, List, Link, Icon, Input} = this.props;\n        const Table = List.Table;\n\n        const roles = <Link route=\"UserRoles.List\">{this.i18n('Roles')}</Link>;\n        const permissions = <Link route=\"UserPermissions.List\">{this.i18n('Permissions')}</Link>;\n\n        return (\n            <View.List>\n                <View.Header\n                    title={this.i18n('ACL - Users')}\n                    description={\n                        <span>\n                            {this.i18n(`Once your system {permissions} and {roles} are defined,\n                                        you can create your system users here.`, {permissions, roles})}\n                        </span>}>\n                    <Link type=\"primary\" route=\"Users.Create\" align=\"right\">\n                        <Icon icon=\"icon-plus-circled\"/>\n                        {this.i18n('Create user')}\n                    </Link>\n                </View.Header>\n                <View.Body>\n                    <List {...listProps}>\n                        <List.FormFilters>\n                            {({apply}) => (\n                                <Input\n                                    name=\"_searchQuery\"\n                                    placeholder={this.i18n('Search by name or email')}\n                                    onEnter={apply()}/>\n                            )}\n                        </List.FormFilters>\n                        <Table>\n                            <Table.Row>\n                                <Table.GravatarField name=\"gravatar\"/>\n                                <Table.Field name=\"firstName\" label={this.i18n('First Name')} sort=\"firstName\" route=\"Users.Edit\">\n                                    {this.renderFullNameField}\n                                </Table.Field>\n                                <Table.Field name=\"email\" sort=\"email\" label={this.i18n('Email')}/>\n                                <Table.ToggleField\n                                    name=\"enabled\"\n                                    label={this.i18n('Status')}\n                                    sort=\"enabled\"\n                                    align=\"center\"\n                                    message={({value}) => {\n                                        if (!value) {\n                                            return this.i18n('This will disable user\\'s account and prevent him from logging in!')\n                                        }\n                                        return null;\n                                    }}/>\n                                <Table.DateField name=\"createdOn\" label={this.i18n('Created On')} sort=\"createdOn\"/>\n                                <Table.Actions>\n                                    <Table.EditAction route=\"Users.Edit\"/>\n                                    <Table.DeleteAction/>\n                                </Table.Actions>\n                            </Table.Row>\n                            <Table.Footer/>\n                        </Table>\n                        <List.Pagination/>\n                    </List>\n                </View.Body>\n            </View.List>\n        );\n    }\n};\n\nexport default Webiny.createComponent(UsersList, {\n    modules: ['View', 'List', 'Link', 'Icon', 'Input']\n});"]}