{"version":3,"sources":["../../../../src/Modules/Acl/Views/UserRoleGroupsList.jsx"],"names":["UserRoleGroupsList","Ui","View","defaultProps","renderer","listProps","ref","list","api","fields","connectToRouter","query","_sort","searchFields","perPage","props","Table","List","users","i18n","roles","showView","apply","data","id","name","description","loadData","createComponent","modulesProp","modules"],"mappings":"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","file":"UserRoleGroupsList.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport ExportModal from './Modal/ExportModal';\nimport ImportModal from './Modal/ImportModal';\n\n/**\n * @i18n.namespace Webiny.Backend.Acl.UserRoleGroupsList\n */\nclass UserRoleGroupsList extends Webiny.Ui.View {\n}\n\nUserRoleGroupsList.defaultProps = {\n    renderer() {\n        const listProps = {\n            ref: ref => this.list = ref,\n            api: '/entities/webiny/user-role-groups',\n            fields: 'id,name,slug,description,createdOn',\n            connectToRouter: true,\n            query: {_sort: 'name'},\n            searchFields: 'name,slug,description',\n            perPage: 25\n        };\n\n        const {Ui} = this.props;\n        const Table = Ui.List.Table;\n\n        const users = <Ui.Link route=\"Users.List\">{this.i18n('Users')}</Ui.Link>;\n        const roles = <Ui.Link route=\"UserRoles.List\">{this.i18n('Roles')}</Ui.Link>;\n        return (\n            <Ui.ViewSwitcher>\n                <Ui.ViewSwitcher.View view=\"listView\" defaultView>\n                    {({showView}) => (\n                        <Ui.View.List>\n                            <Ui.View.Header\n                                title={this.i18n('ACL - Role Groups')}\n                                description={(\n                                    <span>\n                                        {this.i18n(`Role Groups are a simple way to control what set of roles certain users have.\n                                                    Create a role group with a set of {roles} and then assign role groups to {users}.`, {roles, users})}\n                                    </span>\n                                )}>\n                                <Ui.ButtonGroup>\n                                    <Ui.Link type=\"primary\" route=\"UserRoleGroups.Create\">\n                                        <Ui.Icon icon=\"icon-plus-circled\"/>\n                                        {this.i18n('Create')}\n                                    </Ui.Link>\n                                    <Ui.Button\n                                        type=\"secondary\"\n                                        onClick={showView('importModal')}\n                                        icon=\"fa-upload\"\n                                        label={this.i18n('Import')}/>\n                                </Ui.ButtonGroup>\n                            </Ui.View.Header>\n                            <Ui.View.Body>\n                                <Ui.List {...listProps}>\n                                    <Ui.List.FormFilters>\n                                        {({apply}) => (\n                                            <Ui.Grid.Row>\n                                                <Ui.Grid.Col all={12}>\n                                                    <Ui.Input\n                                                        name=\"_searchQuery\"\n                                                        placeholder={this.i18n('Search by name, description or slug')}\n                                                        onEnter={apply()}/>\n                                                </Ui.Grid.Col>\n                                            </Ui.Grid.Row>\n                                        )}\n                                    </Ui.List.FormFilters>\n                                    <Table>\n                                        <Table.Row>\n                                            <Table.Field name=\"name\" label={this.i18n('Name')} sort=\"name\">\n                                                {({data}) => (\n                                                    <span>\n                                                        <Ui.Link route=\"UserRoleGroups.Edit\" params={{id: data.id}}>\n                                                            <strong>{data.name}</strong>\n                                                        </Ui.Link>\n                                                        <br/>\n                                                        {data.description}\n                                                    </span>\n                                                )}\n                                            </Table.Field>\n                                            <Table.Field name=\"slug\" label={this.i18n('Slug')} sort=\"slug\"/>\n                                            <Table.Actions>\n                                                <Table.EditAction route=\"UserRoleGroups.Edit\"/>\n                                                <Table.Action\n                                                    label={this.i18n('Export')}\n                                                    icon=\"fa-download\"\n                                                    onClick={showView('exportModal')}/>\n                                                <Table.DeleteAction/>\n                                            </Table.Actions>\n                                        </Table.Row>\n                                    </Table>\n                                    <Ui.List.Pagination/>\n                                </Ui.List>\n                            </Ui.View.Body>\n                        </Ui.View.List>\n                    )}\n                </Ui.ViewSwitcher.View>\n\n                <Ui.ViewSwitcher.View view=\"exportModal\" modal>\n                    {({data: {data}}) => (\n                        <ExportModal\n                            data={data}\n                            map=\"roles\"\n                            api=\"/entities/webiny/user-role-groups\"\n                            fields=\"name,slug,description,roles\"\n                            label={this.i18n('Role Group')}/>\n                    )}\n                </Ui.ViewSwitcher.View>\n\n                <Ui.ViewSwitcher.View view=\"importModal\" modal>\n                    {() => (\n                        <ImportModal\n                            api=\"/entities/webiny/user-role-groups\"\n                            label={this.i18n('Role Group')}\n                            onImported={() => this.list.loadData()}/>\n                    )}\n                </Ui.ViewSwitcher.View>\n            </Ui.ViewSwitcher>\n        );\n    }\n};\n\nexport default Webiny.createComponent(UserRoleGroupsList, {\n    modulesProp: 'Ui',\n    modules: ['ViewSwitcher', 'View', 'Link', 'Icon', 'Grid', 'Input', 'List', 'Button', 'ButtonGroup']\n});"]}