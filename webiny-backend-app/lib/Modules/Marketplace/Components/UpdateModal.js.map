{"version":3,"sources":["../../../../src/Modules/Marketplace/Components/UpdateModal.jsx"],"names":["InstallModal","props","state","messages","started","ended","progress","finished","bindMethods","__REACT_HOT_LOADER__","Progress","setState","api","Api","Endpoint","currentResponseLength","push","message","id","setConfig","downloadProgress","response","e","currentTarget","length","newLength","substring","split","filter","l","map","res","JSON","parse","line","roles","Model","set","parseInt","unshift","lastId","get","app","then","setTimeout","hide","onUpdated","resetState","Modal","Button","Link","Grid","Logic","Alert","onClose","i18n","startUpdate","height","overflow","fontSize","logger","ref","m","i","Ui","ModalComponent","createComponent","styles","modules"],"mappings":"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","file":"UpdateModal.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport styles from './../Views/styles.css';\n\n/**\n * @i18n.namespace Webiny.Backend.Marketplace.InstallModal\n */\nclass InstallModal extends Webiny.Ui.ModalComponent {\n    constructor(props) {\n        super(props);\n\n        // started - installation has started\n        // ended - API call has ended\n        // finished - installation reached 100%\n\n        this.state = {messages: [], started: false, ended: false, progress: 0, finished: false};\n\n        this.bindMethods('startUpdate,onClose');\n    }\n\n    startUpdate() {\n        // Before we begin the update - we need to disable React Hot Loader to prevent possible errors during installation since webpack is still watching\n        __REACT_HOT_LOADER__ = null;\n        const {Progress} = this.props;\n        this.setState({started: true});\n        const api = new Webiny.Api.Endpoint('/services/webiny/marketplace');\n        let currentResponseLength = false;\n\n        // Add initial message\n        const messages = this.state.messages;\n        messages.push({message: 'Fetching app details...', id: 0});\n        this.setState({messages});\n\n        api.setConfig({\n            downloadProgress: e => {\n                let response = e.currentTarget.response || '';\n                if (currentResponseLength === false) {\n                    currentResponseLength = response.length;\n                }\n                else {\n                    const newLength = response.length;\n                    response = response.substring(currentResponseLength);\n                    currentResponseLength = newLength;\n                }\n\n                // We may receive multiple messages in a single line so we need to handle them using a delimiter\n                response.split(\"_-_\").filter(l => l.length).map(line => {\n                    try {\n                        const res = JSON.parse(line);\n                        if (res.roles) {\n                            Webiny.Model.set(['User', 'roles'], res.roles);\n                        }\n\n                        if (res.progress) {\n                            this.setState(function(state){\n                                const messages = state.messages;\n                                messages[0].message = <Progress value={parseInt(res.progress)}/>;\n                                return {messages, progress: parseInt(res.progress), finished: res.progress === 100};\n                            });\n                        }\n\n                        if (res.message) {\n                            this.setState(function (state) {\n                                const messages = state.messages;\n                                messages.unshift(res);\n                                return {messages, lastId: res.id};\n                            });\n                        }\n                    } catch (e) {\n\n                    }\n                });\n            }\n        });\n\n        return api.get(`apps/${this.props.app.id}/install`).then(() => {\n            this.setState({ended: true});\n            if (this.state.finished) {\n                setTimeout(() => {\n                    this.hide().then(() => this.props.onUpdated());\n                }, 2000);\n            }\n        });\n    }\n\n    resetState() {\n        this.setState({messages: [], started: false, ended: false, progress: 0, finished: false});\n    }\n\n    show() {\n        this.resetState();\n        return super.show();\n    }\n\n    onClose() {\n        if (!this.state.started || this.state.ended) {\n            this.hide();\n        }\n    }\n\n    renderDialog() {\n        const {Modal, Button, Link, Grid, Logic, Alert} = this.props;\n\n        return (\n            <Modal.Dialog closeOnClick={!this.state.started || this.state.ended} onClose={this.onClose}>\n                <Modal.Content>\n                    <Modal.Header onClose={this.onClose} title={this.i18n('Update')}/>\n                    <Modal.Body>\n                        <Logic.Hide if={this.state.started}>\n                            <Alert type=\"warning\" title={this.i18n('Notice')}>\n                                {this.i18n('Make sure your watch process is running before updating the app.')}\n                            </Alert>\n                            <div className=\"text-center\">\n                                <Button type=\"primary\" label={this.i18n('Begin Update')} onClick={this.startUpdate}/>\n                            </div>\n                        </Logic.Hide>\n                        <Logic.Hide if={!this.state.started}>\n                            <Logic.Show if={this.state.finished}>\n                                <Alert type=\"success\" title={this.i18n('Done')}>\n                                    {this.i18n('Your app is updated!')}\n                                </Alert>\n                            </Logic.Show>\n                            <pre style={{height: 500, overflow: 'scroll', fontSize: 12}} ref={ref => this.logger = ref}>\n                            {this.state.messages.map((m, i) => (\n                                <div key={m.id}>{m.message}</div>\n                            ))}\n                            </pre>\n                        </Logic.Hide>\n                    </Modal.Body>\n                    {(!this.state.finished && this.state.ended) && (\n                        <Modal.Footer>\n                            <Button align=\"right\" label={this.i18n('Close')} onClick={this.hide}/>\n                        </Modal.Footer>\n                    )}\n                </Modal.Content>\n            </Modal.Dialog>\n        );\n    }\n}\n\nexport default Webiny.createComponent(InstallModal, {styles, modules: ['Modal', 'Button', 'Link', 'Grid', 'Logic', 'Alert', 'Progress']});"]}