{"version":3,"sources":["../../../../src/Modules/Marketplace/Components/RegisterModal.jsx"],"names":["RegisterModal","props","state","success","bindMethods","hide","then","showLogin","setState","Modal","Button","Grid","Password","Form","Link","Input","containerProps","api","Auth","getApiEndpoint","url","fields","onSubmitSuccess","onCancel","onSuccessMessage","form","i18n","submit","Icon","backLink","close","renderSuccess","renderRegisterForm","Ui","ModalComponent","createComponent","styles","modules"],"mappings":"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","file":"RegisterModal.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport styles from './../Views/styles.css';\n\n/**\n * @i18n.namespace Webiny.Backend.Marketplace.RegisterModal\n */\nclass RegisterModal extends Webiny.Ui.ModalComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            success: false\n        };\n\n        this.bindMethods('login');\n    }\n\n    login() {\n        this.hide().then(() => this.props.showLogin());\n    }\n\n    show() {\n        this.setState({success: false});\n        return super.show();\n    }\n\n    renderRegisterForm() {\n        const {Modal, Button, Grid, Password, Form, Link, Input} = this.props;\n\n        const containerProps = {\n            api: Webiny.Auth.getApiEndpoint(),\n            url: 'register',\n            fields: 'id,firstName,lastName,email',\n            onSubmitSuccess: () => this.setState({success: true}),\n            onCancel: this.hide,\n            onSuccessMessage: null\n        };\n\n\n        return (\n            <Modal.Dialog>\n                <Form {...containerProps}>\n                    {({form}) => (\n                        <Modal.Content>\n                            <Modal.Header title={this.i18n('Register')} onClose={this.hide}/>\n                            <Modal.Body>\n\n                                <Grid.Row>\n                                    <Grid.Col all={12}>\n                                        <Form.Error/>\n                                    </Grid.Col>\n                                    <Grid.Col all={6}>\n                                        <Input\n                                            placeholder={this.i18n('First Name')}\n                                            label={this.i18n('First Name')}\n                                            name=\"firstName\"\n                                            validate=\"required\"\n                                            onEnter={form.submit}/>\n                                    </Grid.Col>\n\n                                    <Grid.Col all={6}>\n                                        <Input\n                                            placeholder={this.i18n('Last Name')}\n                                            label={this.i18n('Last Name')}\n                                            name=\"lastName\"\n                                            validate=\"required\"\n                                            onEnter={form.submit}/>\n                                    </Grid.Col>\n\n                                    <Grid.Col all={12}>\n                                        <Input\n                                            placeholder={this.i18n('Email')}\n                                            label={this.i18n('Email')}\n                                            name=\"email\"\n                                            validate=\"required, email\"\n                                            onEnter={form.submit}/>\n                                    </Grid.Col>\n                                    <Grid.Col all={12}>\n                                        <Password\n                                            label={this.i18n('Password')}\n                                            placeholder={this.i18n('Password')}\n                                            name=\"password\"\n                                            validate=\"required\"\n                                            onEnter={form.submit}\n                                        />\n                                    </Grid.Col>\n                                </Grid.Row>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button\n                                    type=\"secondary\"\n                                    onClick={form.submit}\n                                    size=\"large\"\n                                    icon=\"icon-next\"\n                                    label={this.i18n('Register')}/>\n                            </Modal.Footer>\n                        </Modal.Content>\n                    )}\n                </Form>\n            </Modal.Dialog>\n\n        );\n    }\n\n    renderSuccess() {\n        const {Modal, Icon, Link} = this.props;\n\n        return (\n            <Modal.Dialog>\n                <Modal.Content>\n                    <Modal.Body>\n                        <div className=\"text-center\">\n                            <br/>\n                            <Icon type=\"success\" size=\"4x\" icon=\"fa-check-circle\" element=\"div\"/><br/>\n                            <h4>{this.i18n('Done')}</h4>\n                            <p>{this.i18n('Thanks for registering!')}</p>\n                            <p>\n                                {this.i18n('Your profile is ready, {backLink}', {\n                                    backLink: <Link className=\"text-link\" onClick={this.close}>{this.i18n('back to login page.')}</Link>\n                                })}\n                            </p>\n                        </div>\n                    </Modal.Body>\n                </Modal.Content>\n            </Modal.Dialog>\n        );\n    }\n\n    renderDialog() {\n        return this.state.success ? this.renderSuccess() : this.renderRegisterForm();\n    }\n}\n\nexport default Webiny.createComponent(RegisterModal, {\n    styles,\n    modules: ['Modal', 'Form', 'Input', 'Password', 'Button', 'Link', 'Icon', 'Grid', 'Link']\n});"]}