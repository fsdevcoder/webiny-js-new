{"version":3,"sources":["../../../../../src/Modules/Dashboard/Views/Components/Updates.jsx"],"names":["Updates","props","state","updates","loaded","dismissing","getUpdates","LocalStorage","get","lastUpdate","Date","setState","Api","Endpoint","then","apiResponse","getData","length","set","id","remove","Ui","View","defaultProps","renderer","Grid","Loader","Carousel","Link","Icon","i18n","map","link","post","refId","image","hasLink","title","content","dismissUpdate","createComponent","modules"],"mappings":"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","file":"Updates.js","sourcesContent":["import React from 'react';\nimport {Webiny} from 'webiny-client';\nimport _ from 'lodash';\n\n/**\n * @i18n.namespace Webiny.Backend.Dashboard\n */\nclass Updates extends Webiny.Ui.View {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            updates: [],\n            loaded: false,\n            dismissing: false,\n        };\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n        this.getUpdates();\n    }\n\n    getUpdates() {\n        // check local storage\n        let updates = Webiny.LocalStorage.get('dashboardUpdates');\n        if (updates) {\n            let lastUpdate = new Date() - new Date(Webiny.LocalStorage.get('dashboardLastUpdate'));\n            if (lastUpdate < 86400000) { // 24h\n                this.setState({updates: updates, loaded: true});\n                return;\n            }\n        }\n\n        // refresh dashboard updates\n        return new Webiny.Api.Endpoint('/entities/webiny/dashboard-updates').get('/latest').then(apiResponse => {\n            const updates = apiResponse.getData('list');\n            if (updates && updates.length > 0) {\n                this.setState({updates: updates, loaded: true, dismissing: false});\n            } else {\n                this.setState({updates: [], loaded: true, dismissing: false});\n            }\n\n            // store dashboard updates and the last update time\n            Webiny.LocalStorage.set('dashboardUpdates', updates);\n            Webiny.LocalStorage.set('dashboardLastUpdate', new Date());\n        });\n    }\n\n    dismissUpdate(id) {\n        this.setState({dismissing: true});\n        return new Webiny.Api.Endpoint('/entities/webiny/dashboard-updates').get('/' + id + '/dismiss').then(apiResponse => {\n            // remove local storage entries\n            Webiny.LocalStorage.remove('dashboardUpdates');\n            Webiny.LocalStorage.remove('dashboardLastUpdate');\n\n            // call the getUpdates function to refresh the dashboard list\n            this.getUpdates();\n        });\n    }\n}\n\nUpdates.defaultProps = {\n    renderer() {\n\n        const {Grid, Loader, Carousel, Link, Icon, View} = this.props;\n\n        if (!this.state.loaded) {\n            return (<Loader><span>{this.i18n('Loading your updates...')}</span></Loader>);\n        }\n\n        if (this.state.updates.length < 1) {\n            return (\n                <Grid.Row>\n                    <Grid.Col all={12}>\n                    </Grid.Col>\n                </Grid.Row>\n            );\n        }\n\n        return (\n\n            <div className=\"block block--slider\">\n\n                <div className=\"block-header\">\n                    <h4 className=\"block-title-light pull-left\">{this.i18n('Updates from webiny.com')}</h4>\n                </div>\n\n                <div className=\"block-content block-content--dynamic-height\">\n                    <div className=\"slider\">\n                        <div className=\"slides\">\n                            {this.state.dismissing && <Loader><span>{this.i18n('Loading your updates...')}</span></Loader>}\n\n                            <Carousel items={1} dots={true}>\n                                {_.get(this.state, 'updates') && this.state.updates.map(post => {\n                                    let link = \"https://www.webiny.com/r/\" + post.refId;\n                                    return (\n                                        <div className=\"slide slide--active\" key={post.id}>\n                                            {post.image && (\n                                                <div className=\"slide__image\">\n                                                    <img src={post.image}/>\n                                                </div>\n                                            )}\n                                            <div className=\"slide__content\">\n                                                <div className=\"slide__title\">\n                                                    {post.hasLink === true ?\n                                                        <a href={link} target=\"_blank\">{post.title}</a> : post.title}\n                                                </div>\n                                                <div className=\"slide__excerpt\">{post.content}</div>\n                                            </div>\n                                            <div className=\"slide__button\">\n                                                {post.hasLink && (<Link type=\"primary\" url={link} newTab={true}>{this.i18n('Learn more')}</Link>)}\n                                                <br/>\n                                                <Link className=\"dismiss\" onClick={() => {\n                                                    this.dismissUpdate(post.id)\n                                                }}>{this.i18n('Dismiss')}</Link>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </Carousel>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Webiny.createComponent(Updates, {\n    modules: ['Grid', 'Loader', 'Carousel', 'Link', 'Icon']\n});"]}