{"version":3,"sources":["../../../../../src/admin/views/pages/components/PageContentPreview.jsx"],"names":["PageContentPreview","data","widget","props","cms","services","Alert","modules","widgetData","getWidget","type","origin","wd","getEditorWidget","id","settings","preview","render","React","cloneElement","styles","content","length","emptyPlaceholder","emptyContent","blankBalloon","map","renderPreviewWidget","bind","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;;;IAEMA,kB;;;;;;;;;;4CACkBC,I,EAAM;AACtB,gBAAMC,2BAAcD,IAAd,CAAN;AADsB,yBAE4B,KAAKE,KAFjC;AAAA,gBAEFC,GAFE,UAEdC,QAFc,CAEFD,GAFE;AAAA,gBAEgBE,KAFhB,UAEKC,OAFL,CAEgBD,KAFhB;;AAGtB,gBAAME,aAAaJ,IAAIK,SAAJ,CAAcP,OAAOQ,IAArB,CAAnB;AACA,qCAAUF,UAAV,4CAA6DN,OAAOQ,IAApE;;AAEA,gBAAIR,OAAOS,MAAX,EAAmB;AACf,oBAAMC,KAAKR,IAAIS,eAAJ,CAAoBX,OAAOQ,IAA3B,EAAiC,EAAEC,QAAQT,OAAOS,MAAjB,EAAjC,CAAX;AACA,oBAAI,CAACC,EAAL,EAAS;AACL,2BACI;AAAC,6BAAD;AAAA,0BAAO,MAAM,QAAb,EAAuB,KAAKV,OAAOY,EAAnC;AAAA;AAC4B;AAAA;AAAA;AAASZ,mCAAOQ;AAAhB;AAD5B,qBADJ;AAKH;AACD,oBAAI,CAACR,OAAOD,IAAZ,EAAkB;AACdC,2BAAOD,IAAP,GAAc,yBAAYW,GAAGX,IAAf,CAAd;AACH;;AAED,oBAAI,CAACC,OAAOa,QAAZ,EAAsB;AAClBb,2BAAOa,QAAP,GAAkB,yBAAYH,GAAGG,QAAf,CAAlB;AACH;AACJ;;AAED,gBAAMC,UAAUR,WAAWN,MAAX,CAAkBe,MAAlB,CAAyBf,MAAzB,CAAhB;;AAEA,mBACI;AAAA;AAAA,kBAAK,KAAKA,OAAOY,EAAjB;AAAsBE,0BAAUE,gBAAMC,YAAN,CAAmBH,OAAnB,EAA4B,EAAEd,cAAF,EAA5B,CAAV,GAAoD;AAA1E,aADJ;AAGH;;;iCAEQ;AAAA,gBACGkB,MADH,GACc,KAAKjB,KADnB,CACGiB,MADH;;AAEL,mBACI;AAAC,+BAAD,CAAO,QAAP;AAAA;AACK,iBAAC,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,MAApB,IACG;AAAA;AAAA,sBAAK,WAAWF,OAAOG,gBAAvB;AACI;AAAA;AAAA,0BAAK,WAAWH,OAAOI,YAAvB;AACI,+DAAK,KAAKC,2BAAV,EAAwB,KAAI,EAA5B,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA;AAFJ;AADJ,iBAFR;AASK,qBAAKtB,KAAL,CAAWkB,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B,IACG,KAAKnB,KAAL,CAAWkB,OAAX,CAAmBK,GAAnB,CAAuB,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAAvB;AAVR,aADJ;AAcH;;;EAhD4BV,gBAAMW,S;;kBAmDxB,gCAAgB7B,kBAAhB,EAAoC,EAAEO,SAAS,CAAC,OAAD,CAAX,EAAsBF,UAAU,CAAC,KAAD,CAAhC,EAApC,C","file":"PageContentPreview.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport invariant from \"invariant\";\nimport { createComponent } from \"webiny-app\";\nimport blankBalloon from \"./assets/blank-state-balloon.jpg\";\n\nclass PageContentPreview extends React.Component {\n    renderPreviewWidget(data) {\n        const widget = { ...data };\n        const { services: { cms }, modules: { Alert } } = this.props;\n        const widgetData = cms.getWidget(widget.type);\n        invariant(widgetData, `Missing widget definition for type \"${widget.type}\"`);\n\n        if (widget.origin) {\n            const wd = cms.getEditorWidget(widget.type, { origin: widget.origin });\n            if (!wd) {\n                return (\n                    <Alert type={\"danger\"} key={widget.id}>\n                        Missing widget for type <strong>{widget.type}</strong>\n                    </Alert>\n                );\n            }\n            if (!widget.data) {\n                widget.data = _.cloneDeep(wd.data);\n            }\n\n            if (!widget.settings) {\n                widget.settings = _.cloneDeep(wd.settings);\n            }\n        }\n\n        const preview = widgetData.widget.render(widget);\n\n        return (\n            <div key={widget.id}>{preview ? React.cloneElement(preview, { widget }) : null}</div>\n        );\n    }\n\n    render() {\n        const { styles } = this.props;\n        return (\n            <React.Fragment>\n                {!this.props.content.length && (\n                    <div className={styles.emptyPlaceholder}>\n                        <div className={styles.emptyContent}>\n                            <img src={blankBalloon} alt=\"\" />\n                            <h3>This revision seems to be empty!</h3>\n                        </div>\n                    </div>\n                )}\n                {this.props.content.length > 0 &&\n                    this.props.content.map(this.renderPreviewWidget.bind(this))}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default createComponent(PageContentPreview, { modules: [\"Alert\"], services: [\"cms\"] });\n"]}