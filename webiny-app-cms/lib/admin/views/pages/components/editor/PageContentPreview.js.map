{"version":3,"sources":["../../../../../../src/admin/views/pages/components/editor/PageContentPreview.jsx"],"names":["PageContentPreview","widget","cms","props","services","widgetData","getWidget","type","origin","wd","getEditorWidget","data","settings","id","cloneElement","render","styles","content","length","emptyPlaceholder","emptyContent","map","renderPreviewWidget","bind","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;;;IAEMA,kB;;;;;;;;;;4CACkBC,M,EAAQ;AAAA,gBAChBC,GADgB,GACR,KAAKC,KAAL,CAAWC,QADH,CAChBF,GADgB;;AAExB,gBAAMG,aAAaH,IAAII,SAAJ,CAAcL,OAAOM,IAArB,CAAnB;AACA,qCAAUF,UAAV,4CAA6DJ,OAAOM,IAApE;;AAEA,gBAAIN,OAAOO,MAAX,EAAmB;AACf,oBAAMC,KAAKP,IAAIQ,eAAJ,CAAoBT,OAAOM,IAA3B,EAAiC,EAAEC,QAAQP,OAAOO,MAAjB,EAAjC,CAAX;AACA,oBAAI,CAACP,OAAOU,IAAZ,EAAkB;AACdV,2BAAOU,IAAP,GAAc,yBAAYF,GAAGE,IAAf,CAAd;AACH;;AAED,oBAAI,CAACV,OAAOW,QAAZ,EAAsB;AAClBX,2BAAOW,QAAP,GAAkB,yBAAYH,GAAGG,QAAf,CAAlB;AACH;AACJ;;AAED,mBACI;AAAA;AAAA,kBAAK,KAAKX,OAAOY,EAAjB;AACK,gCAAMC,YAAN,CAAmBT,WAAWJ,MAAX,CAAkBc,MAAlB,CAAyBd,MAAzB,CAAnB,EAAqD,EAAEA,cAAF,EAArD;AADL,aADJ;AAKH;;;iCAEQ;AAAA,gBACGe,MADH,GACc,KAAKb,KADnB,CACGa,MADH;;AAEL,mBACI;AAAA,gCAAO,QAAP;AAAA;AACK,iBAAC,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,MAApB,IACG;AAAA;AAAA,sBAAK,WAAWF,OAAOG,gBAAvB;AACI;AAAA;AAAA,0BAAK,WAAWH,OAAOI,YAAvB;AACI,+DAAK,gCAAL,EAAwB,KAAI,EAA5B,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA;AAFJ;AADJ,iBAFR;AASK,qBAAKjB,KAAL,CAAWc,OAAX,CAAmBC,MAAnB,GAA4B,CAA5B,IACG,KAAKf,KAAL,CAAWc,OAAX,CAAmBI,GAAnB,CAAuB,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAAvB;AAVR,aADJ;AAcH;;;EAxC4B,gBAAMC,S;;kBA2CxB,gCAAgBxB,kBAAhB,EAAoC,EAAEI,UAAU,CAAC,KAAD,CAAZ,EAApC,C","file":"PageContentPreview.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport invariant from \"invariant\";\nimport { createComponent } from \"webiny-app\";\nimport blankBalloon from \"./assets/blank-state-balloon.jpg\";\n\nclass PageContentPreview extends React.Component {\n    renderPreviewWidget(widget) {\n        const { cms } = this.props.services;\n        const widgetData = cms.getWidget(widget.type);\n        invariant(widgetData, `Missing widget definition for type \"${widget.type}\"`);\n\n        if (widget.origin) {\n            const wd = cms.getEditorWidget(widget.type, { origin: widget.origin });\n            if (!widget.data) {\n                widget.data = _.cloneDeep(wd.data);\n            }\n\n            if (!widget.settings) {\n                widget.settings = _.cloneDeep(wd.settings);\n            }\n        }\n\n        return (\n            <div key={widget.id}>\n                {React.cloneElement(widgetData.widget.render(widget), { widget })}\n            </div>\n        );\n    }\n\n    render() {\n        const { styles } = this.props;\n        return (\n            <React.Fragment>\n                {!this.props.content.length && (\n                    <div className={styles.emptyPlaceholder}>\n                        <div className={styles.emptyContent}>\n                            <img src={blankBalloon} alt=\"\" />\n                            <h3>This revision seems to be empty!</h3>\n                        </div>\n                    </div>\n                )}\n                {this.props.content.length > 0 &&\n                    this.props.content.map(this.renderPreviewWidget.bind(this))}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default createComponent(PageContentPreview, { services: [\"cms\"] });\n"]}