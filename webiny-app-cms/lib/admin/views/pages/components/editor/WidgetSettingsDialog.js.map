{"version":3,"sources":["../../../../../../src/admin/views/pages/components/editor/WidgetSettingsDialog.jsx"],"names":["WidgetSettingsDialog","props","modules","Modal","Button","Form","Alert","cms","services","widget","onChange","isGlobal","editorWidget","getEditorWidget","type","title","origin","settings","hide","then","model","submit","Bind","React","cloneElement","renderSettings","EditorWidgetSettings","Component","ModalComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;IAEMA,oB;;;;;;;;;;iCACO;AAAA;;AAAA,yBAOD,KAAKC,KAPJ;AAAA,wCAEDC,OAFC;AAAA,gBAEUC,KAFV,kBAEUA,KAFV;AAAA,gBAEiBC,MAFjB,kBAEiBA,MAFjB;AAAA,gBAEyBC,IAFzB,kBAEyBA,IAFzB;AAAA,gBAE+BC,KAF/B,kBAE+BA,KAF/B;AAAA,gBAGWC,GAHX,UAGDC,QAHC,CAGWD,GAHX;AAAA,gBAIDE,MAJC,UAIDA,MAJC;AAAA,gBAKDC,QALC,UAKDA,QALC;AAAA,gBAMDC,QANC,UAMDA,QANC;;;AASL,gBAAIC,eAAeL,IAAIM,eAAJ,CAAoBJ,OAAOK,IAA3B,CAAnB;;AAEA,gBAAIC,QAAQ,iBAAZ;AACA,gBAAIN,OAAOO,MAAX,EAAmB;AACfD,wBAAQ,wBAAR;AACH;;AAED,mBACI;AAAC,qBAAD,CAAO,MAAP;AAAA;AACI;AAAC,wBAAD;AAAA;AACI,+BAAON,OAAOQ,QAAP,IAAmB,EAD9B;AAEI,kCAAU;AAAA,mCAAS,OAAKhB,KAAL,CAAWiB,IAAX,GAAkBC,IAAlB,CAAuB;AAAA,uCAAM,OAAKlB,KAAL,CAAWS,QAAX,CAAoBU,KAApB,CAAN;AAAA,6BAAvB,CAAT;AAAA;AAFd;AAIK;AAAA,4BAAGA,KAAH,QAAGA,KAAH;AAAA,4BAAUC,MAAV,QAAUA,MAAV;AAAA,4BAAkBC,IAAlB,QAAkBA,IAAlB;AAAA,+BACG;AAAC,iCAAD,CAAO,OAAP;AAAA;AACI,0DAAC,KAAD,CAAO,MAAP,IAAc,OAAOP,KAArB,EAA4B,SAAS,OAAKd,KAAL,CAAWiB,IAAhD,GADJ;AAEI;AAAC,qCAAD,CAAO,IAAP;AAAA;AACKT,uCAAOO,MAAP,IACG;AAAC,yCAAD;AAAA,sCAAO,MAAM,SAAb;AAAA;AAAA,iCAFR;AAMKO,gDAAMC,YAAN,CACGZ,aAAaH,MAAb,CAAoBgB,cAApB,CAAmC;AAC/BC,wFAD+B;AAE/BjB;AAF+B,iCAAnC,CADH,EAKG;AACIa,8CADJ;AAEIL,8CAAUG,KAFd;AAGIX,kDAHJ;AAIIC,sDAJJ;AAKIC;AALJ,iCALH;AANL,6BAFJ;AAsBI;AAAC,qCAAD,CAAO,MAAP;AAAA,kCAAc,OAAM,OAApB;AACI,8DAAC,MAAD,IAAQ,MAAK,SAAb,EAAuB,OAAM,QAA7B,EAAsC,SAAS,OAAKV,KAAL,CAAWiB,IAA1D,GADJ;AAEI,8DAAC,MAAD,IAAQ,MAAK,SAAb,EAAuB,OAAM,eAA7B,EAA6C,SAASG,MAAtD;AAFJ;AAtBJ,yBADH;AAAA;AAJL;AADJ,aADJ;AAsCH;;;EAvD8BE,gBAAMI,S;;kBA0D1B,gCAAgB,CAAC3B,oBAAD,EAAuB4B,2BAAvB,CAAhB,EAAwD;AACnE1B,aAAS,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,OAA5B,CAD0D;AAEnEM,cAAU,CAAC,KAAD;AAFyD,CAAxD,C","file":"WidgetSettingsDialog.js","sourcesContent":["import React from \"react\";\nimport { app, createComponent } from \"webiny-app\";\nimport { ModalComponent } from \"webiny-app-ui\";\nimport EditorWidgetSettings from \"./EditorWidgetSettings\";\n\nclass WidgetSettingsDialog extends React.Component {\n    render() {\n        const {\n            modules: { Modal, Button, Form, Alert },\n            services: { cms },\n            widget,\n            onChange,\n            isGlobal\n        } = this.props;\n\n        let editorWidget = cms.getEditorWidget(widget.type);\n\n        let title = \"Widget settings\";\n        if (widget.origin) {\n            title = \"Global widget settings\";\n        }\n\n        return (\n            <Modal.Dialog>\n                <Form\n                    model={widget.settings || {}}\n                    onSubmit={model => this.props.hide().then(() => this.props.onChange(model))}\n                >\n                    {({ model, submit, Bind }) => (\n                        <Modal.Content>\n                            <Modal.Header title={title} onClose={this.props.hide} />\n                            <Modal.Body>\n                                {widget.origin && (\n                                    <Alert type={\"warning\"}>\n                                        These settings affect this widget everywhere on the website!\n                                    </Alert>\n                                )}\n                                {React.cloneElement(\n                                    editorWidget.widget.renderSettings({\n                                        EditorWidgetSettings,\n                                        widget\n                                    }),\n                                    {\n                                        Bind,\n                                        settings: model,\n                                        widget,\n                                        onChange,\n                                        isGlobal\n                                    }\n                                )}\n                            </Modal.Body>\n                            <Modal.Footer align=\"right\">\n                                <Button type=\"default\" label=\"Cancel\" onClick={this.props.hide} />\n                                <Button type=\"primary\" label=\"Save settings\" onClick={submit} />\n                            </Modal.Footer>\n                        </Modal.Content>\n                    )}\n                </Form>\n            </Modal.Dialog>\n        );\n    }\n}\n\nexport default createComponent([WidgetSettingsDialog, ModalComponent], {\n    modules: [\"Form\", \"Modal\", \"Button\", \"Alert\"],\n    services: [\"cms\"]\n});\n"]}