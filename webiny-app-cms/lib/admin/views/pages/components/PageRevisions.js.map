{"version":3,"sources":["../../../../../src/admin/views/pages/components/PageRevisions.jsx"],"names":["t","i18n","namespace","RevisionActions","revision","modules","Icon","Dropdown","updateRevision","reloadPage","page","styles","actions","cog","active","id","then","app","services","get","show","source","ActiveRevision","props","name","title","createdOn","savedOn","createdBy","activeRevision","badge","textWrap","date","firstName","lastName","Revision","revisionDate","PageRevisions","revisions","filter","r","map","rev"],"mappings":"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","file":"PageRevisions.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport _ from \"lodash\";\nimport { app, i18n } from \"webiny-app\";\nimport CreateRevisionDialog from \"./CreateRevisionDialog\";\nimport { PageDetailsConsumer } from \"./../context/PageDetailsContext\";\nimport styles from \"./PageRevisions.scss?prefix=Webiny_CMS_PageRevisions\";\n\nconst t = i18n.namespace(\"Cms.Admin.Views.PageRevisions\");\n\nconst RevisionActions = ({ revision, modules: { Icon, Dropdown } }) => {\n    return (\n        <PageDetailsConsumer>\n            {({ updateRevision, reloadPage, page }) => (\n                <div className={styles.actions}>\n                    <Dropdown\n                        title={<Icon className={styles.cog} icon={\"cog\"} />}\n                        type={\"balloon\"}\n                        caret={false}\n                        align={\"right\"}\n                    >\n                        <Dropdown.Header title=\"Actions\" />\n                        {!revision.active && (\n                            <Dropdown.Link\n                                key={\"activate\"}\n                                title={\"Activate\"}\n                                onClick={() =>\n                                    updateRevision(revision.id, { active: true }).then(() =>\n                                        reloadPage(page.id)\n                                    )\n                                }\n                            />\n                        )}\n                        <Dropdown.Link\n                            key={\"edit\"}\n                            title={\"Edit\"}\n                            route={\"Cms.Page.Editor\"}\n                            params={{ id: revision.id }}\n                        />\n                        <Dropdown.Link\n                            key={\"create\"}\n                            title={\"Create new\"}\n                            onClick={() => {\n                                app.services\n                                    .get(\"modal\")\n                                    .show(\"createRevision\", { source: revision });\n                            }}\n                        />\n                    </Dropdown>\n                </div>\n            )}\n        </PageDetailsConsumer>\n    );\n};\n\nconst ActiveRevision = props => {\n    const { revision: { name, title, createdOn, savedOn, createdBy }, modules: { Icon } } = props;\n\n    return (\n        <li className={styles.activeRevision}>\n            <span className={styles.badge}>\n                <Icon icon={\"check\"} /> Active\n            </span>\n            <div className={styles.textWrap}>\n                <span className={styles.date}>Name: {name}</span>\n                <h2>{title}</h2>\n                <span className={styles.date}>\n                    Created:{\" \"}\n                    {t`{date|dateTime}`({\n                        date: createdOn\n                    })}\n                </span>\n                <span className={styles.date}>\n                    Last edited:{\" \"}\n                    {t`{date|dateTime}`({\n                        date: savedOn\n                    })}\n                </span>\n                <span className={styles.date}>\n                    By: {createdBy.firstName} {createdBy.lastName}\n                </span>\n            </div>\n            <RevisionActions {...props} />\n        </li>\n    );\n};\n\nconst Revision = props => {\n    const { revision: { id, name, title, savedOn, createdBy } } = props;\n\n    return (\n        <li className={styles.revision} key={id + \"-\" + savedOn}>\n            <div className={styles.textWrap}>\n                <span className={styles.revisionDate}>Name: {name}</span>\n                <h3>{title}</h3>\n                <span className={styles.revisionDate}>\n                    Last edited:{\" \"}\n                    {t`{date|dateTime}`({\n                        date: savedOn\n                    })}\n                </span>\n                <span className={styles.revisionDate}>\n                    By: {createdBy.firstName} {createdBy.lastName}\n                </span>\n            </div>\n            <RevisionActions {...props} />\n        </li>\n    );\n};\n\nconst PageRevisions = ({ modules }) => {\n    return (\n        <PageDetailsConsumer>\n            {({ page }) => (\n                <Fragment>\n                    <CreateRevisionDialog page={page} name={\"createRevision\"} />\n                    <ul className={styles.revisions}>\n                        <ActiveRevision\n                            modules={modules}\n                            revision={_.find(page.revisions, { active: true })}\n                        />\n                        {page.revisions\n                            .filter(r => !r.active)\n                            .map(rev => (\n                                <Revision\n                                    revision={rev}\n                                    key={rev.id + \"-\" + rev.savedOn}\n                                    modules={modules}\n                                />\n                            ))}\n                    </ul>\n                </Fragment>\n            )}\n        </PageDetailsConsumer>\n    );\n};\n\nexport default PageRevisions;\n"]}