{"version":3,"sources":["../../../../src/admin/views/pages/PageManagerContainer.jsx"],"names":["createdBy","fields","PageManagerContainer","state","currentList","lastLoadedPage","updatePage","bind","reloadPage","moveToTrash","removePageFromList","id","data","updateRevision","app","graphql","generateUpdate","variables","catch","services","get","warning","error","message","getPage","generateGet","then","index","splice","setState","ts","Date","now","status","list","ListData","props","modules","savedOn","meta","page","loading","combineList","context","hasMore","totalPages","loadMore","setPage","setSearchQuery","query","setFilter","filter","React","Component"],"mappings":"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","file":"PageManagerContainer.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { app, createComponent } from \"webiny-app\";\nimport PageManager from \"./PageManager\";\nimport { PageManagerProvider } from \"./context/PageManagerContext\";\n\nconst createdBy = \"createdBy { ... on SecurityUser { firstName lastName } }\";\nconst fields = `\n    id title slug status createdOn pinned\n    category { title }\n    revisions { id name slug title active content { id type origin data settings } savedOn createdOn ${createdBy}}\n    ${createdBy}\n`;\n\nclass PageManagerContainer extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n        this.currentList = [];\n        this.lastLoadedPage = 0;\n        this.updatePage = this.updatePage.bind(this);\n        this.reloadPage = this.reloadPage.bind(this);\n        this.moveToTrash = this.moveToTrash.bind(this);\n        this.removePageFromList = this.removePageFromList.bind(this);\n    }\n\n    updateRevision(id, data) {\n        const updateRevision = app.graphql.generateUpdate(\"CmsRevision\", \"id\");\n\n        return updateRevision({ variables: { id, data } }).catch(error => {\n            app.services.get(\"growler\").warning(error.message);\n        });\n    }\n\n    reloadPage(id) {\n        const getPage = app.graphql.generateGet(\"CmsPage\", fields);\n\n        return getPage({ variables: { id } }).then(({ data }) => {\n            const index = _.findIndex(this.currentList, { id });\n            this.currentList.splice(index, 1, data);\n            this.setState({ ts: Date.now() });\n        });\n    }\n\n    moveToTrash(id) {\n        return this.updatePage(id, { status: \"trash\" });\n    }\n\n    updatePage(id, data) {\n        return app.graphql\n            .generateUpdate(\"CmsPage\", fields)({ variables: { id, data } })\n            .then(({ data }) => {\n                const index = _.findIndex(this.currentList, { id });\n                this.currentList.splice(index, 1, data);\n                this.setState({ ts: Date.now() });\n            });\n    }\n\n    removePageFromList(id) {\n        const index = _.findIndex(this.currentList, { id });\n        this.currentList.splice(index, 1);\n        this.setState({ ts: Date.now() });\n    }\n\n    combineList(list) {\n        this.currentList = _.uniq([...this.currentList, ...list]);\n\n        return this.currentList;\n    }\n\n    render() {\n        const { modules: { ListData } } = this.props;\n        return (\n            <ListData\n                entity={\"CmsPage\"}\n                search={{ fields: [\"title\", \"slug\"] }}\n                sort={{ savedOn: -1 }}\n                perPage={7}\n                fields={fields}\n            >\n                {props => {\n                    let { list, meta, page } = props;\n                    if (!props.loading) {\n                        if (page > this.lastLoadedPage) {\n                            list = this.combineList(list);\n                            this.lastLoadedPage = page;\n                        } else {\n                            list = this.currentList;\n                        }\n                    }\n\n                    const context = {\n                        ...props,\n                        list,\n                        hasMore: meta.totalPages > page,\n                        loadMore: () => props.setPage(page + 1),\n                        updateRevision: this.updateRevision,\n                        updatePage: this.updatePage,\n                        reloadPage: this.reloadPage,\n                        moveToTrash: this.moveToTrash\n                    };\n\n                    return (\n                        <PageManagerProvider value={context}>\n                            <PageManager\n                                {..._.pick(context, [\n                                    \"list\",\n                                    \"meta\",\n                                    \"page\",\n                                    \"filter\",\n                                    \"setSearchQuery\",\n                                    \"search\",\n                                    \"hasMore\",\n                                    \"loadMore\",\n                                    \"moveToTrash\",\n                                    \"updatePage\"\n                                ])}\n                                setSearchQuery={query => {\n                                    this.lastLoadedPage = 0;\n                                    this.currentList = [];\n                                    context.setSearchQuery(query);\n                                }}\n                                setFilter={filter => {\n                                    this.lastLoadedPage = 0;\n                                    this.currentList = [];\n                                    context.setFilter(filter);\n                                }}\n                                removePageFromList={this.removePageFromList}\n                            />\n                        </PageManagerProvider>\n                    );\n                }}\n            </ListData>\n        );\n    }\n}\n\nexport default createComponent(PageManagerContainer, { modules: [\"ListData\"] });\n"]}