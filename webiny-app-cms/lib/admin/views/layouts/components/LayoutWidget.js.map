{"version":3,"sources":["../../../../../src/admin/views/layouts/components/LayoutWidget.jsx"],"names":["LayoutWidget","props","widget","functions","onChange","cms","services","isDirty","__dirty","editorWidget","getLayoutEditorWidget","type","showSettings","settingsDialog","show","styles","id","settings","model","ref","React","cloneElement","renderWidget","WidgetContainer","data","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,Y;;;;;;;;;;iCACO;AAAA;;AAAA,yBAMD,KAAKC,KANJ;AAAA,gBAEDC,MAFC,UAEDA,MAFC;AAAA,gBAGDC,SAHC,UAGDA,SAHC;AAAA,gBAIDC,SAJC,UAIDA,QAJC;AAAA,gBAKWC,GALX,UAKDC,QALC,CAKWD,GALX;;;AAQL,gBAAME,UAAU,CAAC,CAACL,OAAOM,OAAzB;;AAEA,gBAAIC,eAAeJ,IAAIK,qBAAJ,CAA0BR,OAAOS,IAAjC,CAAnB;AACA,gBAAI,CAACF,YAAL,EAAmB;AACf,uBAAO,IAAP;AACH;;AAEDN,sBAAUS,YAAV,GAAyB;AAAA,uBAAM,OAAKC,cAAL,CAAoBC,IAApB,EAAN;AAAA,aAAzB;;AAEA,mBACI;AAAA;AAAA,kBAAK,WAAW,0BAASC,uBAAON,YAAhB,CAAhB;AACI;AAAC,mCAAD,CAAO,QAAP;AAAA;AACI,kDAAC,oCAAD;AACI,8BAAMP,OAAOc,EAAP,GAAY,WADtB;AAEI,gCAAQd,MAFZ;AAGI,kCAAU;AAAA,mCACNE,UAAS;AACLa,0CAAUC,KADL;AAELV,yCAASD,WAAW,CAAC,uBAAUW,KAAV,EAAiBhB,OAAOe,QAAxB;AAFhB,6BAAT,CADM;AAAA,yBAHd;AASI,iCAAS;AAAA,mCAAQ,OAAKJ,cAAL,GAAsBM,GAA9B;AAAA;AATb,sBADJ;AAYI,kDAAC,+BAAD,2BAAiB,QAAQjB,MAAzB,IAAqCC,SAArC,EAZJ;AAaKiB,oCAAMC,YAAN,CACGZ,aAAaP,MAAb,CAAoBoB,YAApB,CAAiC,EAAEC,0CAAF,EAAmBrB,cAAnB,EAAjC,CADH,EAEG;AACIA,sCADJ;AAEIE,kCAAU;AAAA,mCACNA,UAAS;AACLoB,sCAAMN,KADD;AAELV,yCAASD,WAAW,CAAC,uBAAUW,KAAV,EAAiBhB,OAAOsB,IAAxB;AAFhB,6BAAT,CADM;AAAA;AAFd,qBAFH;AAbL;AADJ,aADJ;AA6BH;;;EA/CsBJ,gBAAMK,S;;kBAkDlB,gCAAgBzB,YAAhB,EAA8B,EAAEM,UAAU,CAAC,KAAD,CAAZ,EAA9B,C","file":"LayoutWidget.js","sourcesContent":["import React from \"react\";\nimport classSet from \"classnames\";\nimport _ from \"lodash\";\nimport { createComponent } from \"webiny-app\";\nimport styles from \"./styles/LayoutWidget.scss\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetFunctions from \"./LayoutWidgetFunctions\";\nimport WidgetSettingsDialog from \"./LayoutWidgetSettingsDialog\";\n\nclass LayoutWidget extends React.Component {\n    render() {\n        const {\n            widget,\n            functions,\n            onChange,\n            services: { cms }\n        } = this.props;\n\n        const isDirty = !!widget.__dirty;\n\n        let editorWidget = cms.getLayoutEditorWidget(widget.type);\n        if (!editorWidget) {\n            return null;\n        }\n\n        functions.showSettings = () => this.settingsDialog.show();\n\n        return (\n            <div className={classSet(styles.editorWidget)}>\n                <React.Fragment>\n                    <WidgetSettingsDialog\n                        name={widget.id + \"-settings\"}\n                        widget={widget}\n                        onChange={model =>\n                            onChange({\n                                settings: model,\n                                __dirty: isDirty || !_.isEqual(model, widget.settings)\n                            })\n                        }\n                        onReady={ref => (this.settingsDialog = ref)}\n                    />\n                    <WidgetFunctions widget={widget} {...functions} />\n                    {React.cloneElement(\n                        editorWidget.widget.renderWidget({ WidgetContainer, widget }),\n                        {\n                            widget,\n                            onChange: model =>\n                                onChange({\n                                    data: model,\n                                    __dirty: isDirty || !_.isEqual(model, widget.data)\n                                })\n                        }\n                    )}\n                </React.Fragment>\n            </div>\n        );\n    }\n}\n\nexport default createComponent(LayoutWidget, { services: [\"cms\"] });\n"]}