{"version":3,"sources":["../../../../../../src/admin/views/layouts/components/editor/Widget.jsx"],"names":["Widget","applyGlobalWidgetChanges","bind","props","widget","data","settings","origin","services","cms","updateGlobalWidget","then","onChange","__dirty","functions","modules","Link","Icon","isGlobal","isDirty","editorWidget","getEditorWidget","type","showSettings","settingsDialog","show","styles","globalWidget","id","model","ref","React","cloneElement","renderWidget","EditorWidget","marginTop","Component"],"mappings":"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","file":"Widget.js","sourcesContent":["import React from \"react\";\nimport classSet from \"classnames\";\nimport _ from \"lodash\";\nimport { createComponent } from \"webiny-app\";\nimport styles from \"./Widget.scss\";\nimport EditorWidget from \"./EditorWidget\";\nimport WidgetFunctions from \"./WidgetFunctions\";\nimport WidgetSettingsDialog from \"./WidgetSettingsDialog\";\n\nclass Widget extends React.Component {\n    constructor() {\n        super();\n\n        this.applyGlobalWidgetChanges = this.applyGlobalWidgetChanges.bind(this);\n    }\n\n    applyGlobalWidgetChanges() {\n        const { data, settings, origin } = this.props.widget;\n        this.props.services.cms.updateGlobalWidget(origin, { data, settings }).then(() => {\n            this.props.onChange({ data: null, settings: null, __dirty: false });\n        });\n    }\n\n    render() {\n        const {\n            widget,\n            functions,\n            onChange,\n            modules: { Link, Icon },\n            services: { cms }\n        } = this.props;\n\n        const isGlobal = !!widget.origin;\n        const isDirty = !!widget.__dirty;\n\n        let editorWidget = cms.getEditorWidget(widget.type);\n        if (!editorWidget) {\n            return null;\n        }\n\n        functions.showSettings = () => this.settingsDialog.show();\n\n        return (\n            <div className={classSet(styles.editorWidget, isGlobal && styles.globalWidget)}>\n                <React.Fragment>\n                    <WidgetSettingsDialog\n                        name={widget.id + \"-settings\"}\n                        widget={widget}\n                        isGlobal={isGlobal}\n                        onChange={model =>\n                            onChange({\n                                settings: model,\n                                __dirty: isDirty || !_.isEqual(model, widget.settings)\n                            })\n                        }\n                        onReady={ref => (this.settingsDialog = ref)}\n                    />\n                    <WidgetFunctions widget={widget} {...functions} />\n                    {React.cloneElement(\n                        editorWidget.widget.renderWidget({ EditorWidget, widget }),\n                        {\n                            widget,\n                            onChange: model =>\n                                onChange({\n                                    data: model,\n                                    __dirty: isDirty || !_.isEqual(model, widget.data)\n                                }),\n                            isGlobal\n                        }\n                    )}\n                    {isGlobal &&\n                        isDirty && (\n                            <div style={{ marginTop: 5 }}>\n                                Note: changes on global widgets must be saved explicitly.\n                                <br />\n                                <Link onClick={this.applyGlobalWidgetChanges}>\n                                    <Icon icon={\"save\"} /> Save changes\n                                </Link>\n                            </div>\n                        )}\n                </React.Fragment>\n            </div>\n        );\n    }\n}\n\nexport default createComponent(Widget, { modules: [\"Link\", \"Icon\"], services: [\"cms\"] });\n"]}