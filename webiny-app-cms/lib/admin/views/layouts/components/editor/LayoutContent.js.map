{"version":3,"sources":["../../../../../../src/admin/views/layouts/components/editor/LayoutContent.jsx"],"names":["LayoutContent","props","state","cms","services","addLayoutWidget","bind","removeWidget","renderWidget","swapWidgets","widget","position","value","onChange","splice","data","id","shortid","generate","widgets","a","b","count","length","update","settings","__dirty","newWidget","undefined","index","functions","moveUp","onRemoved","moveDown","console","log","onWidgetChange","modules","Button","Grid","Tabs","ViewSwitcher","Modal","viewSwitcher","actions","map","w","i","JSON","stringify","form","model","React","Component"],"mappings":"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","file":"LayoutContent.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent } from \"webiny-app\";\nimport shortid from \"shortid\";\nimport LayoutWidget from \"./LayoutWidget\";\nimport LayoutSelector from \"./LayoutSelector\";\nimport styles from \"./LayoutContent.scss\";\n\nclass LayoutContent extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {};\n        this.cms = props.services.cms;\n        this.addLayoutWidget = this.addLayoutWidget.bind(this);\n        this.removeWidget = this.removeWidget.bind(this);\n        this.renderWidget = this.renderWidget.bind(this);\n        this.swapWidgets = this.swapWidgets.bind(this);\n    }\n\n    addLayoutWidget(widget, position) {\n        let { value, onChange } = this.props;\n        if (!value) {\n            value = [];\n        }\n\n        value.splice(position, 0, _.merge({ data: {} }, widget, { id: shortid.generate() }));\n\n        onChange(value);\n    }\n\n    removeWidget({ id }) {\n        const widgets = _.cloneDeep(this.props.value);\n        widgets.splice(_.findIndex(widgets, { id }), 1);\n        this.props.onChange(widgets);\n    }\n\n    swapWidgets(a, b) {\n        const count = this.props.value.length;\n        if (count === 1 || b === count || b === -1) {\n            return;\n        }\n\n        const widgets = _.cloneDeep(this.props.value);\n        widgets.splice(b, 1, widgets.splice(a, 1, widgets[b])[0]);\n        this.props.onChange(widgets);\n    }\n\n    onWidgetChange(widget, update) {\n        const { value } = this.props;\n        const { data, settings, __dirty } = update;\n\n        const newWidget = {\n            ...widget,\n            __dirty\n        };\n\n        if (data !== undefined) {\n            newWidget[\"data\"] = data;\n        }\n\n        if (settings !== undefined) {\n            newWidget[\"settings\"] = settings;\n        }\n\n        value[_.findIndex(value, { id: widget.id })] = newWidget;\n\n        this.props.onChange(value);\n    }\n\n    renderWidget(data, index) {\n        const widget = _.cloneDeep(data);\n\n        const functions = {\n            moveUp: () => this.swapWidgets(index, index - 1),\n            onRemoved: () => this.removeWidget({ widget }),\n            moveDown: () => this.swapWidgets(index, index + 1)\n        };\n\n        console.log(\"render\", widget);\n\n        return (\n            <LayoutWidget\n                key={widget.id}\n                widget={widget}\n                functions={functions}\n                onChange={data => this.onWidgetChange(widget, data)}\n            />\n        );\n    }\n\n    render() {\n        const {\n            modules: { Button, Grid, Tabs, ViewSwitcher, Modal },\n            value\n        } = this.props;\n\n        return (\n            <ViewSwitcher onReady={actions => (this.viewSwitcher = actions)}>\n                <ViewSwitcher.View name={\"content\"} defaultView>\n                    {() => (\n                        <React.Fragment>\n                            <Tabs>\n                                <Tabs.Tab label={\"Layout\"}>\n                                    {!value.length && (\n                                        <LayoutSelector\n                                            onSelect={this.addLayoutWidget}\n                                            position={0}\n                                        />\n                                    )}\n\n                                    {value.length > 0 && (\n                                        <Grid.Row>\n                                            <Grid.Col all={12}>\n                                                {value &&\n                                                    value.map((w, i) => {\n                                                        return (\n                                                            <React.Fragment key={i}>\n                                                                {this.renderWidget(w, i)}\n                                                                <LayoutSelector\n                                                                    onSelect={this.addLayoutWidget}\n                                                                    position={i + 1}\n                                                                />\n                                                            </React.Fragment>\n                                                        );\n                                                    })}\n                                            </Grid.Col>\n                                        </Grid.Row>\n                                    )}\n                                </Tabs.Tab>\n                            </Tabs>\n                            <pre>{JSON.stringify(this.props.form.state.model, null, 2)}</pre>\n                        </React.Fragment>\n                    )}\n                </ViewSwitcher.View>\n            </ViewSwitcher>\n        );\n    }\n}\n\nexport default createComponent(LayoutContent, {\n    modules: [\"Alert\", \"Button\", \"Grid\", \"Tabs\", \"ViewSwitcher\", \"Modal\"],\n    services: [\"cms\"]\n});\n"]}