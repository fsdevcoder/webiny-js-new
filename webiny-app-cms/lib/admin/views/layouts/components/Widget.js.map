{"version":3,"sources":["../../../../../src/admin/views/layouts/components/Widget.jsx"],"names":["Widget","props","widget","onChange","actions","children","isDirty","__dirty","styles","editorWidget","id","settings","model","settingsDialog","ref","showSettings","show","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,M;;;;;;;;;;iCACO;AAAA;;AAAA,yBAMD,KAAKC,KANJ;AAAA,gBAEDC,MAFC,UAEDA,MAFC;AAAA,gBAGDC,SAHC,UAGDA,QAHC;AAAA,gBAIDC,OAJC,UAIDA,OAJC;AAAA,gBAKDC,QALC,UAKDA,QALC;;;AAQL,gBAAMC,UAAU,CAAC,CAACJ,OAAOK,OAAzB;;AAEA,mBACI;AAAA;AAAA,kBAAK,WAAW,0BAASC,uBAAOC,YAAhB,CAAhB;AACI,8CAAC,8BAAD;AACI,0BAAMP,OAAOQ,EAAP,GAAY,WADtB;AAEI,4BAAQR,MAFZ;AAGI,8BAAU;AAAA,+BACNC,UAAS;AACLQ,sCAAUC,KADL;AAELL,qCAASD,WAAW,CAAC,uBAAUM,KAAV,EAAiBV,OAAOS,QAAxB;AAFhB,yBAAT,CADM;AAAA,qBAHd;AASI,6BAAS;AAAA,+BAAQ,OAAKE,cAAL,GAAsBC,GAA9B;AAAA;AATb,kBADJ;AAYI;AAAC,2CAAD;AAAA;AACKV,4BAAQ,EAAEW,cAAc;AAAA,mCAAM,OAAKF,cAAL,CAAoBG,IAApB,EAAN;AAAA,yBAAhB,EAAR;AADL,iBAZJ;AAeKX,yBAAS,EAAEH,cAAF,EAAUC,mBAAV,EAAT;AAfL,aADJ;AAmBH;;;EA9BgBc,gBAAMC,S;;kBAiCZ,gCAAgBlB,MAAhB,C","file":"Widget.js","sourcesContent":["import React from \"react\";\nimport classSet from \"classnames\";\nimport _ from \"lodash\";\nimport { createComponent } from \"webiny-app\";\nimport styles from \"./styles/LayoutWidget.scss\";\nimport WidgetActions from \"./WidgetActions\";\nimport WidgetSettingsDialog from \"./WidgetSettingsDialog\";\n\nclass Widget extends React.Component {\n    render() {\n        const {\n            widget,\n            onChange,\n            actions,\n            children\n        } = this.props;\n\n        const isDirty = !!widget.__dirty;\n\n        return (\n            <div className={classSet(styles.editorWidget)}>\n                <WidgetSettingsDialog\n                    name={widget.id + \"-settings\"}\n                    widget={widget}\n                    onChange={model =>\n                        onChange({\n                            settings: model,\n                            __dirty: isDirty || !_.isEqual(model, widget.settings)\n                        })\n                    }\n                    onReady={ref => (this.settingsDialog = ref)}\n                />\n                <WidgetActions>\n                    {actions({ showSettings: () => this.settingsDialog.show() })}\n                </WidgetActions>\n                {children({ widget, onChange })}\n            </div>\n        );\n    }\n}\n\nexport default createComponent(Widget);\n"]}