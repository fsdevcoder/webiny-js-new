{"version":3,"sources":["../../../../../../src/admin/widgets/layoutEditor/row/components/Widget.jsx"],"names":["RowWidget","services","state","cms","addWidget","bind","data","props","widget","onChange","blockIndex","index","editorWidget","getEditorWidget","type","widgetContainer","renderWidget","WidgetContainer","React","cloneElement","model","modules","Grid","Icon","widgetsModal","dialog","map","grid","styles","editorItem","editorItemBlock","addBtn","setState","show","txt","Component"],"mappings":"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","file":"Widget.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent } from \"webiny-app\";\nimport WidgetsModal from \"./WidgetsModal\";\nimport classSet from \"classnames\";\nimport WidgetContainer from \"./../../../../components/WidgetContainer\";\nimport styles from \"./Widget.scss?prefix=Webiny_CMS_Row_Widget\";\n\nclass RowWidget extends React.Component {\n    constructor({ services }) {\n        super();\n\n        this.state = {};\n        this.cms = services.cms;\n\n        this.addWidget = this.addWidget.bind(this);\n    }\n\n    addWidget(data) {\n        let { widget, onChange } = this.props;\n\n        widget.data[this.state.blockIndex].widget = _.merge({ data: {} }, data);\n\n        onChange(widget.data);\n    }\n\n    renderWidget(data, index) {\n        const widget = _.cloneDeep(data);\n\n        let editorWidget = this.cms.getEditorWidget(widget.type);\n        if (!editorWidget) {\n            return null;\n        }\n\n        // Render widgetContainer using the the widget plugin\n        let widgetContainer = editorWidget.widget.renderWidget({\n            WidgetContainer,\n            widget\n        });\n\n        // Clone the widget container to pass new props to it\n        return React.cloneElement(widgetContainer, {\n            widget,\n            onChange: model => {\n                this.props.widget.data[index].widget.data = model;\n                this.props.onChange(this.props.widget.data);\n            }\n        });\n    }\n\n    render() {\n        const {\n            modules: { Grid, Icon },\n            widget\n        } = this.props;\n\n        return (\n            <Grid.Row>\n                <WidgetsModal\n                    name={\"widgetsModal\"}\n                    wide={true}\n                    onSelect={data => this.addWidget(data)}\n                    onReady={dialog => (this.widgetsModal = dialog)}\n                />\n\n                {widget.data.map(({ grid, widget }, index) => (\n                    <Grid.Col key={index} md={grid}>\n                        <div className={classSet(styles.editorItem, widget && styles.editorItemBlock)}>\n                            {!widget && (\n                                <span\n                                    className={styles.addBtn}\n                                    onClick={() =>\n                                        this.setState({ blockIndex: index }, this.widgetsModal.show)\n                                    }\n                                >\n                                    <Icon icon={\"plus-circle\"} size={\"2x\"} />{\" \"}\n                                    <span className={styles.txt}>ADD CONTENT</span>\n                                </span>\n                            )}\n\n                            {widget && this.renderWidget(widget, index)}\n                        </div>\n                    </Grid.Col>\n                ))}\n            </Grid.Row>\n        );\n    }\n}\n\nexport default createComponent(RowWidget, { modules: [\"Grid\", \"Link\", \"Icon\"], services: [\"cms\"] });\n"]}