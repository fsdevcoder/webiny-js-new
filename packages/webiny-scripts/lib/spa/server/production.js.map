{"version":3,"sources":["../../../src/spa/server/production.js"],"names":["routes","port","domain","projectRoot","baseDir","join","process","env","NODE_ENV","browserSyncConfig","ui","open","logPrefix","online","socket","server","middleware","req","res","next","test","url","each","file","startsWith","trim","setHeader","create","init"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,CAAC,EAAEA,MAAF,EAAUC,IAAV,EAAgBC,MAAhB,EAAD,KAA8B;AACzC,WAAO,CAAC,EAAEC,WAAF,EAAD,KAAqB;AACxB,cAAMC,UAAU,eAAKC,IAAL,CAAUF,WAAV,EAAuB,MAAvB,EAA+BG,QAAQC,GAAR,CAAYC,QAA3C,CAAhB;AACA;AACA,cAAMC,oBAAoB;AACtBC,gBAAI,KADkB;AAEtBC,kBAAM,KAFgB;AAGtBC,uBAAW,QAHW;AAItBC,oBAAQ,KAJc;AAKtBZ,gBALsB;AAMtBa,oBAAQ;AACJZ,wBAAS,GAAEA,MAAO,IAAGD,IAAK;AADtB,aANc;AAStBc,oBAAQ;AACJX,uBADI;AAEJY,4BAAY,CACR,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAChB,wBAAI,cAAcC,IAAd,CAAmBH,IAAII,GAAvB,CAAJ,EAAiC;AAC7B,+BAAOF,MAAP;AACH;;AAED,qCAAEG,IAAF,CAAOtB,MAAP,EAAe,CAACuB,IAAD,EAAOF,GAAP,KAAe;AAC1B,4BAAIJ,IAAII,GAAJ,CAAQG,UAAR,CAAmBH,GAAnB,CAAJ,EAA6B;AACzBJ,gCAAII,GAAJ,GAAU,MAAM,iBAAEI,IAAF,CAAOF,IAAP,EAAa,GAAb,CAAhB;AACA,mCAAO,KAAP;AACH;AACJ,qBALD;AAMA,2BAAOJ,MAAP;AACH,iBAbO,EAcR,CAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAChBD,wBAAIQ,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAP;AACH,iBAjBO;AAFR;AATc,SAA1B;;AAiCA,8BAAYQ,MAAZ,GAAqBC,IAArB,CAA0BnB,iBAA1B;AACH,KArCD;AAsCH,C","file":"production.js","sourcesContent":["import path from \"path\";\nimport _ from \"lodash\";\nimport browserSync from \"browser-sync\";\n\nexport default ({ routes, port, domain }) => {\n    return ({ projectRoot }) => {\n        const baseDir = path.join(projectRoot, \"dist\", process.env.NODE_ENV);\n        // Run browser-sync server\n        const browserSyncConfig = {\n            ui: false,\n            open: false,\n            logPrefix: \"Webiny\",\n            online: false,\n            port,\n            socket: {\n                domain: `${domain}:${port}`\n            },\n            server: {\n                baseDir,\n                middleware: [\n                    (req, res, next) => {\n                        if (/\\.[a-z]{2,}/.test(req.url)) {\n                            return next();\n                        }\n\n                        _.each(routes, (file, url) => {\n                            if (req.url.startsWith(url)) {\n                                req.url = \"/\" + _.trim(file, \"/\");\n                                return false;\n                            }\n                        });\n                        return next();\n                    },\n                    (req, res, next) => {\n                        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n                        next();\n                    }\n                ]\n            }\n        };\n\n        browserSync.create().init(browserSyncConfig);\n    };\n};\n"]}