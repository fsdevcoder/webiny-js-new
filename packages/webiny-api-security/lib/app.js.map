{"version":3,"sources":["../src/app.js"],"names":["Security","constructor","config","name","services","add","authentication","endpoints","get","extendEntity","entity","attr","char","identity","classIdAttribute","on","getRequest","savedBy","isExisting","updatedBy","createdBy"],"mappings":";;;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,MAAMA,QAAN,wBAA2B;AACvBC,gBAAYC,MAAZ,EAA4B;AACxB;;AAEA,aAAKC,IAAL,GAAY,UAAZ;AACA,uBAAIC,QAAJ,CAAaC,GAAb,CAAiB,gBAAjB,EAAmC,MAAM,iCAA0BH,OAAOI,cAAjC,CAAzC;AACA,uBAAIF,QAAJ,CAAaC,GAAb,CAAiB,eAAjB,EAAkC,MAAM,iCAAxC;;AAEA,aAAKE,SAAL,GAAiB,CACb,yCAEIL,OAAOI,cAFX,EAGI,eAAIF,QAAJ,CAAaI,GAAb,CAAiB,gBAAjB,CAHJ,CADa,gFAAjB;;AAYA,0CAAmB,eAAIJ,QAAJ,CAAaI,GAAb,CAAiB,gBAAjB,CAAnB;;AAEA;AACA,aAAKC,YAAL,CAAkB,GAAlB,EAAwBC,MAAD,IAAoB;AACvC;AACAA,mBAAOC,IAAP,CAAY,gBAAZ,EAA8BC,IAA9B;AACAF,mBAAOC,IAAP,CAAY,SAAZ,EAAuBE,QAAvB,CAAgC,EAAEC,kBAAkB,gBAApB,EAAhC;;AAEA;AACAJ,mBAAOC,IAAP,CAAY,kBAAZ,EAAgCC,IAAhC;AACAF,mBAAOC,IAAP,CAAY,WAAZ,EAAyBE,QAAzB,CAAkC,EAAEC,kBAAkB,kBAApB,EAAlC;;AAEA;AACAJ,mBAAOC,IAAP,CAAY,kBAAZ,EAAgCC,IAAhC;AACAF,mBAAOC,IAAP,CAAY,WAAZ,EAAyBE,QAAzB,CAAkC,EAAEC,kBAAkB,kBAApB,EAAlC;;AAEA;AACA;AACAJ,mBAAOK,EAAP,CAAU,MAAV,EAAkB,MAAM;AACpB,oBAAI,CAAC,eAAIC,UAAJ,EAAL,EAAuB;AACnB;AACH;;AAED,sBAAM,EAAEH,QAAF,KAAe,eAAIG,UAAJ,EAArB;AACAN,uBAAOO,OAAP,GAAiBJ,QAAjB;AACA,oBAAIH,OAAOQ,UAAP,EAAJ,EAAyB;AACrBR,2BAAOS,SAAP,GAAmBN,QAAnB;AACH,iBAFD,MAEO;AACHH,2BAAOU,SAAP,GAAmBP,QAAnB;AACH;AACJ,aAZD;AAaH,SA5BD;AA6BH;AApDsB;kBAuDZb,Q","file":"app.js","sourcesContent":["// @flow\nimport { app, App } from \"webiny-api\";\nimport BaseAuthEndpoint from \"./endpoints/auth\";\nimport generateEndpoint from \"./endpoints/generator\";\nimport { AuthenticationService, AuthorizationService } from \"./index\";\nimport registerAttributes from \"./attributes/registerAttributes\";\nimport UsersEndpoint from \"./endpoints/users\";\nimport PermissionsEndpoint from \"./endpoints/permissions\";\nimport RolesEndpoint from \"./endpoints/roles\";\nimport RoleGroupsEndpoint from \"./endpoints/roleGroups\";\nimport type { Entity } from \"webiny-entity\";\n\nclass Security extends App {\n    constructor(config: Object) {\n        super();\n\n        this.name = \"Security\";\n        app.services.add(\"authentication\", () => new AuthenticationService(config.authentication));\n        app.services.add(\"authorization\", () => new AuthorizationService());\n\n        this.endpoints = [\n            generateEndpoint(\n                BaseAuthEndpoint,\n                config.authentication,\n                app.services.get(\"authentication\")\n            ),\n            UsersEndpoint,\n            PermissionsEndpoint,\n            RoleGroupsEndpoint,\n            RolesEndpoint\n        ];\n\n        registerAttributes(app.services.get(\"authentication\"));\n\n        // Helper attributes\n        this.extendEntity(\"*\", (entity: Entity) => {\n            // \"savedBy\" attribute - updated on both create and update events.\n            entity.attr(\"savedByClassId\").char();\n            entity.attr(\"savedBy\").identity({ classIdAttribute: \"savedByClassId\" });\n\n            // \"createdBy\" attribute - updated only on entity creation.\n            entity.attr(\"createdByClassId\").char();\n            entity.attr(\"createdBy\").identity({ classIdAttribute: \"createdByClassId\" });\n\n            // \"updatedBy\" attribute - updated only on entity updates.\n            entity.attr(\"updatedByClassId\").char();\n            entity.attr(\"updatedBy\").identity({ classIdAttribute: \"updatedByClassId\" });\n\n            // We don't need a standalone \"deletedBy\" attribute, since its value would be the same as in \"savedBy\"\n            // and \"updatedBy\" attributes. Check these attributes to find out who deleted an entity.\n            entity.on(\"save\", () => {\n                if (!app.getRequest()) {\n                    return;\n                }\n\n                const { identity } = app.getRequest();\n                entity.savedBy = identity;\n                if (entity.isExisting()) {\n                    entity.updatedBy = identity;\n                } else {\n                    entity.createdBy = identity;\n                }\n            });\n        });\n    }\n}\n\nexport default Security;\n"]}