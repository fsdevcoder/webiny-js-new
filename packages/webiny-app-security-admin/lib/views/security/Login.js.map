{"version":3,"sources":["../../../src/views/security/Login.jsx"],"names":["t","namespace","Login","props","identity","strategy","state","twoFactorAuth","verificationToken","model","form","setState","error","showLoading","auth","services","get","login","result","token","onSuccess","handleApiError","data","response","Form","Input","Password","Button","Email","overlay","onSubmit","params","submit","float","btnLogin","Component","defaultProps","modules"],"mappings":"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","file":"Login.js","sourcesContent":["import React from 'react';\nimport classSet from \"classnames\";\nimport invariant from \"invariant\";\nimport { app, createComponent, i18n } from 'webiny-app';\nimport logoOrange from 'webiny-app-admin/lib/assets/images/logo_orange.png';\nimport styles from './styles/Login.css';\n\nconst t = i18n.namespace(\"Webiny.Skeleton.Auth.Login\");\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        invariant(props.identity, `You must specify an \"identity\" prop!`);\n        invariant(props.strategy, `You must specify a \"strategy\" prop!`);\n\n        this.state = {\n            twoFactorAuth: false,\n            verificationToken: null\n        };\n\n    }\n\n    async onSubmit({ model, form }) {\n        form.setState({ error: null });\n        form.showLoading();\n\n        const auth = app.services.get(\"authentication\");\n        try {\n            const { identity, strategy } = this.props;\n\n            const result = await auth.login(identity, strategy, model);\n            if (result.token) {\n                return this.props.onSuccess(result);\n            }\n        } catch (e) {\n            return form.handleApiError(e.data.response);\n        }\n    }\n\n    render() {\n        const { Form, Input, Password, Button, Email } = this.props;\n\n        return (\n            <sign-in-form class={classSet('sign-in', (this.props.overlay && 'overlay'))}>\n                <Form onSubmit={params => this.onSubmit(params)}>\n                    {({ form }) => (\n                        <div className=\"container\">\n                            <div className=\"sign-in-holder\">\n                                <div className=\"form-signin\">\n                                    <Form.Loader/>\n                                    <a href=\"#\" className=\"logo\">\n                                        <img src={logoOrange} width=\"180\" height=\"58\"/>\n                                    </a>\n\n                                    <h2 className=\"form-signin-heading\"><span/>{t`Sign in to your Account`}\n                                    </h2>\n\n                                    <div className=\"clear\"/>\n                                    <Form.Error/>\n\n                                    <div className=\"clear\"/>\n\n                                    {this.state.twoFactorAuth && (<Input\n                                        name=\"twoFactorAuthCode\"\n                                        placeholder={t`Enter your verification code`}\n                                        label={t`Verification code`}\n                                        validators=\"required\"\n                                        onEnter={form.submit}\n                                        autoFocus={true}/>)}\n\n                                    {!this.state.twoFactorAuth && (<div>\n                                        <Email\n                                            name=\"username\"\n                                            placeholder={t`Enter email`}\n                                            label={t`Email address`}\n                                            validators=\"required\"\n                                            onEnter={form.submit}\n                                            autoFocus={true}/>\n\n                                        <Password\n                                            name=\"password\"\n                                            placeholder={t`Password`}\n                                            label={t`Password`}\n                                            validators=\"required\"\n                                            onEnter={form.submit}/>\n                                    </div>)}\n\n                                    <div className=\"form-footer\">\n                                        <Button\n                                            type=\"primary\"\n                                            style={{ float: 'right' }}\n                                            size=\"large\"\n                                            onClick={form.submit}\n                                            icon=\"icon-next\"\n                                            className={styles.btnLogin}>\n                                            <span>{t`Submit`}</span>\n                                        </Button>\n                                    </div>\n                                </div>\n\n                                <p className=\"copyright\">{t`powered by`}</p>\n                                <a href=\"https://www.webiny.com/\" className=\"site\">www.webiny.com</a>\n                            </div>\n                        </div>\n                    )}\n                </Form>\n            </sign-in-form>\n        );\n    }\n}\n\nLogin.defaultProps = {\n    overlay: false\n};\n\nexport default createComponent(Login, { modules: ['Form', 'Input', 'Password', 'Button', 'Email'] });"]}