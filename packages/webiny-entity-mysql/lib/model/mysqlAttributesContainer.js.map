{"version":3,"sources":["../../src/model/mysqlAttributesContainer.js"],"names":["MySQLAttributesContainer","boolean","model","getParentModel","setAttribute","name","getAttribute","date","parent","models","entities","entity","attribute"],"mappings":";;;;;;AAGA;;AACA;;AAQA;;;;AAIA,MAAMA,wBAAN,iDAAiE;AAC7DC,cAA4B;AACxB,cAAMC,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,iCAAqB,KAAKA,IAA1B,EAAgC,IAAhC,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDE,WAAsB;AAClB,cAAML,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,8BAAkB,KAAKA,IAAvB,EAA6B,IAA7B,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDH,UAAMA,KAAN,EAAoC;AAChC,cAAMM,SAAS,KAAKL,cAAL,EAAf;AACAK,eAAOJ,YAAP,CAAoB,KAAKC,IAAzB,EAA+B,+BAAmB,KAAKA,IAAxB,EAA8B,IAA9B,EAAoCH,KAApC,CAA/B;AACA,eAAOM,OAAOF,YAAP,CAAoB,KAAKD,IAAzB,CAAP;AACH;;AAEDI,WAAOP,KAAP,EAAsC;AAClC,cAAMM,SAAS,KAAKL,cAAL,EAAf;AACAK,eAAOJ,YAAP,CAAoB,KAAKC,IAAzB,EAA+B,gCAAoB,KAAKA,IAAzB,EAA+B,IAA/B,EAAqCH,KAArC,CAA/B;AACA,eAAOM,OAAOF,YAAP,CAAoB,KAAKD,IAAzB,CAAP;AACH;;AAEDK,aAASC,MAAT,EAAgCC,YAAqB,IAArD,EAA2D;AACvD,cAAMJ,SAAS,KAAKL,cAAL,EAAf;AACAK,eAAOJ,YAAP,CAAoB,KAAKC,IAAzB,EAA+B,kCAAsB,KAAKA,IAA3B,EAAiC,IAAjC,EAAuCM,MAAvC,EAA+CC,SAA/C,CAA/B;AACA,eAAOJ,OAAOF,YAAP,CAAoB,KAAKD,IAAzB,CAAP;AACH;AA7B4D;;kBAgClDL,wB","file":"mysqlAttributesContainer.js","sourcesContent":["// @flow\nimport type { Entity } from \"webiny-entity\";\nimport type { Model } from \"webiny-model\";\nimport { EntityAttributesContainer } from \"webiny-entity\";\nimport {\n    BooleanAttribute,\n    DateAttribute,\n    ModelAttribute,\n    ModelsAttribute,\n    EntitiesAttribute\n} from \"./attributes\";\n\n/**\n * Contains basic attributes. If needed, this class can be extended to add additional attributes,\n * and then be set as a new attributes container as the default one.\n */\nclass MySQLAttributesContainer extends EntityAttributesContainer {\n    boolean(): BooleanAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new BooleanAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    date(): DateAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new DateAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    model(model: Model): ModelAttribute {\n        const parent = this.getParentModel();\n        parent.setAttribute(this.name, new ModelAttribute(this.name, this, model));\n        return parent.getAttribute(this.name);\n    }\n\n    models(model: Model): ModelsAttribute {\n        const parent = this.getParentModel();\n        parent.setAttribute(this.name, new ModelsAttribute(this.name, this, model));\n        return parent.getAttribute(this.name);\n    }\n\n    entities(entity: Class<Entity>, attribute: ?string = null) {\n        const parent = this.getParentModel();\n        parent.setAttribute(this.name, new EntitiesAttribute(this.name, this, entity, attribute));\n        return parent.getAttribute(this.name);\n    }\n}\n\nexport default MySQLAttributesContainer;\n"]}