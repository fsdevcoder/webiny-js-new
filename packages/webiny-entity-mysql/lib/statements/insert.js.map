{"version":3,"sources":["../../src/statements/insert.js"],"names":["Insert","generate","options","columns","keys","data","join","insertValues","values","map","value","escape","onDuplicateKeyUpdate","table","updateValues","key","push"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,MAAN,6BAA+B;AAC3BC,eAAW;AACP,cAAMC,UAAU,KAAKA,OAArB;AACA,cAAMC,UAAU,iBAAEC,IAAF,CAAOF,QAAQG,IAAf,EAAqBC,IAArB,CAA0B,IAA1B,CAAhB;AACA,cAAMC,eAAe,iBAAEC,MAAF,CAASN,QAAQG,IAAjB,EAChBI,GADgB,CACZC,SAAS,KAAKC,MAAL,CAAYD,KAAZ,CADG,EAEhBJ,IAFgB,CAEX,IAFW,CAArB;;AAIA,YAAI,CAACJ,QAAQU,oBAAb,EAAmC;AAC/B,mBAAQ,iBAAgBV,QAAQW,KAAM,OAAMV,OAAQ,aAAYI,YAAa,GAA7E;AACH;;AAED,cAAMO,eAAe,EAArB;AACA,aAAK,MAAM,CAACC,GAAD,EAAML,KAAN,CAAX,IAA2B,uBAAeR,QAAQG,IAAvB,CAA3B,EAAyD;AACrDS,yBAAaE,IAAb,CAAkBD,MAAM,KAAN,GAAc,KAAKJ,MAAL,CAAYD,KAAZ,CAAhC;AACH;;AAED,eAAQ,iBACJR,QAAQW,KACX,OAAMV,OAAQ,aAAYI,YAAa,6BAA4BO,aAAaR,IAAb,CAChE,IADgE,CAElE,EAJF;AAKH;AAtB0B;;kBAyBhBN,M","file":"insert.js","sourcesContent":["import Statement from \"./statement\";\nimport _ from \"lodash\";\n\nclass Insert extends Statement {\n    generate() {\n        const options = this.options;\n        const columns = _.keys(options.data).join(\", \");\n        const insertValues = _.values(options.data)\n            .map(value => this.escape(value))\n            .join(\", \");\n\n        if (!options.onDuplicateKeyUpdate) {\n            return `INSERT INTO \\`${options.table}\\` (${columns}) VALUES (${insertValues})`;\n        }\n\n        const updateValues = [];\n        for (const [key, value] of Object.entries(options.data)) {\n            updateValues.push(key + \" = \" + this.escape(value));\n        }\n\n        return `INSERT INTO \\`${\n            options.table\n        }\\` (${columns}) VALUES (${insertValues}) ON DUPLICATE KEY UPDATE ${updateValues.join(\n            \", \"\n        )}`;\n    }\n}\n\nexport default Insert;\n"]}