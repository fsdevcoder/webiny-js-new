{"version":3,"sources":["../../../src/operators/comparison/search.js"],"names":["search","canProcess","key","process","value","statement","columns","map","$like","query","operator"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,SAAmB;AACrBC,gBAAY,CAAC,EAAEC,GAAF,EAAD,KAAa;AACrB,eAAOA,QAAQ,SAAf;AACH,KAHoB;AAIrBC,aAAS,CAAC,EAAEC,KAAF,EAASC,SAAT,EAAD,KAA0B;AAC/B,cAAMC,UAAUF,MAAME,OAAN,CAAcC,GAAd,CAAkBD,WAAW;AACzC,mBAAO,EAAE,CAACA,OAAD,GAAW,EAAEE,OAAO,MAAMJ,MAAMK,KAAZ,GAAoB,GAA7B,EAAb,EAAP;AACH,SAFe,CAAhB;;AAIA,YAAIL,MAAMM,QAAN,KAAmB,KAAvB,EAA8B;AAC1B,mBAAO,cAAIP,OAAJ,CAAY,EAAED,KAAK,MAAP,EAAeE,OAAOE,OAAtB,EAA+BD,SAA/B,EAAZ,CAAP;AACH;AACD,eAAO,aAAGF,OAAH,CAAW,EAAED,KAAK,KAAP,EAAcE,OAAOE,OAArB,EAA8BD,SAA9B,EAAX,CAAP;AACH;AAboB,CAAzB;kBAgBeL,M","file":"search.js","sourcesContent":["// @flow\nimport type { Operator } from \"../../../types\";\nimport or from \"../logical/or\";\nimport and from \"../logical/and\";\n\nconst search: Operator = {\n    canProcess: ({ key }) => {\n        return key === \"$search\";\n    },\n    process: ({ value, statement }) => {\n        const columns = value.columns.map(columns => {\n            return { [columns]: { $like: \"%\" + value.query + \"%\" } };\n        });\n\n        if (value.operator === \"and\") {\n            return and.process({ key: \"$and\", value: columns, statement });\n        }\n        return or.process({ key: \"$or\", value: columns, statement });\n    }\n};\n\nexport default search;\n"]}