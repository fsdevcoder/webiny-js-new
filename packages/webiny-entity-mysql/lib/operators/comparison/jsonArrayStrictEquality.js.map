{"version":3,"sources":["../../../src/operators/comparison/jsonArrayStrictEquality.js"],"names":["jsonArrayStrictEquality","canProcess","value","has","process","key","statement","map","v","escape","join"],"mappings":";;;;;;AACA;;;;;;AAGA,MAAMA,0BAAoC;AACtCC,gBAAY,CAAC,EAAEC,KAAF,EAAD,KAAe;AACvB,eAAO,iBAAEC,GAAF,CAAMD,KAAN,EAAa,0BAAb,CAAP;AACH,KAHqC;AAItCE,aAAS,CAAC,EAAEC,GAAF,EAAOH,KAAP,EAAcI,SAAd,EAAD,KAA+B;AACpCJ,gBAAQA,MAAM,0BAAN,CAAR;AACA,eAAOG,MAAM,gBAAN,GAAyBH,MAAMK,GAAN,CAAUC,KAAKF,UAAUG,MAAV,CAAiBD,CAAjB,CAAf,EAAoCE,IAApC,CAAyC,IAAzC,CAAzB,GAA0E,GAAjF;AACH;AAPqC,CAA1C;kBASeV,uB","file":"jsonArrayStrictEquality.js","sourcesContent":["// @flow\nimport _ from \"lodash\";\nimport type { Operator } from \"../../../types\";\n\nconst jsonArrayStrictEquality: Operator = {\n    canProcess: ({ value }) => {\n        return _.has(value, \"$jsonArrayStrictEquality\");\n    },\n    process: ({ key, value, statement }) => {\n        value = value[\"$jsonArrayStrictEquality\"];\n        return key + \" = JSON_ARRAY(\" + value.map(v => statement.escape(v)).join(\", \") + \")\";\n    }\n};\nexport default jsonArrayStrictEquality;\n"]}