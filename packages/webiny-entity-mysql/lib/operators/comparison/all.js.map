{"version":3,"sources":["../../../src/operators/comparison/all.js"],"names":["all","canProcess","key","value","charAt","has","process","statement","andValue","map","v","$jsonArrayFindValue"],"mappings":";;;;;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,MAAgB;AAClBC,gBAAY,CAAC,EAAEC,GAAF,EAAOC,KAAP,EAAD,KAAoB;AAC5B,YAAID,IAAIE,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACvB,mBAAO,KAAP;AACH;;AAED,eAAO,iBAAEC,GAAF,CAAMF,KAAN,EAAa,MAAb,CAAP;AACH,KAPiB;AAQlBG,aAAS,CAAC,EAAEJ,GAAF,EAAOC,KAAP,EAAcI,SAAd,EAAD,KAA+B;AACpC,cAAMC,WAAWL,MAAM,MAAN,EAAcM,GAAd,CAAkBC,KAAK;AACpC,mBAAO,EAAE,CAACR,GAAD,GAAO,EAAES,qBAAqBD,CAAvB,EAAT,EAAP;AACH,SAFgB,CAAjB;AAGA,eAAO,cAAIJ,OAAJ,CAAY,EAAEJ,GAAF,EAAOC,OAAOK,QAAd,EAAwBD,SAAxB,EAAZ,CAAP;AACH;AAbiB,CAAtB;;kBAgBeP,G","file":"all.js","sourcesContent":["// @flow\nimport _ from \"lodash\";\nimport type { Operator } from \"../../../types\";\nimport and from \"./../logical/and\";\n\nconst all: Operator = {\n    canProcess: ({ key, value }) => {\n        if (key.charAt(0) === \"$\") {\n            return false;\n        }\n\n        return _.has(value, \"$all\");\n    },\n    process: ({ key, value, statement }) => {\n        const andValue = value[\"$all\"].map(v => {\n            return { [key]: { $jsonArrayFindValue: v } };\n        });\n        return and.process({ key, value: andValue, statement });\n    }\n};\n\nexport default all;\n"]}