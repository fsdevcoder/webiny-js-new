{"version":3,"sources":["../../../src/components/Navigation/utils.js"],"names":["utils","findMenuByRoute","menus","route","found","children","Children","toArray","menu","props","length","name","checkRoute","defaultValue","routeMenu","services","get","getMenu","id","label","findRoute","routeName","active","child","getLink","Link","linkProps","router","getRoute","url","canAccess"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAGA,IAAMA,QAAQ;AACV;;;;AAIAC,mBALU,2BAKMC,KALN,EAKaC,KALb,EAKoB;AAC1B,YAAIC,QAAQ,IAAZ;AACA,4BAAOF,KAAP,EAAc,gBAAQ;AAClB,gBAAMG,WAAW,gBAAMC,QAAN,CAAeC,OAAf,CAAuBC,KAAKC,KAAL,CAAWJ,QAAlC,CAAjB;AACA,gBAAIA,SAASK,MAAb,EAAqB;AACjB,oBAAIV,MAAMC,eAAN,CAAsBI,QAAtB,EAAgCF,KAAhC,CAAJ,EAA4C;AACxCC,4BAAQI,IAAR;AACA,2BAAO,KAAP;AACH;AACJ,aALD,MAKO,IAAIA,KAAKC,KAAL,CAAWN,KAAX,KAAqBA,MAAMQ,IAA/B,EAAqC;AACxCP,wBAAQI,IAAR;AACA,uBAAO,KAAP;AACH;AACJ,SAXD;AAYA,eAAOJ,KAAP;AACH,KApBS;;;AAsBV;;;AAGAQ,cAzBU,sBAyBCT,KAzBD,EAyB6B;AAAA,YAArBU,YAAqB,uEAAN,IAAM;;AACnC;AACA,YAAMC,YAAYd,MAAMC,eAAN,CAAsB,eAAIc,QAAJ,CAAaC,GAAb,CAAiB,MAAjB,EAAyBC,OAAzB,EAAtB,EAA0Dd,KAA1D,CAAlB;AACA,YAAIW,SAAJ,EAAe;AACX,mBAAOA,UAAUL,KAAV,CAAgBS,EAAhB,IAAsBJ,UAAUL,KAAV,CAAgBU,KAA7C;AACH;AACD,eAAON,YAAP;AACH,KAhCS;AAkCVO,aAlCU,qBAkCAX,KAlCA,EAkCOY,SAlCP,EAkCkB;AACxB,YAAMhB,WAAW,gBAAMC,QAAN,CAAeC,OAAf,CAAuBE,MAAMJ,QAA7B,CAAjB;AACA,YAAIA,SAASK,MAAb,EAAqB;AACjB,gBAAIY,SAAS,KAAb;AACA,gCAAOjB,QAAP,EAAiB,iBAAS;AACtB,oBAAIL,MAAMoB,SAAN,CAAgBG,MAAMd,KAAtB,EAA6BY,SAA7B,CAAJ,EAA6C;AACzCC,6BAAS,IAAT;AACA,2BAAO,KAAP;AACH;AACJ,aALD;AAMA,mBAAOA,MAAP;AACH;;AAED,eAAOb,MAAMN,KAAN,KAAgBkB,SAAvB;AACH,KAhDS;AAkDVG,WAlDU,mBAkDFrB,KAlDE,EAkDKsB,IAlDL,EAkD2B;AAAA,YAAhBC,SAAgB,uEAAJ,EAAI;;AACjCvB,gBAAQ,wBAAWA,KAAX,IAAoBA,KAApB,GAA4B,IAApC;;AAEA,YAAI,eAAIwB,MAAJ,CAAWC,QAAX,CAAoBzB,KAApB,CAAJ,EAAgC;AAC5BuB,sBAAUvB,KAAV,GAAkBA,KAAlB;AACH,SAFD,MAEO;AACHuB,sBAAUG,GAAV,GAAgB1B,KAAhB;AACH;;AAED,YAAI,CAACuB,UAAUrB,QAAf,EAAyB;AACrBqB,sBAAUrB,QAAV,GAAqBqB,UAAUP,KAA/B;AACH;;AAED,eAAO,8BAAC,IAAD,EAAUO,SAAV,CAAP;AACH,KAhES;AAkEVI,aAlEU,qBAkEAtB,IAlEA,EAkEM;AACZ,eAAO,IAAP;AACA;AACA;;;;;;;;;AAUH;AA/ES,CAAd;;kBAkFeR,K","file":"utils.js","sourcesContent":["import React from 'react';\nimport { app } from 'webiny-app';\nimport _ from 'lodash';\n\nconst utils = {\n    /**\n     * Traverse all menus and try to match a menu which points to the given route.\n     * Return top level menu.\n     */\n    findMenuByRoute(menus, route) {\n        let found = null;\n        _.each(menus, menu => {\n            const children = React.Children.toArray(menu.props.children);\n            if (children.length) {\n                if (utils.findMenuByRoute(children, route)) {\n                    found = menu;\n                    return false;\n                }\n            } else if (menu.props.route === route.name) {\n                found = menu;\n                return false;\n            }\n        });\n        return found;\n    },\n\n    /**\n     * Find menu by route and return menu id or default value.\n     */\n    checkRoute(route, defaultValue = null) {\n        // Check if current route has an associated menu item\n        const routeMenu = utils.findMenuByRoute(app.services.get('menu').getMenu(), route);\n        if (routeMenu) {\n            return routeMenu.props.id || routeMenu.props.label;\n        }\n        return defaultValue;\n    },\n\n    findRoute(props, routeName) {\n        const children = React.Children.toArray(props.children);\n        if (children.length) {\n            let active = false;\n            _.each(children, child => {\n                if (utils.findRoute(child.props, routeName)) {\n                    active = true;\n                    return false;\n                }\n            });\n            return active;\n        }\n\n        return props.route === routeName;\n    },\n\n    getLink(route, Link, linkProps = {}) {\n        route = _.isString(route) ? route : null;\n\n        if (app.router.getRoute(route)) {\n            linkProps.route = route;\n        } else {\n            linkProps.url = route;\n        }\n\n        if (!linkProps.children) {\n            linkProps.children = linkProps.label;\n        }\n\n        return <Link {...linkProps}/>;\n    },\n\n    canAccess(menu) {\n        return true;\n        // TODO:\n        /*if (!menu.role || !menu.role.length) {\n            return true;\n        }\n\n        const user = Webiny.Model.get('User');\n        const roles = _.isArray(menu.role) ? menu.role : menu.role.split(',');\n        if (!user || !Webiny.Auth.hasRole(roles)) {\n            return false;\n        }\n        return true;*/\n    }\n};\n\nexport default utils;\n\n"]}