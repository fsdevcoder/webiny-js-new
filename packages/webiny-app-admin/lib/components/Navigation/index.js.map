{"version":3,"sources":["../../../src/components/Navigation/index.js"],"names":["Navigation","props","state","user","highlight","display","window","outerWidth","auth","services","get","checkDisplayInterval","unwatch","onIdentity","setState","identity","setInterval","clearInterval","nextProps","nextState","render","call","Desktop","Mobile","Component","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEMA,U;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,kBAAM,IADG;AAETC,uBAAW,IAFF;AAGTC,qBAASC,OAAOC,UAAP,GAAoB,GAApB,GAA0B,SAA1B,GAAsC;AAHtC,SAAb;;AAMA,cAAKC,IAAL,GAAY,eAAIC,QAAJ,CAAaC,GAAb,CAAiB,gBAAjB,CAAZ;AACA,cAAKC,oBAAL,GAA4B,IAA5B;AAVe;AAWlB;;;;4CAEmB;AAAA;;AAChB,gBAAI,KAAKH,IAAT,EAAe;AACX;AACA,qBAAKI,OAAL,GAAe,KAAKJ,IAAL,CAAUK,UAAV,CAAqB,oBAAY;AAC5C,2BAAKC,QAAL,CAAc,EAAEX,MAAMY,QAAR,EAAd;AACH,iBAFc,CAAf;;AAIA,qBAAKD,QAAL,CAAc,EAAEX,MAAM,KAAKK,IAAL,CAAUO,QAAlB,EAAd;AACH;;AAED,iBAAKJ,oBAAL,GAA4BK,YAAY,YAAM;AAC1C,uBAAKF,QAAL,CAAc,EAAET,SAASC,OAAOC,UAAP,GAAoB,GAApB,GAA0B,SAA1B,GAAsC,QAAjD,EAAd;AACH,aAF2B,EAEzB,GAFyB,CAA5B;AAGH;;;+CAEsB;AACnBU,0BAAc,KAAKN,oBAAnB;;AAEA;AACA,iBAAKC,OAAL,IAAgB,KAAKA,OAAL,EAAhB;AACH;;;8CAEqBM,S,EAAWC,S,EAAW;AACxC,mBAAO,CAAC,uBAAU,KAAKjB,KAAf,EAAsBiB,SAAtB,CAAR;AACH;;;iCAEQ;AACL,gBAAI,KAAKlB,KAAL,CAAWmB,MAAf,EAAuB;AACnB,uBAAO,KAAKnB,KAAL,CAAWmB,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,yBAKuB,KAAKpB,KAL5B;AAAA,gBAKGqB,OALH,UAKGA,OALH;AAAA,gBAKYC,MALZ,UAKYA,MALZ;;AAML,gBAAMtB,QAAQ;AACVG,2BAAW,KAAKF,KAAL,CAAWE;AADZ,aAAd;;AAIA,gBAAI,KAAKF,KAAL,CAAWG,OAAX,KAAuB,QAA3B,EAAqC;AACjC,uBAAO,8BAAC,MAAD,EAAYJ,KAAZ,CAAP;AACH;;AAED,mBAAO,8BAAC,OAAD,EAAaA,KAAb,CAAP;AACH;;;EAvDoB,gBAAMuB,S;;kBA0DhB,gCAAgBxB,UAAhB,EAA4B;AACvCyB,aAAS,CACL,MADK,EAEL;AACIH,iBAAS,6BADb;AAEIC,gBAAQ;AAFZ,KAFK;AAD8B,CAA5B,C","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { app, createComponent } from \"webiny-app\";\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null,\n            highlight: null,\n            display: window.outerWidth > 768 ? \"desktop\" : \"mobile\"\n        };\n\n        this.auth = app.services.get(\"authentication\");\n        this.checkDisplayInterval = null;\n    }\n\n    componentDidMount() {\n        if (this.auth) {\n            // Navigation is rendered based on user roles so we need to watch for changes\n            this.unwatch = this.auth.onIdentity(identity => {\n                this.setState({ user: identity });\n            });\n\n            this.setState({ user: this.auth.identity });\n        }\n\n        this.checkDisplayInterval = setInterval(() => {\n            this.setState({ display: window.outerWidth > 768 ? \"desktop\" : \"mobile\" });\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.checkDisplayInterval);\n\n        // Release data cursors\n        this.unwatch && this.unwatch();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return !_.isEqual(this.state, nextState);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Desktop, Mobile } = this.props;\n        const props = {\n            highlight: this.state.highlight\n        };\n\n        if (this.state.display === \"mobile\") {\n            return <Mobile {...props} />;\n        }\n\n        return <Desktop {...props} />;\n    }\n}\n\nexport default createComponent(Navigation, {\n    modules: [\n        \"Link\",\n        {\n            Desktop: \"Skeleton.Navigation.Desktop\",\n            Mobile: \"Skeleton.Navigation.Mobile\"\n        }\n    ]\n});\n"]}