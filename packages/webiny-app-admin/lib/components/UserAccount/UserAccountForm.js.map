{"version":3,"sources":["../../../src/components/UserAccount/UserAccountForm.js"],"names":["t","namespace","UserAccount","props","auth","services","get","growler","formContainer","api","loadModel","form","showLoading","config","params","_fields","request","then","hideLoading","res","data","onSubmit","model","method","response","code","handleApiError","setModel","password","confirmPassword","success","refresh","Ui","gravatar","value","twoFactorAuthConfirmation","show","submit","Component","modulesProp","modules","AdminLayout"],"mappings":"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","file":"UserAccountForm.js","sourcesContent":["import React from \"react\";\nimport { app, createComponent, i18n } from \"webiny-app\";\nimport TwoFactorAuthActivation from \"./TwoFactorAuthActivation\";\n\n// import TwoFactorAuthConfirmation from './TwoFactorAuthConfirmation';\n\nconst t = i18n.namespace(\"Webiny.Skeleton.UserAccount\");\nclass UserAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.auth = app.services.get(\"authentication\");\n        this.growler = app.services.get(\"growler\");\n    }\n\n    render() {\n        const formContainer = {\n            api: \"/security/auth/me\",\n            loadModel: ({ form }) => {\n                form.showLoading();\n                const config = {\n                    params: { _fields: \"id,firstName,lastName,email,gravatar,twoFactorAuth.status\" }\n                };\n                return form.props.api.request(config).then(res => {\n                    form.hideLoading();\n                    return res.data.data;\n                });\n            },\n            onSubmit: ({ model, form }) => {\n                form.showLoading();\n                return form.props.api.request({ method: \"patch\", data: model }).then(response => {\n                    form.hideLoading();\n                    if (response.data.code) {\n                        return form.handleApiError(response);\n                    }\n\n                    form.setModel({ password: null, confirmPassword: null });\n                    this.growler.success(t`Account settings were saved!`);\n                    this.auth.refresh();\n                });\n            }\n        };\n\n        const { Ui } = this.props;\n\n        return (\n            <Ui.AdminLayout>\n                <Ui.Form {...formContainer}>\n                    {({ model, form }) => (\n                        <Ui.View.Form>\n                            <Ui.View.Header title={t`Account Settings`} />\n                            <Ui.View.Body>\n                                <Ui.Grid.Row>\n                                    <Ui.Grid.Col md={6} sm={12}>\n                                        <Ui.Section title={t`Your account`} />\n                                        <Ui.Input\n                                            label={t`First name`}\n                                            name=\"firstName\"\n                                            validators=\"required\"\n                                        />\n                                        <Ui.Input\n                                            label={t`Last name`}\n                                            name=\"lastName\"\n                                            validators=\"required\"\n                                        />\n                                        <Ui.Email\n                                            label={t`Email`}\n                                            name=\"email\"\n                                            validators=\"required\"\n                                        />\n\n                                        <div className=\"form-group\">\n                                            <label className=\"control-label\">{t`Gravatar`}</label>\n\n                                            <div className=\"input-group\">\n                                                <Ui.Gravatar hash={model.gravatar} size={100} />\n                                            </div>\n                                        </div>\n                                    </Ui.Grid.Col>\n                                    <Ui.Grid.Col md={6} sm={12}>\n                                        <Ui.Section title={t`Reset password`} />\n                                        <Ui.Password\n                                            label={t`New password`}\n                                            name=\"password\"\n                                            placeholder={t`Type your new password`}\n                                        />\n                                        <Ui.Password\n                                            label={t`Confirm password`}\n                                            name=\"confirmPassword\"\n                                            validators=\"eq:@password\"\n                                            placeholder={t`Re-type your new password`}\n                                        >\n                                            <validator name=\"eq\">\n                                                {t`Passwords do not match`}\n                                            </validator>\n                                        </Ui.Password>\n                                        <Ui.ChangeConfirm\n                                            message={({ value }) => (value ? \"Dummy\" : null)}\n                                            renderDialog={function() {\n                                                return <TwoFactorAuthActivation />;\n                                            }}\n                                            onComplete={() => this.twoFactorAuthConfirmation.show()}\n                                        >\n                                            <Ui.Switch\n                                                label={t`Enable 2 Factor Authentication`}\n                                                name=\"twoFactorAuth.status\"\n                                            />\n                                        </Ui.ChangeConfirm>\n                                        {/*<TwoFactorAuthConfirmation ref={ref => this.twoFactorAuthConfirmation = ref}/>*/}\n                                    </Ui.Grid.Col>\n                                </Ui.Grid.Row>\n                            </Ui.View.Body>\n                            <Ui.View.Footer align=\"right\">\n                                <Ui.Button\n                                    type=\"primary\"\n                                    onClick={form.submit}\n                                    label={t`Save account`}\n                                />\n                            </Ui.View.Footer>\n                        </Ui.View.Form>\n                    )}\n                </Ui.Form>\n            </Ui.AdminLayout>\n        );\n    }\n}\n\nexport default createComponent(UserAccount, {\n    modulesProp: \"Ui\",\n    modules: [\n        { AdminLayout: \"Skeleton.AdminLayout\" },\n        \"View\",\n        \"Form\",\n        \"Grid\",\n        \"Gravatar\",\n        \"Input\",\n        \"Email\",\n        \"Password\",\n        \"Button\",\n        \"Section\",\n        \"ChangeConfirm\",\n        \"Switch\",\n        \"Modal\",\n        \"Data\",\n        \"Link\",\n        \"Icon\"\n    ]\n});\n"]}