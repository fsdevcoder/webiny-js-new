{"version":3,"sources":["../../src/endpoint/endpoint.js"],"names":["apiContainers","Endpoint","init","api","getApi","classId","constructor","version","apiContainer","get","set","getApps","map","appInstance","applyEndpointExtensions"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACA;AACA,MAAMA,gBAA4E,EAAlF;;AAEA,MAAMC,QAAN,CAAe;;AAIX;AACAC,SAAKC,GAAL,EAAwB;AACpB;AACA;AACH;;AAEDC,aAAuB;AACnB,cAAMC,UAAU,KAAKC,WAAL,CAAiBD,OAAjC;AACA,cAAME,UAAU,KAAKD,WAAL,CAAiBC,OAAjC;AACA,YAAIC,eAAe,iBAAEC,GAAF,CAAMT,aAAN,EAAqB,CAACK,OAAD,EAAUE,OAAV,CAArB,CAAnB;AACA,YAAI,CAACC,YAAL,EAAmB;AACfA,2BAAe,2BAAiB,IAAjB,CAAf;AACA,6BAAEE,GAAF,CAAMV,aAAN,EAAqB,CAACK,OAAD,EAAUE,OAAV,CAArB,EAAyCC,YAAzC;AACA,iBAAKN,IAAL,CAAUM,YAAV;AACA,uBAAIG,OAAJ,GAAcC,GAAd,CAAmBC,WAAD,IAAsB;AACpCA,4BAAYC,uBAAZ,CAAoC,IAApC;AACH,aAFD;AAGH;;AAED,eAAON,YAAP;AACH;AAxBU;;kBA2BAP,Q","file":"endpoint.js","sourcesContent":["// @flow\nimport _ from \"lodash\";\nimport ApiContainer from \"./apiContainer\";\nimport App from \"./../etc/app\";\nimport { app } from \"./../index\";\n\n// Container for ApiContainer instances\n// The definition of an Endpoint class stays the same no matter how many instances we create so we only need one copy of ApiContainer per endpoint.\nconst apiContainers: { [classId: string]: { [version: string]: ApiContainer } } = {};\n\nclass Endpoint {\n    static classId: string;\n    static version: string;\n\n    // eslint-disable-next-line\n    init(api: ApiContainer) {\n        // Override to define your custom API methods\n        // NOTE: don't forget to call `super.init(api)`\n    }\n\n    getApi(): ApiContainer {\n        const classId = this.constructor.classId;\n        const version = this.constructor.version;\n        let apiContainer = _.get(apiContainers, [classId, version]);\n        if (!apiContainer) {\n            apiContainer = new ApiContainer(this);\n            _.set(apiContainers, [classId, version], apiContainer);\n            this.init(apiContainer);\n            app.getApps().map((appInstance: App) => {\n                appInstance.applyEndpointExtensions(this);\n            });\n        }\n\n        return apiContainer;\n    }\n}\n\nexport default Endpoint;\n"]}