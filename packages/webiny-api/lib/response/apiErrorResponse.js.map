{"version":3,"sources":["../../src/response/apiErrorResponse.js"],"names":["ApiErrorResponse","constructor","data","message","errorCode","statusCode","ERROR_STATUS_CODE","formatResponse","code","isEmpty"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;AAOA,MAAMA,gBAAN,+BAA2C;;AAQvCC,gBACIC,OAAc,IADlB,EAEIC,UAAkB,EAFtB,EAGIC,YAAoB,EAHxB,EAIIC,aAAqBL,iBAAiBM,iBAJ1C,EAKE;AACE,cAAMJ,IAAN,EAAYC,OAAZ,EAAqBE,UAArB;AACA,aAAKD,SAAL,GAAiBA,SAAjB;AACH;;AAEDG,qBAAyB;AACrB,cAAML,OAAO,MAAMK,cAAN,EAAb;AACAL,aAAKM,IAAL,GAAY,KAAKJ,SAAjB;AACA,YAAI,iBAAEK,OAAF,CAAUP,KAAKA,IAAf,CAAJ,EAA0B;AACtB,mBAAOA,KAAKA,IAAZ;AACH;;AAED,eAAOA,IAAP;AACH;AA1BsC;;AA6B3CF,iBAAiBM,iBAAjB,GAAqC,GAArC;;kBAEeN,gB","file":"apiErrorResponse.js","sourcesContent":["// @flow\nimport _ from \"lodash\";\nimport ApiResponse from \"./apiResponse\";\n\n/**\n * ApiErrorResponse class is used to return error responses from your endpoints\n * @param {mixed} data\n * @param {string} message\n * @param {string} errorCode\n * @param {string} statusCode\n */\nclass ApiErrorResponse extends ApiResponse {\n    static ERROR_STATUS_CODE: number;\n\n    data: mixed;\n    message: string;\n    errorCode: string;\n    statusCode: number;\n\n    constructor(\n        data: mixed = null,\n        message: string = \"\",\n        errorCode: string = \"\",\n        statusCode: number = ApiErrorResponse.ERROR_STATUS_CODE\n    ) {\n        super(data, message, statusCode);\n        this.errorCode = errorCode;\n    }\n\n    formatResponse(): Object {\n        const data = super.formatResponse();\n        data.code = this.errorCode;\n        if (_.isEmpty(data.data)) {\n            delete data.data;\n        }\n\n        return data;\n    }\n}\n\nApiErrorResponse.ERROR_STATUS_CODE = 404;\n\nexport default ApiErrorResponse;\n"]}