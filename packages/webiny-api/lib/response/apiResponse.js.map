{"version":3,"sources":["../../src/response/apiResponse.js"],"names":["ApiResponse","constructor","data","message","statusCode","getStatusCode","setStatusCode","getData","format","formatResponse","setData","getMessage","setMessage","toJSON","send","res","status","json"],"mappings":";;;;;AAEA,MAAMA,WAAN,CAAkB;;AAKdC,gBAAYC,OAAc,IAA1B,EAAgCC,UAAkB,EAAlD,EAAsDC,aAAqB,GAA3E,EAAgF;AAC5E,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACH;;AAEDC,oBAAgB;AACZ,eAAO,KAAKD,UAAZ;AACH;;AAEDE,kBAAcF,UAAd,EAAwC;AACpC,aAAKA,UAAL,GAAkBA,UAAlB;AACA,eAAO,IAAP;AACH;;AAEDG,YAAQC,SAAkB,IAA1B,EAAgD;AAC5C,eAAOA,SAAS,KAAKC,cAAL,EAAT,GAAiC,KAAKP,IAA7C;AACH;;AAEDQ,YAAQR,IAAR,EAA4B;AACxB,aAAKA,IAAL,GAAYA,IAAZ;AACA,eAAO,IAAP;AACH;;AAEDS,iBAAqB;AACjB,eAAO,KAAKR,OAAZ;AACH;;AAEDS,eAAWT,OAAX,EAAkC;AAC9B,aAAKA,OAAL,GAAeA,OAAf;AACA,eAAO,IAAP;AACH;;AAEDU,aAAiB;AACb,eAAO,KAAKJ,cAAL,EAAP;AACH;;AAEDA,qBAAyB;AACrB,cAAMP,OAA0C;AAC5CA,kBAAM,KAAKA;AADiC,SAAhD;;AAIA,YAAI,KAAKC,OAAT,EAAkB;AACdD,iBAAKC,OAAL,GAAe,KAAKA,OAApB;AACH;;AAED,eAAOD,IAAP;AACH;;AAED;;;;AAIAY,SAAKC,GAAL,EAA4B;AACxBA,YAAIC,MAAJ,CAAW,KAAKZ,UAAhB;AACAW,YAAIE,IAAJ,CAAS,KAAKJ,MAAL,EAAT;AACH;AA7Da;;kBAgEHb,W","file":"apiResponse.js","sourcesContent":["// @flow\n\nclass ApiResponse {\n    data: mixed;\n    message: string;\n    statusCode: number;\n\n    constructor(data: mixed = null, message: string = \"\", statusCode: number = 200) {\n        this.data = data;\n        this.message = message;\n        this.statusCode = statusCode;\n    }\n\n    getStatusCode() {\n        return this.statusCode;\n    }\n\n    setStatusCode(statusCode: number): this {\n        this.statusCode = statusCode;\n        return this;\n    }\n\n    getData(format: boolean = true): Object | mixed {\n        return format ? this.formatResponse() : this.data;\n    }\n\n    setData(data: mixed): mixed {\n        this.data = data;\n        return this;\n    }\n\n    getMessage(): string {\n        return this.message;\n    }\n\n    setMessage(message: string): this {\n        this.message = message;\n        return this;\n    }\n\n    toJSON(): Object {\n        return this.formatResponse();\n    }\n\n    formatResponse(): Object {\n        const data: { data: mixed, message?: string } = {\n            data: this.data\n        };\n\n        if (this.message) {\n            data.message = this.message;\n        }\n\n        return data;\n    }\n\n    /**\n     * Send output using the express response object\n     * @param res\n     */\n    send(res: express$Response) {\n        res.status(this.statusCode);\n        res.json(this.toJSON());\n    }\n}\n\nexport default ApiResponse;\n"]}