{"version":3,"sources":["../../src/attributes/imageAttribute.js"],"names":["ImageAttribute","setProcessor","processor","setQuality","quality","setPresets","presets","getValue","value","prototype","call","getEntityClass","storage","setStorage","setStorageFolder","storageFolder","setValue","currentValue","newValue","tags","uniqWith","concat","isEqual","id","getParentModel","getParentEntity","on","delete","setOnce"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,cAAN,iCAA2C;;AAGvCC,iBAAaC,SAAb,EAAwD;AACpD,aAAKA,SAAL,GAAiBA,SAAjB;AACA,eAAO,IAAP;AACH;;AAEDC,eAAWC,OAAX,EAA4C;AACxC,aAAKA,OAAL,GAAeA,OAAf;AACA,eAAO,IAAP;AACH;;AAEDC,eAAWC,UAAwB,EAAnC,EAA8C;AAC1C,aAAKA,OAAL,GAAeA,OAAf;;AAEA,eAAO,IAAP;AACH;;AAEKC,YAAN,GAAiB;AAAA;;AAAA;AACb,gBAAIC,QAAQ,MAAM,wBAAcC,SAAd,CAAwBF,QAAxB,CAAiCG,IAAjC,OAAlB;AACA,gBAAIF,iBAAiB,MAAKG,cAAL,EAArB,EAA4C;AACxCH,sBAAMP,YAAN,CAAmB,MAAKC,SAAxB;AACAM,sBAAML,UAAN,CAAiB,MAAKC,OAAtB;AACAI,sBAAMH,UAAN,CAAiB,MAAKC,OAAtB;AACA,oBAAI,MAAKM,OAAT,EAAkB;AACdJ,0BAAMK,UAAN,CAAiB,MAAKD,OAAtB,EAA+BE,gBAA/B,CAAgD,MAAKC,aAArD;AACH;AACJ;;AAED,mBAAOP,KAAP;AAXa;AAYhB;;AAED;AACMQ,YAAN,CAAeR,KAAf,EAAsB;AAAA;;AAAA;AAClB,kBAAMS,eAAe,MAAM,OAAKV,QAAL,EAA3B;AACA,kBAAM,wBAAcE,SAAd,CAAwBO,QAAxB,CAAiCN,IAAjC,SAA4CF,KAA5C,CAAN;;AAEA,kBAAMU,WAAW,MAAM,OAAKX,QAAL,EAAvB;AACA,gBAAIW,oBAAoB,OAAKP,cAAL,EAAxB,EAA+C;AAC3CO,yBAASb,UAAT,CAAoB,OAAKC,OAAzB;AACAY,yBAASf,UAAT,CAAoB,OAAKC,OAAzB;AACAc,yBAASjB,YAAT,CAAsB,OAAKC,SAA3B;AACAgB,yBAASC,IAAT,GAAgB,iBAAEC,QAAF,CAAW,OAAKD,IAAL,CAAUE,MAAV,CAAiBH,SAASC,IAA1B,CAAX,EAA4C,iBAAEG,OAA9C,CAAhB;AACA,oBAAI,OAAKV,OAAT,EAAkB;AACdM,6BAASL,UAAT,CAAoB,OAAKD,OAAzB,EAAkCE,gBAAlC,CAAmD,OAAKC,aAAxD;AACH;AACJ;;AAED;AACA,gBAAIE,iBAAiB,CAACC,QAAD,IAAaD,aAAaM,EAAb,KAAoBL,SAASK,EAA3D,CAAJ,EAAoE;AAChE,uBAAKC,cAAL,GACKC,eADL,GAEKC,EAFL,CAEQ,WAFR,kCAEqB,aAAY;AACzB,0BAAMT,aAAaU,MAAb,EAAN;AACH,iBAJL,GAKKC,OALL;AAMH;;AAED;AAzBkB;AA0BrB;AA5DsC;kBA+D5B5B,c","file":"imageAttribute.js","sourcesContent":["// @flow\nimport _ from \"lodash\";\nimport FileAttribute from \"./fileAttribute\";\nimport type { ImageProcessor } from \"../../types\";\nimport Image, { type ImagePresets } from \"../entities/image.entity\";\n\nclass ImageAttribute extends FileAttribute {\n    quality: number;\n\n    setProcessor(processor: ImageProcessor): ImageAttribute {\n        this.processor = processor;\n        return this;\n    }\n\n    setQuality(quality: number): ImageAttribute {\n        this.quality = quality;\n        return this;\n    }\n\n    setPresets(presets: ImagePresets = {}): Image {\n        this.presets = presets;\n\n        return this;\n    }\n\n    async getValue() {\n        let value = await FileAttribute.prototype.getValue.call(this);\n        if (value instanceof this.getEntityClass()) {\n            value.setProcessor(this.processor);\n            value.setQuality(this.quality);\n            value.setPresets(this.presets);\n            if (this.storage) {\n                value.setStorage(this.storage).setStorageFolder(this.storageFolder);\n            }\n        }\n\n        return value;\n    }\n\n    // $FlowIgnore\n    async setValue(value) {\n        const currentValue = await this.getValue();\n        await FileAttribute.prototype.setValue.call(this, value);\n\n        const newValue = await this.getValue();\n        if (newValue instanceof this.getEntityClass()) {\n            newValue.setPresets(this.presets);\n            newValue.setQuality(this.quality);\n            newValue.setProcessor(this.processor);\n            newValue.tags = _.uniqWith(this.tags.concat(newValue.tags), _.isEqual);\n            if (this.storage) {\n                newValue.setStorage(this.storage).setStorageFolder(this.storageFolder);\n            }\n        }\n\n        // If new value is being assigned and there is an existing file - delete the existing file after a successful save\n        if (currentValue && (!newValue || currentValue.id !== newValue.id)) {\n            this.getParentModel()\n                .getParentEntity()\n                .on(\"afterSave\", async () => {\n                    await currentValue.delete();\n                })\n                .setOnce();\n        }\n\n        return this;\n    }\n}\n\nexport default ImageAttribute;\n"]}