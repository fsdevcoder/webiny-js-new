{"version":3,"sources":["../../src/entities/image.entity.js"],"names":["Image","constructor","presets","attr","char","setDefaultValue","integer","setSkipOnPopulate","dynamic","preset","test","key","getURL","height","parseFloat","width","toFixed","aspectRatio","find","params","has","set","call","save","data","imageSize","prototype","delete","permanent","sizes","getDerivedImages","i","length","image","ensureStorage","storage","getPresetURL","setPresets","setQuality","quality","setProcessor","processor","presetFile","findOne","query","ref","classId","id","setStorage","dir","name","ext","parse","presetKey","join","currentFile","getFile","newImage","body","transformations","ImageClass","presetImage","setStorageFolder","storageFolder","pr","populate","title","tags","type","deleteFileFromStorage","$ne","map","size","tableName"],"mappings":"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","file":"image.entity.js","sourcesContent":["// @flow\nimport path from \"path\";\nimport _ from \"lodash\";\nimport type { EntityFindParams, EntitySaveParams, EntityDeleteParams } from \"webiny-entity/types\";\nimport File from \"./file.entity\";\nimport type { ImageProcessor } from \"../../types\";\n\nexport type ImagePresets = {\n    [preset: string]: [{ action: string }]\n};\n\nclass Image extends File {\n    quality: number;\n    presets: ImagePresets;\n    processor: ImageProcessor;\n\n    constructor() {\n        super();\n\n        this.presets = {};\n\n        this.attr(\"preset\")\n            .char()\n            .setDefaultValue(\"original\");\n        this.attr(\"width\")\n            .integer()\n            .setSkipOnPopulate();\n        this.attr(\"height\")\n            .integer()\n            .setSkipOnPopulate();\n        this.attr(\"src\").dynamic(preset => {\n            return /^(https?:)?\\/\\//.test(this.key) ? this.key : this.getURL(preset);\n        });\n        this.attr(\"aspectRatio\").dynamic(() => {\n            if (this.height) {\n                return parseFloat((this.width / this.height).toFixed(3));\n            }\n\n            return 0;\n        });\n        this.attr(\"isPortrait\").dynamic(() => {\n            return this.aspectRatio <= 1;\n        });\n        this.attr(\"isLandscape\").dynamic(() => {\n            return this.aspectRatio > 1;\n        });\n    }\n\n    static async find(params: EntityFindParams & Object = {}) {\n        if (!_.has(params, \"query.preset\")) {\n            _.set(params, \"query.preset\", \"original\");\n        }\n\n        return File.find.call(this, params);\n    }\n\n    // eslint-disable-next-line\n    async save(params: EntitySaveParams & Object = {}) {\n        if (this.data) {\n            const imageSize = await import(\"image-size\");\n            const { width, height } = imageSize(this.data);\n            this.width = width;\n            this.height = height;\n        }\n\n        return File.prototype.save.call(this, params);\n    }\n\n    async delete(params: EntityDeleteParams & Object = { permanent: true }): Promise<void> {\n        await File.prototype.delete.call(this, params);\n        const sizes = await this.getDerivedImages();\n        for (let i = 0; i < sizes.length; i++) {\n            const image = sizes[i];\n            await image.delete();\n        }\n    }\n\n    getURL(preset: ?string): Promise<string> {\n        if (!preset) {\n            this.ensureStorage();\n            return this.storage.getURL(this.key);\n        }\n\n        return this.getPresetURL(preset);\n    }\n\n    setPresets(presets: ImagePresets = {}): Image {\n        this.presets = presets;\n\n        return this;\n    }\n\n    setQuality(quality: number): Image {\n        this.quality = quality;\n\n        return this;\n    }\n\n    setProcessor(processor: ImageProcessor): Image {\n        this.processor = processor;\n\n        return this;\n    }\n\n    async getPresetURL(preset: string): Promise<string> {\n        if (preset === \"original\") {\n            return this.getURL();\n        }\n\n        const presetFile = await Image.findOne({\n            query: { ref: this.classId + \":\" + this.id, preset }\n        });\n        if (presetFile) {\n            return presetFile.setStorage(this.storage).getURL();\n        }\n\n        // Build preset key based on the original key + name of the preset\n        const { dir, name, ext } = path.parse(this.key);\n        let presetKey = path.join(dir, name + \"-\" + preset) + ext;\n\n        const currentFile = await this.storage.getFile(this.key);\n        const newImage = await this.processor({\n            image: currentFile.body,\n            transformations: this.presets[preset]\n        });\n\n        // Create new entity\n        const ImageClass = this.constructor;\n        const presetImage = new ImageClass();\n        presetImage.key = presetKey;\n\n        presetImage.setStorage(this.storage);\n        presetImage.setStorageFolder(this.storageFolder);\n        presetImage.setProcessor(this.pr);\n\n        presetImage.populate({\n            ref: this,\n            name: this.name,\n            title: this.title,\n            data: newImage,\n            preset,\n            tags: this.tags,\n            type: this.type,\n            ext: this.ext\n        });\n        await presetImage.save();\n\n        return presetImage.getURL();\n    }\n\n    async deleteFileFromStorage() {\n        if (this.preset === \"original\") {\n            const sizes = await this.getDerivedImages();\n            for (let i = 0; i < sizes.length; i++) {\n                const image = sizes[i];\n                await image.delete();\n            }\n        }\n\n        return File.prototype.deleteFileFromStorage.call(this);\n    }\n\n    /**\n     * Get existing sizes of this file\n     *\n     * @return {EntityCollection}\n     */\n    async getDerivedImages() {\n        const sizes = await Image.find({\n            query: {\n                preset: { $ne: \"original\" },\n                ref: this.classId + \":\" + this.id\n            }\n        });\n\n        return sizes.map(size => {\n            size.setStorage(this.storage);\n            return this;\n        });\n    }\n}\n\nImage.classId = \"Image\";\nImage.tableName = \"Images\";\n\nexport default Image;\n"]}