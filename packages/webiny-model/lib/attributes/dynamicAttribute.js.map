{"version":3,"sources":["../../src/attributes/dynamicAttribute.js"],"names":["DynamicAttribute","constructor","name","attributesContainer","callback","toStorage","canSetValue","getValue","current","call","getParentModel","arguments","onGetCallback"],"mappings":";;;;;;AACA;;;;AACA;;;;AAEA,MAAMA,gBAAN,6BAAyC;;AAGrCC,gBAAYC,IAAZ,EAA0BC,mBAA1B,EAAoEC,QAApE,EAAwF;AACpF,cAAMF,IAAN,EAAYC,mBAAZ;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDC,kBAAuB;AACnB,eAAO,KAAP;AACH;;AAED;AACAC,eAAkB;AACd,cAAMC,UAAU,KAAKJ,QAAL,CAAcK,IAAd,CAAmB,KAAKC,cAAL,EAAnB,EAA0C,GAAGC,SAA7C,CAAhB;AACA,eAAO,KAAKC,aAAL,CAAmBJ,OAAnB,EAA4B,GAAGG,SAA/B,CAAP;AACH;AAjBoC;;kBAoB1BX,gB","file":"dynamicAttribute.js","sourcesContent":["// @flow\nimport Attribute from \"./../attribute\";\nimport { AttributesContainer } from \"../index\";\n\nclass DynamicAttribute extends Attribute {\n    callback: Function;\n\n    constructor(name: string, attributesContainer: AttributesContainer, callback: Function) {\n        super(name, attributesContainer);\n        this.callback = callback;\n        this.toStorage = false;\n    }\n\n    canSetValue(): boolean {\n        return false;\n    }\n\n    // eslint-disable-next-line\n    getValue(): mixed {\n        const current = this.callback.call(this.getParentModel(), ...arguments);\n        return this.onGetCallback(current, ...arguments);\n    }\n}\n\nexport default DynamicAttribute;\n"]}