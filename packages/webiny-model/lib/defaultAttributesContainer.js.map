{"version":3,"sources":["../src/defaultAttributesContainer.js"],"names":["DefaultAttributesContainer","attr","attribute","array","model","getParentModel","setAttribute","name","getAttribute","char","boolean","integer","float","dynamic","callback","parent","models","date"],"mappings":";;;;;;AAEA;;;;AACA;;;;AAYA;;;;AAIA,MAAMA,0BAAN,uCAA6D;AACzDC,SAAKC,SAAL,EAAoD;AAChD,cAAMD,IAAN,CAAWC,SAAX;AACA,eAAO,IAAP;AACH;;AAEDC,YAAwB;AACpB,cAAMC,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,+BAAmB,KAAKA,IAAxB,EAA8B,IAA9B,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDE,WAAsB;AAClB,cAAML,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,8BAAkB,KAAKA,IAAvB,EAA6B,IAA7B,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDG,cAA4B;AACxB,cAAMN,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,iCAAqB,KAAKA,IAA1B,EAAgC,IAAhC,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDI,cAA4B;AACxB,cAAMP,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,iCAAqB,KAAKA,IAA1B,EAAgC,IAAhC,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDK,YAAwB;AACpB,cAAMR,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,+BAAmB,KAAKA,IAAxB,EAA8B,IAA9B,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDM,YAAQC,QAAR,EAA8C;AAC1C,cAAMV,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,iCAAqB,KAAKA,IAA1B,EAAgC,IAAhC,EAAsCO,QAAtC,CAA9B;AACA,eAAOV,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;;AAEDH,UAAMA,KAAN,EAAoC;AAChC,cAAMW,SAAS,KAAKV,cAAL,EAAf;AACAU,eAAOT,YAAP,CAAoB,KAAKC,IAAzB,EAA+B,+BAAmB,KAAKA,IAAxB,EAA8B,IAA9B,EAAoCH,KAApC,CAA/B;AACA,eAAOW,OAAOP,YAAP,CAAoB,KAAKD,IAAzB,CAAP;AACH;;AAEDS,WAAOZ,KAAP,EAAsC;AAClC,cAAMW,SAAS,KAAKV,cAAL,EAAf;AACAU,eAAOT,YAAP,CAAoB,KAAKC,IAAzB,EAA+B,gCAAoB,KAAKA,IAAzB,EAA+B,IAA/B,EAAqCH,KAArC,CAA/B;AACA,eAAOW,OAAOP,YAAP,CAAoB,KAAKD,IAAzB,CAAP;AACH;;AAEDU,WAAsB;AAClB,cAAMb,QAAQ,KAAKC,cAAL,EAAd;AACAD,cAAME,YAAN,CAAmB,KAAKC,IAAxB,EAA8B,8BAAkB,KAAKA,IAAvB,EAA6B,IAA7B,CAA9B;AACA,eAAOH,MAAMI,YAAN,CAAmB,KAAKD,IAAxB,CAAP;AACH;AA1DwD;kBA6D9CP,0B","file":"defaultAttributesContainer.js","sourcesContent":["// @flow\nimport type { Model } from \".\";\nimport AttributesContainer from \"./attributesContainer\";\nimport {\n    ArrayAttribute,\n    CharAttribute,\n    BooleanAttribute,\n    IntegerAttribute,\n    FloatAttribute,\n    DateAttribute,\n    DynamicAttribute,\n    ModelAttribute,\n    ModelsAttribute\n} from \"./attributes\";\n\n/**\n * Contains basic attributes. If needed, this class can be extended to add additional attributes,\n * and then be set as a new attributes container as the default one.\n */\nclass DefaultAttributesContainer extends AttributesContainer {\n    attr(attribute: string): DefaultAttributesContainer {\n        super.attr(attribute);\n        return this;\n    }\n\n    array(): ArrayAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new ArrayAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    char(): CharAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new CharAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    boolean(): BooleanAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new BooleanAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    integer(): IntegerAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new IntegerAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    float(): FloatAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new FloatAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n\n    dynamic(callback: Function): DynamicAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new DynamicAttribute(this.name, this, callback));\n        return model.getAttribute(this.name);\n    }\n\n    model(model: Model): ModelAttribute {\n        const parent = this.getParentModel();\n        parent.setAttribute(this.name, new ModelAttribute(this.name, this, model));\n        return parent.getAttribute(this.name);\n    }\n\n    models(model: Model): ModelsAttribute {\n        const parent = this.getParentModel();\n        parent.setAttribute(this.name, new ModelsAttribute(this.name, this, model));\n        return parent.getAttribute(this.name);\n    }\n\n    date(): DateAttribute {\n        const model = this.getParentModel();\n        model.setAttribute(this.name, new DateAttribute(this.name, this));\n        return model.getAttribute(this.name);\n    }\n}\n\nexport default DefaultAttributesContainer;\n"]}