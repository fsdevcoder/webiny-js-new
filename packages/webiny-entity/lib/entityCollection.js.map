{"version":3,"sources":["../src/entityCollection.js"],"names":["EntityCollection","Array","constructor","values","__entityCollection","params","meta","isArray","map","item","push","setParams","getParams","setMeta","getMeta","toJSON","fields","collection","entity","all","setTotalCount","totalCount","getTotalCount"],"mappings":";;;;;;;;;;;;;;AACA;;;;;;AAEA,MAAMA,gBAAN,SAA+BC,KAA/B,CAA4C;;AAGxCC,gBAAYC,SAAuB,EAAnC,EAAuC;AACnC;AACA,aAAKC,kBAAL,GAA0B,EAAEC,QAAQ,EAAV,EAAcC,MAAM,EAApB,EAA1B;AACA,YAAIL,MAAMM,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACvBA,mBAAOK,GAAP,CAAWC,QAAQ,KAAKC,IAAL,CAAUD,IAAV,CAAnB;AACH;AACJ;;AAEDE,cAAUN,MAAV,EAAgC;AAC5B,aAAKD,kBAAL,CAAwBC,MAAxB,GAAiCA,MAAjC;AACA,eAAO,IAAP;AACH;;AAEDO,gBAAoB;AAChB,eAAO,KAAKR,kBAAL,CAAwBC,MAA/B;AACH;;AAEDQ,YAAQP,IAAR,EAA4B;AACxB,aAAKF,kBAAL,CAAwBE,IAAxB,GAA+BA,IAA/B;AACA,eAAO,IAAP;AACH;;AAEDQ,cAAkB;AACd,eAAO,KAAKV,kBAAL,CAAwBE,IAA/B;AACH;;AAEKS,UAAN,CAAaC,MAAb,EAAqD;AAAA;;AAAA;AACjD,kBAAMC,aAAa,MAAKT,GAAL;AAAA,2DAAS,WAAOU,MAAP,EAAyB;AACjD,wBAAIA,kCAAJ,EAA8B;AAC1B,+BAAO,MAAMA,OAAOH,MAAP,CAAcC,MAAd,CAAb;AACH;AACD,2BAAOE,MAAP;AACH,iBALkB;;AAAA;AAAA;AAAA;AAAA,iBAAnB;;AAOA,mBAAO,kBAAQC,GAAR,CAAYF,UAAZ,CAAP;AARiD;AASpD;;AAEDG,kBAAcC,UAAd,EAAwC;AACpC,aAAKjB,kBAAL,CAAwBE,IAAxB,CAA6Be,UAA7B,GAA0CA,UAA1C;AACA,eAAO,IAAP;AACH;;AAEDC,oBAAyB;AACrB,eAAO,KAAKlB,kBAAL,CAAwBE,IAAxB,CAA6Be,UAApC;AACH;AA/CuC;kBAkD7BrB,gB","file":"entityCollection.js","sourcesContent":["// @flow\nimport Entity from \"./entity\";\n\nclass EntityCollection extends Array<mixed> {\n    __entityCollection: { params: Object, meta: Object };\n\n    constructor(values: Array<mixed> = []) {\n        super();\n        this.__entityCollection = { params: {}, meta: {} };\n        if (Array.isArray(values)) {\n            values.map(item => this.push(item));\n        }\n    }\n\n    setParams(params: Object): this {\n        this.__entityCollection.params = params;\n        return this;\n    }\n\n    getParams(): Object {\n        return this.__entityCollection.params;\n    }\n\n    setMeta(meta: Object): this {\n        this.__entityCollection.meta = meta;\n        return this;\n    }\n\n    getMeta(): Object {\n        return this.__entityCollection.meta;\n    }\n\n    async toJSON(fields: ?string): Promise<Array<mixed>> {\n        const collection = this.map(async (entity: mixed) => {\n            if (entity instanceof Entity) {\n                return await entity.toJSON(fields);\n            }\n            return entity;\n        });\n\n        return Promise.all(collection);\n    }\n\n    setTotalCount(totalCount: number): this {\n        this.__entityCollection.meta.totalCount = totalCount;\n        return this;\n    }\n\n    getTotalCount(): ?number {\n        return this.__entityCollection.meta.totalCount;\n    }\n}\n\nexport default EntityCollection;\n"]}