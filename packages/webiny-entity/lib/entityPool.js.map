{"version":3,"sources":["../src/entityPool.js"],"names":["EntityPool","constructor","pool","add","entity","name","id","has","entityClass","getClassName","entityId","remove","get","undefined","poolEntry","getEntity","flush"],"mappings":";;;;;;AAEA;;AAEA,MAAMA,UAAN,CAAiB;;AAGbC,kBAAc;AACV,aAAKC,IAAL,GAAY,EAAZ;AACH;;AAEDC,QAAIC,MAAJ,EAA0B;AACtB,YAAI,CAAC,KAAKF,IAAL,CAAUE,OAAOH,WAAP,CAAmBI,IAA7B,CAAL,EAAyC;AACrC,iBAAKH,IAAL,CAAUE,OAAOH,WAAP,CAAmBI,IAA7B,IAAqC,EAArC;AACH;;AAED,aAAKH,IAAL,CAAUE,OAAOH,WAAP,CAAmBI,IAA7B,EAAmCD,OAAOE,EAA1C,IAAgD,sBAAoBF,MAApB,CAAhD;AACA,eAAO,IAAP;AACH;;AAEDG,QAAIH,MAAJ,EAAoCE,EAApC,EAAyD;AACrD,cAAME,cAAcJ,OAAOK,YAAP,EAApB;AACA,YAAI,CAAC,KAAKP,IAAL,CAAUM,WAAV,CAAL,EAA6B;AACzB,mBAAO,KAAP;AACH;;AAED,cAAME,WAAWN,6BAA2BA,OAAOE,EAAlC,GAAuCA,EAAxD;AACA,eAAO,OAAO,KAAKJ,IAAL,CAAUM,WAAV,EAAuBE,QAAvB,CAAP,KAA4C,WAAnD;AACH;;AAEDC,WAAOP,MAAP,EAA6B;AACzB,YAAI,CAAC,KAAKF,IAAL,CAAUE,OAAOH,WAAP,CAAmBI,IAA7B,CAAL,EAAyC;AACrC,mBAAO,IAAP;AACH;;AAED,eAAO,KAAKH,IAAL,CAAUE,OAAOH,WAAP,CAAmBI,IAA7B,EAAmCD,OAAOE,EAA1C,CAAP;AACA,eAAO,IAAP;AACH;;AAEDM,QAAIR,MAAJ,EAAoCE,EAApC,EAAyD;AACrD,cAAME,cAAcJ,OAAOK,YAAP,EAApB;AACA,YAAI,CAAC,KAAKP,IAAL,CAAUM,WAAV,CAAL,EAA6B;AACzB,mBAAOK,SAAP;AACH;;AAED,cAAMH,WAAWN,6BAA2BA,OAAOE,EAAlC,GAAuCA,EAAxD;AACA,cAAMQ,YAA6B,KAAKZ,IAAL,CAAUM,WAAV,EAAuBE,QAAvB,CAAnC;AACA,YAAII,SAAJ,EAAe;AACX,mBAAOA,UAAUC,SAAV,EAAP;AACH;AACD,eAAOF,SAAP;AACH;;AAEDG,YAAc;AACV,aAAKd,IAAL,GAAY,EAAZ;AACA,eAAO,IAAP;AACH;AApDY;;kBAuDFF,U","file":"entityPool.js","sourcesContent":["// @flow\n\nimport { Entity, EntityPoolEntry } from \".\";\n\nclass EntityPool {\n    pool: {};\n\n    constructor() {\n        this.pool = {};\n    }\n\n    add(entity: Entity): this {\n        if (!this.pool[entity.constructor.name]) {\n            this.pool[entity.constructor.name] = {};\n        }\n\n        this.pool[entity.constructor.name][entity.id] = new EntityPoolEntry(entity);\n        return this;\n    }\n\n    has(entity: Class<Entity> | Entity, id: ?mixed): boolean {\n        const entityClass = entity.getClassName();\n        if (!this.pool[entityClass]) {\n            return false;\n        }\n\n        const entityId = entity instanceof Entity ? entity.id : id;\n        return typeof this.pool[entityClass][entityId] !== \"undefined\";\n    }\n\n    remove(entity: Entity): this {\n        if (!this.pool[entity.constructor.name]) {\n            return this;\n        }\n\n        delete this.pool[entity.constructor.name][entity.id];\n        return this;\n    }\n\n    get(entity: Class<Entity> | Entity, id: ?mixed): ?Entity {\n        const entityClass = entity.getClassName();\n        if (!this.pool[entityClass]) {\n            return undefined;\n        }\n\n        const entityId = entity instanceof Entity ? entity.id : id;\n        const poolEntry: EntityPoolEntry = this.pool[entityClass][entityId];\n        if (poolEntry) {\n            return poolEntry.getEntity();\n        }\n        return undefined;\n    }\n\n    flush(): this {\n        this.pool = {};\n        return this;\n    }\n}\n\nexport default EntityPool;\n"]}