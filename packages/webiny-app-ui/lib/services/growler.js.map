{"version":3,"sources":["../../src/services/growler.js"],"names":["GrowlComponents","GrowlContainer","getGrowler","document","body","appendChild","createElement","Promise","growlContainer","Growl","ref","resolve","render","querySelector","Growler","component","then","growler","addGrowl","remove","growlId","removeById","info","message","title","sticky","ttl","success","danger","warning"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEA;AACA,IAAIA,kBAAkB,IAAtB;AACA,IAAIC,iBAAiB,IAArB;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAI,CAACD,cAAL,EAAqB;AACjBE,iBAASC,IAAT,CAAcC,WAAd,CAA0BF,SAASG,aAAT,CAAuB,gBAAvB,CAA1B;AACA,eAAO,IAAIC,OAAJ,CAAY,mBAAW;AAC1B,gBAAMC,iBACF;AAAA;AAAA,kBAAU,SAAS,CAAC,OAAD,CAAnB;AACK,gCAAe;AAAA,wBAAZC,KAAY,QAAZA,KAAY;;AACZT,sCAAkBS,KAAlB;AACA,2BACI,8BAAC,eAAD,CAAiB,SAAjB;AACI,6CAAqB,kCAAO;AACxBR,6CAAiBS,GAAjB;AACAC,oCAAQV,cAAR;AACH;AAJL,sBADJ;AAQH;AAXL,aADJ;AAeA,+BAASW,MAAT,CAAgBJ,cAAhB,EAAgCL,SAASU,aAAT,CAAuB,gBAAvB,CAAhC;AACH,SAjBM,CAAP;AAkBH;;AAED,WAAON,QAAQI,OAAR,CAAgBV,cAAhB,CAAP;AACH;;AAED,SAASa,OAAT,CAAiBC,SAAjB,EAA4B;AACxB,WAAOb,aAAac,IAAb,CAAkB;AAAA,eAAWC,QAAQC,QAAR,CAAiBH,SAAjB,CAAX;AAAA,KAAlB,CAAP;AACH;;AAED,sBAASD,OAAT,EAAkB;AACRK,UADQ;AAAA,8GACDC,OADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEYlB,YAFZ;;AAAA;AAEJe,mCAFI;;AAAA,gCAILA,OAJK;AAAA;AAAA;AAAA;;AAAA,6DAKC,IALD;;AAAA;;AAQVA,oCAAQI,UAAR,CAAmBD,OAAnB;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWRE,QAXQ;AAAA,+GAWHC,OAXG;AAAA,gBAWMC,KAXN,uEAWc,MAXd;AAAA,gBAWsBC,MAXtB,uEAW+B,KAX/B;AAAA,gBAWsCC,GAXtC,uEAW4C,IAX5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAYYxB,YAZZ;;AAAA;AAYJe,mCAZI;;AAAA,gCAcLA,OAdK;AAAA;AAAA;AAAA;;AAAA,8DAeC,IAfD;;AAAA;AAAA,8DAkBHA,QAAQC,QAAR,CAAiB,8BAAC,eAAD,CAAiB,IAAjB,EAA0B,EAAEK,gBAAF,EAAWC,YAAX,EAAkBC,cAAlB,EAA0BC,QAA1B,EAA1B,CAAjB,CAlBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBRC,WArBQ;AAAA,+GAqBAJ,OArBA;AAAA,gBAqBSC,KArBT,uEAqBiB,SArBjB;AAAA,gBAqB4BC,MArB5B,uEAqBqC,KArBrC;AAAA,gBAqB4CC,GArB5C,uEAqBkD,IArBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAsBYxB,YAtBZ;;AAAA;AAsBJe,mCAtBI;;AAAA,gCAwBLA,OAxBK;AAAA;AAAA;AAAA;;AAAA,8DAyBC,IAzBD;;AAAA;AAAA,8DA4BHA,QAAQC,QAAR,CAAiB,8BAAC,eAAD,CAAiB,OAAjB,EAA6B,EAAEK,gBAAF,EAAWC,YAAX,EAAkBC,cAAlB,EAA0BC,QAA1B,EAA7B,CAAjB,CA5BG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+BRE,UA/BQ;AAAA,+GA+BDL,OA/BC;AAAA,gBA+BQC,KA/BR,uEA+BgB,QA/BhB;AAAA,gBA+B0BC,MA/B1B,uEA+BmC,IA/BnC;AAAA,gBA+ByCC,GA/BzC,uEA+B+C,IA/B/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAgCYxB,YAhCZ;;AAAA;AAgCJe,mCAhCI;;AAAA,gCAkCLA,OAlCK;AAAA;AAAA;AAAA;;AAAA,8DAmCC,IAnCD;;AAAA;AAAA,8DAsCHA,QAAQC,QAAR,CAAiB,8BAAC,eAAD,CAAiB,MAAjB,EAA4B,EAAEK,gBAAF,EAAWC,YAAX,EAAkBC,cAAlB,EAA0BC,QAA1B,EAA5B,CAAjB,CAtCG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCRG,WAzCQ;AAAA,+GAyCAN,OAzCA;AAAA,gBAyCSC,KAzCT,uEAyCiB,SAzCjB;AAAA,gBAyC4BC,MAzC5B,uEAyCqC,IAzCrC;AAAA,gBAyC2CC,GAzC3C,uEAyCiD,IAzCjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA0CYxB,YA1CZ;;AAAA;AA0CJe,mCA1CI;;AAAA,gCA4CLA,OA5CK;AAAA;AAAA;AAAA;;AAAA,8DA6CC,IA7CD;;AAAA;AAAA,8DAgDHA,QAAQC,QAAR,CAAiB,8BAAC,eAAD,CAAiB,OAAjB,EAA6B,EAAEK,gBAAF,EAAWC,YAAX,EAAkBC,cAAlB,EAA0BC,QAA1B,EAA7B,CAAjB,CAhDG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAlB;;kBAoDeZ,O","file":"growler.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport { LazyLoad } from \"webiny-app\";\n\n// These will be lazy loaded when first growl is performed\nlet GrowlComponents = null;\nlet GrowlContainer = null;\n\nfunction getGrowler() {\n    if (!GrowlContainer) {\n        document.body.appendChild(document.createElement(\"webiny-growler\"));\n        return new Promise(resolve => {\n            const growlContainer = (\n                <LazyLoad modules={[\"Growl\"]}>\n                    {({ Growl }) => {\n                        GrowlComponents = Growl;\n                        return (\n                            <GrowlComponents.Container\n                                onComponentDidMount={ref => {\n                                    GrowlContainer = ref;\n                                    resolve(GrowlContainer);\n                                }}\n                            />\n                        );\n                    }}\n                </LazyLoad>\n            );\n            ReactDOM.render(growlContainer, document.querySelector(\"webiny-growler\"));\n        });\n    }\n\n    return Promise.resolve(GrowlContainer);\n}\n\nfunction Growler(component) {\n    return getGrowler().then(growler => growler.addGrowl(component));\n}\n\n_.assign(Growler, {\n    async remove(growlId) {\n        const growler = await getGrowler();\n\n        if (!growler) {\n            return null;\n        }\n\n        growler.removeById(growlId);\n    },\n\n    async info(message, title = \"Info\", sticky = false, ttl = 3000) {\n        const growler = await getGrowler();\n\n        if (!growler) {\n            return null;\n        }\n\n        return growler.addGrowl(<GrowlComponents.Info {...{ message, title, sticky, ttl }} />);\n    },\n\n    async success(message, title = \"Success\", sticky = false, ttl = 3000) {\n        const growler = await getGrowler();\n\n        if (!growler) {\n            return null;\n        }\n\n        return growler.addGrowl(<GrowlComponents.Success {...{ message, title, sticky, ttl }} />);\n    },\n\n    async danger(message, title = \"Danger\", sticky = true, ttl = 3000) {\n        const growler = await getGrowler();\n\n        if (!growler) {\n            return null;\n        }\n\n        return growler.addGrowl(<GrowlComponents.Danger {...{ message, title, sticky, ttl }} />);\n    },\n\n    async warning(message, title = \"Warning\", sticky = true, ttl = 3000) {\n        const growler = await getGrowler();\n\n        if (!growler) {\n            return null;\n        }\n\n        return growler.addGrowl(<GrowlComponents.Warning {...{ message, title, sticky, ttl }} />);\n    }\n});\n\nexport default Growler;\n"]}