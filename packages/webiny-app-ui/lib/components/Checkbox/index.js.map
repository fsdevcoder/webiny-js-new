{"version":3,"sources":["../../../src/components/Checkbox/index.js"],"names":["Checkbox","props","state","initialState","id","onChange","bind","isChecked","attachToForm","e","value","target","checked","optionIndex","callback","validate","undefined","renderLabel","call","option","checkbox","render","styles","css","isDisabled","checkboxDisabled","className","checkboxProps","disabled","style","name","renderValidationMessage","Component","defaultProps","label","tooltip","Tooltip","Icon","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport classSet from \"classnames\";\nimport { createComponent } from 'webiny-app';\nimport { FormComponent } from \"webiny-app-ui\";\nimport styles from './styles.css';\n\nclass Checkbox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.initialState\n        };\n\n        this.id = _.uniqueId('checkbox-');\n        this.onChange = this.onChange.bind(this);\n        this.isChecked = this.isChecked.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n    }\n\n    onChange(e, value = e.target.checked) {\n        if (this.props.optionIndex !== null) {\n            this.props.onChange(this.props.optionIndex, value);\n        } else {\n            const callback = this.props.validate ? this.validate : _.noop;\n            this.props.onChange(e.target.checked, callback);\n        }\n    }\n\n    isChecked() {\n        const { value } = this.props;\n        return !_.isNull(value) && value !== false && value !== undefined;\n    }\n\n    renderLabel() {\n        return this.props.renderLabel.call(this, { option: this.props.option, checkbox: this });\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { styles } = this.props;\n        const css = classSet(\n            styles.checkbox,\n            this.props.isDisabled() && styles.checkboxDisabled,\n            this.props.className\n        );\n\n        const checkboxProps = {\n            disabled: this.props.isDisabled(),\n            onChange: this.onChange,\n            checked: this.isChecked()\n        };\n\n        return (\n            <div className={css} style={this.props.style}>\n                <input id={this.id} type=\"checkbox\" {...checkboxProps}/>\n                <label htmlFor={this.id}>{this.renderLabel()}</label>\n                {this.props.name && this.props.renderValidationMessage.call(this)}\n            </div>\n        );\n    }\n\n}\n\nCheckbox.defaultProps = {\n    label: '',\n    className: null,\n    style: null,\n    option: null,\n    optionIndex: null,\n    renderLabel() {\n        let tooltip = null;\n        if (this.props.tooltip) {\n            tooltip = (\n                <LazyLoad modules={['Tooltip', 'Icon']}>\n                    {({ Tooltip, Icon }) => (\n                        <Tooltip key=\"label\" target={<Icon icon=\"icon-info-circle\"/>}>{this.props.tooltip}</Tooltip>\n                    )}\n                </LazyLoad>\n            );\n        }\n        return <span>{this.props.label} {tooltip}</span>;\n    }\n};\n\nexport default createComponent([Checkbox, FormComponent], { styles, formComponent: true });"]}