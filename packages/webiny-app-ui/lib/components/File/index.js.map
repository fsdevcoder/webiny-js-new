{"version":3,"sources":["../../../src/components/File/index.js"],"names":["t","namespace","SimpleFile","props","state","initialState","map","m","bind","attachToForm","onChange","then","setState","isValid","file","error","validate","files","errors","length","e","stopPropagation","onGetFiles","$this","reader","getFiles","multiple","value","render","call","FileReader","FormGroup","styles","fileReaderProps","accept","onReady","filesChanged","fileChanged","readAs","sizeLimit","fileReader","clearBtn","fileBtn","clearBtnIcon","join","clearFiles","renderErrors","renderError","className","renderLabel","wrapper","placeholder","input","renderValue","uploadBtn","renderDescription","renderValidationMessage","Component","defaultProps","Alert","name","message","data","err","key","push","modules","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent, i18n } from \"webiny-app\";\nimport { FormComponent } from \"webiny-app-ui\";\nimport styles from \"./styles.css\";\n\nconst t = i18n.namespace(\"Webiny.Ui.File\");\n\nclass SimpleFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.initialState\n        };\n        [\"fileChanged\", \"filesChanged\", \"getFiles\", \"clearFiles\"].map(\n            m => (this[m] = this[m].bind(this))\n        );\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n    }\n\n    clearFiles() {\n        this.props.onChange(null).then(() => {\n            this.setState({ isValid: null });\n        });\n    }\n\n    fileChanged(file, error) {\n        if (error) {\n            this.setState({ error });\n            return;\n        }\n\n        if (_.has(file, \"data\")) {\n            this.props.onChange(file).then(this.props.validate);\n        }\n    }\n\n    filesChanged(files, errors) {\n        if (errors.length > 0) {\n            this.setState({ errors });\n        }\n\n        if (files.length > 0) {\n            this.props.onChange(files).then(this.props.validate);\n        }\n    }\n\n    getFiles(e) {\n        this.setState({ error: null, errors: null });\n        e.stopPropagation();\n        if (this.props.onGetFiles) {\n            this.props.onGetFiles({ $this: this });\n            return;\n        }\n        this.reader.getFiles();\n    }\n\n    renderValue() {\n        if (this.props.multiple) {\n            return this.props.value\n                ? t`{files|count:1:file:default:files} selected`({\n                      files: _.get(this.props.value, \"length\", 0)\n                  })\n                : \"\";\n        }\n\n        return _.get(this.props.value, \"name\", \"\");\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { FileReader, FormGroup, styles } = this.props;\n\n        const fileReaderProps = {\n            accept: this.props.accept,\n            onReady: reader => (this.reader = reader),\n            onChange: this.props.multiple ? this.filesChanged : this.fileChanged,\n            multiple: this.props.multiple,\n            readAs: this.props.readAs,\n            sizeLimit: this.props.sizeLimit\n        };\n        const fileReader = <FileReader {...fileReaderProps} />;\n\n        let clearBtn = null;\n        if (this.props.value) {\n            clearBtn = (\n                <div\n                    className={[styles.fileBtn, styles.clearBtn, styles.clearBtnIcon].join(\" \")}\n                    onClick={this.clearFiles}\n                >\n                    <span>Clear</span>\n                </div>\n            );\n        }\n\n        let error = null;\n        if (this.state.error || this.state.errors) {\n            error = this.props.multiple\n                ? this.props.renderErrors.call(this)\n                : this.props.renderError.call(this);\n        }\n\n        return (\n            <FormGroup valid={this.state.isValid} className={this.props.className}>\n                {this.props.renderLabel.call(this)}\n                <div>{error}</div>\n                <div className={styles.wrapper + \" inputGroup\"}>\n                    <input\n                        type=\"text\"\n                        placeholder={this.props.placeholder}\n                        readOnly={true}\n                        onClick={this.getFiles}\n                        className={styles.input}\n                        value={this.renderValue()}\n                        onChange={_.noop}\n                    />\n\n                    {clearBtn}\n                    <div\n                        className={styles.fileBtn + \" \" + styles.uploadBtn}\n                        onClick={this.getFiles}\n                    >\n                        <span>Select</span>\n                        {fileReader}\n                    </div>\n                    {this.props.renderDescription.call(this)}\n                    {this.props.renderValidationMessage.call(this)}\n                </div>\n            </FormGroup>\n        );\n    }\n}\n\nSimpleFile.defaultProps = {\n    accept: [],\n    multiple: false,\n    sizeLimit: 2485760,\n    readAs: \"data\", // or binary\n    onGetFiles: null,\n    renderError() {\n        const { Alert } = this.props;\n        return (\n            <Alert title={t`A file could not be selected`} type=\"error\" close>\n                <ul>\n                    <li>\n                        <strong>{this.state.error.name}</strong>: {this.state.error.message}\n                    </li>\n                </ul>\n            </Alert>\n        );\n    },\n    renderErrors() {\n        const { Alert } = this.props;\n        const data = [];\n        _.each(this.state.errors, (err, key) => {\n            data.push(\n                <li key={key}>\n                    <strong>{err.name}</strong>: {err.message}\n                </li>\n            );\n        });\n\n        return (\n            <Alert title={t`Some files could not be selected`} type=\"error\" close>\n                {data && <ul>{data}</ul>}\n            </Alert>\n        );\n    }\n};\n\nexport default createComponent([SimpleFile, FormComponent], {\n    modules: [\"FileReader\", \"FormGroup\", \"Alert\"],\n    styles,\n    formComponent: true\n});\n"]}