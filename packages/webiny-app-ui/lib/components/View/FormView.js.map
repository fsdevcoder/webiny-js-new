{"version":3,"sources":["../../../src/components/View/FormView.jsx"],"names":["FormView","props","parseLayout","bind","children","form","console","error","headerComponent","bodyComponent","footerComponent","errorComponent","Form","Children","map","child","loader","bodyChild","Loader","bodyChildren","toArray","push","isLoading","cloneElement","Error","getError","nextProps","render","call","Panel","styles","viewContent","panel","Component","defaultProps","formInject","modules"],"mappings":"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","file":"FormView.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { isElementOfType, createComponent } from 'webiny-app';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport styles from './styles.css';\n\nclass FormView extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.parseLayout = this.parseLayout.bind(this);\n    }\n\n    parseLayout(children) {\n        if (!this.props.form) {\n            console.error('<View.Form> must be a child of a Form element!');\n            return;\n        }\n\n        this.headerComponent = null;\n        this.bodyComponent = null;\n        this.footerComponent = null;\n        this.errorComponent = null;\n\n        if (typeof children !== 'object' || children === null) {\n            return children;\n        }\n\n        const { Form } = this.props;\n        // Loop through View elements and detect header/body/footer components\n        React.Children.map(children, child => {\n            if (isElementOfType(child, Header)) {\n                this.headerComponent = child;\n                return;\n            }\n\n            if (isElementOfType(child, Body)) {\n                // Check if form loader exists in body\n                let loader = null;\n                React.Children.map(child.props.children, bodyChild => {\n                    if (isElementOfType(bodyChild, Form.Loader)) {\n                        loader = true;\n                    }\n                });\n\n                if (loader) {\n                    // We have our body element\n                    this.bodyComponent = child;\n                } else {\n                    // We need to create form loader ourselves\n                    const bodyChildren = React.Children.toArray(child.props.children);\n                    bodyChildren.push(\n                        <Form.Loader key=\"loader\" show={this.props.form.isLoading()}/>\n                    );\n                    this.bodyComponent = React.cloneElement(child, child.props, bodyChildren);\n                }\n                return;\n            }\n\n            if (isElementOfType(child, Footer)) {\n                this.footerComponent = child;\n                return;\n            }\n\n            if (isElementOfType(child, Form.Error)) {\n                this.errorComponent = React.cloneElement(child, _.merge(child.props, { error: this.props.form.getError() }));\n            }\n        });\n\n        if (!this.errorComponent) {\n            this.errorComponent = <Form.Error error={this.props.form.getError()}/>;\n        }\n    }\n\n    componentWillMount() {\n        this.parseLayout(this.props.children);\n    }\n\n    componentWillUpdate(nextProps) {\n        this.parseLayout(nextProps.children);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Panel, styles } = this.props;\n        return (\n            <div>\n                {this.headerComponent}\n                <div className={styles.viewContent}>\n                    {this.errorComponent}\n                    <Panel className={styles.panel}>\n                        {this.bodyComponent}\n                        {this.footerComponent}\n                    </Panel>\n                </div>\n            </div>\n        );\n    }\n}\n\nFormView.defaultProps = {\n    formInject: true\n};\n\nexport default createComponent(FormView, { modules: ['Panel', 'Form'], styles });"]}