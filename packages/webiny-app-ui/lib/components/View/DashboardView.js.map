{"version":3,"sources":["../../../src/components/View/DashboardView.jsx"],"names":["DashboardView","props","parseLayout","bind","children","headerLeft","headerCenter","headerRight","bodyComponent","footerComponent","Children","map","child","title","description","subChild","push","length","nextProps","render","call","styles","dashboard","viewHeader","content","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,a;;;AAEF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gJACTA,KADS;;AAGf,cAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAHe;AAIlB;;;;oCAEWC,Q,EAAU;AAAA;;AAClB,iBAAKC,UAAL,GAAkB,IAAlB;AACA,iBAAKC,YAAL,GAAoB,IAApB;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,eAAL,GAAuB,IAAvB;;AAEA,gBAAI,QAAOL,QAAP,uDAAOA,QAAP,OAAoB,QAApB,IAAgCA,aAAa,IAAjD,EAAuD;AACnD,uBAAOA,QAAP;AACH;;AAED,4BAAMM,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA6B,iBAAS;AAClC,oBAAI,gCAAgBQ,KAAhB,mBAAJ,EAAoC;AAChC,2BAAKP,UAAL,GAAkB,sDAAY,OAAOO,MAAMX,KAAN,CAAYY,KAA/B,EAAsC,aAAaD,MAAMX,KAAN,CAAYa,WAA/D,GAAlB;;AAEA,oCAAMJ,QAAN,CAAeC,GAAf,CAAmBC,MAAMX,KAAN,CAAYG,QAA/B,EAAyC,oBAAY;AACjD,4BAAI,gCAAgBW,QAAhB,yBAAJ,EAA6C;AACzC,mCAAKT,YAAL,GAAoB,sDAAkBS,SAASd,KAA3B,CAApB;AACH,yBAFD,MAEO;AACH,mCAAKM,WAAL,CAAiBS,IAAjB,CAAsBD,QAAtB;AACH;AACJ,qBAND;;AAQA;AACH;;AAED,oBAAI,gCAAgBH,KAAhB,iBAAJ,EAAkC;AAC9B,2BAAKJ,aAAL,GAAqBI,MAAMX,KAAN,CAAYG,QAAjC;AACH;AACJ,aAlBD;;AAoBA,gBAAI,KAAKG,WAAL,CAAiBU,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,qBAAKV,WAAL,GAAmB,uDAAa,UAAU,KAAKA,WAA5B,GAAnB;AACH,aAFD,MAEO;AACH,qBAAKA,WAAL,GAAmB,IAAnB;AACH;AACJ;;;6CAEoB;AACjB,iBAAKL,WAAL,CAAiB,KAAKD,KAAL,CAAWG,QAA5B;AACH;;;4CAEmBc,S,EAAW;AAC3B,iBAAKhB,WAAL,CAAiBgB,UAAUd,QAA3B;AACH;;;iCAEQ;AACL,gBAAI,KAAKH,KAAL,CAAWkB,MAAf,EAAuB;AACnB,uBAAO,KAAKlB,KAAL,CAAWkB,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,gBAKGC,MALH,GAKc,KAAKpB,KALnB,CAKGoB,MALH;;;AAOL,mBACI;AAAA;AAAA,kBAAK,WAAWA,OAAOC,SAAvB;AACI;AAAA;AAAA,sBAAK,WAAWD,OAAOE,UAAvB;AACK,yBAAKlB,UADV;AAEK,yBAAKC,YAFV;AAGK,yBAAKC;AAHV,iBADJ;AAOI;AAAA;AAAA,sBAAK,WAAWc,OAAOG,OAAvB;AACK,yBAAKhB;AADV;AAPJ,aADJ;AAaH;;;EA1EuB,gBAAMiB,S;;kBA6EnB,gCAAgBzB,aAAhB,EAA+B,EAAEqB,wBAAF,EAA/B,C","file":"DashboardView.js","sourcesContent":["import React from 'react';\nimport { isElementOfType, createComponent } from 'webiny-app';\nimport Header from './Header';\nimport HeaderLeft from './DashboardComponents/HeaderLeft';\nimport HeaderCenter from './DashboardComponents/HeaderCenter';\nimport HeaderRight from './DashboardComponents/HeaderRight';\nimport Body from './Body';\nimport styles from './styles.css';\n\nclass DashboardView extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.parseLayout = this.parseLayout.bind(this);\n    }\n\n    parseLayout(children) {\n        this.headerLeft = null;\n        this.headerCenter = null;\n        this.headerRight = [];\n        this.bodyComponent = null;\n        this.footerComponent = null;\n\n        if (typeof children !== 'object' || children === null) {\n            return children;\n        }\n\n        React.Children.map(children, child => {\n            if (isElementOfType(child, Header)) {\n                this.headerLeft = <HeaderLeft title={child.props.title} description={child.props.description}/>;\n\n                React.Children.map(child.props.children, subChild => {\n                    if (isElementOfType(subChild, HeaderCenter)) {\n                        this.headerCenter = <HeaderCenter {...subChild.props}/>;\n                    } else {\n                        this.headerRight.push(subChild);\n                    }\n                });\n\n                return;\n            }\n\n            if (isElementOfType(child, Body)) {\n                this.bodyComponent = child.props.children;\n            }\n        });\n\n        if (this.headerRight.length > 0) {\n            this.headerRight = <HeaderRight children={this.headerRight}/>\n        } else {\n            this.headerRight = null;\n        }\n    }\n\n    componentWillMount() {\n        this.parseLayout(this.props.children);\n    }\n\n    componentWillUpdate(nextProps) {\n        this.parseLayout(nextProps.children);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { styles } = this.props;\n\n        return (\n            <div className={styles.dashboard}>\n                <div className={styles.viewHeader}>\n                    {this.headerLeft}\n                    {this.headerCenter}\n                    {this.headerRight}\n                </div>\n\n                <div className={styles.content}>\n                    {this.bodyComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default createComponent(DashboardView, { styles });"]}