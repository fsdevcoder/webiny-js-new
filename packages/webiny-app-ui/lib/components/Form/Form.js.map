{"version":3,"sources":["../../../src/components/Form/Form.js"],"names":["isValidModelType","value","type","test","t","namespace","Form","props","state","model","initialModel","error","loading","submitDisabled","wasSubmitted","isValid","watches","inputs","tabs","growlId","growler","services","get","parsingTabsIndex","mounted","cancelRequest","map","m","bind","defaultModel","setState","loadModel","form","then","mergedModel","customModel","id","request","message","name","callback","Set","add","delete","key","showError","api","showLoading","__removeKeys","patch","defaults","url","cancelToken","__createCancelToken","__processSubmitResponse","res","catch","__catchApiError","createHttpMethod","onInvalid","data","newModel","Object","keys","forEach","component","connectToRouter","router","getParams","response","statusText","code","onFailure","entity","prepareLoadedData","onLoad","getModel","__processWatches","changes","push","event","preventDefault","info","disableSubmit","validate","valid","onSubmit","Promise","resolve","danger","e","finally","enableSubmit","onCancel","goToRoute","allIsValid","chain","cmp","hasValidators","validators","hasValue","isRequired","shouldValidate","validateInput","validationResult","__focusTab","element","registerComponent","console","input","cloneElement","show","isLoading","onClose","getError","newProps","attachToForm","attachValidators","detachFromForm","disabled","inputDisabledByForm","onAfterChange","formatValue","changeCallback","oldValue","inputConfig","cbValue","ls","defaultValue","linkState","create","onChange","newValue","cb","Array","from","w","tab","parsingTabIndex","children","tabsProps","__tabsId","tabsContent","registerComponents","Children","getValidatorsFromProps","messages","parseCustomValidationMessages","validateOnFirstSubmit","length","formData","validationResults","validationMessage","validator","validationError","getValidator","setMessage","getMessage","hideLoading","onSubmitError","tabFocused","getInput","setInvalid","call","CancelToken","cancel","err","isCancel","handleApiError","remove","responseData","onSuccessMessage","success","onSubmitSuccess","inputTabs","__tabs","selectTab","source","collection","excludeKeys","omitFn","metaKey","ctrlKey","indexOf","isDefaultPrevented","target","blur","stopPropagation","submit","__onKeyDown","__renderContent","Component","defaultProps"],"mappings":"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","file":"Form.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport {\n    app,\n    i18n,\n    createComponent,\n    isElementOfType,\n    elementHasFlag,\n    ApiComponent\n} from \"webiny-app\";\nimport validation from \"./validation\";\nimport LinkState from \"./LinkState\";\nimport Error from \"./Error\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nfunction isValidModelType(value) {\n    const type = typeof value;\n    if (type === \"undefined\" || type === \"function\") {\n        return false;\n    }\n\n    return _.isArray(value) || _.isPlainObject(value) || /boolean|number|string/.test(type);\n}\n\nconst t = i18n.namespace(\"Webiny.Ui.Form\");\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            model: {},\n            initialModel: {},\n            error: null,\n            loading: false,\n            submitDisabled: false,\n            wasSubmitted: false\n        };\n\n        this.isValid = null;\n        this.watches = {};\n        this.inputs = {};\n        this.tabs = {};\n        this.growlId = _.uniqueId(\"growl-\");\n        this.growler = app.services.get(\"growler\");\n\n        this.parsingTabsIndex = 0;\n        this.mounted = false;\n        this.cancelRequest = null;\n\n        [\n            \"resetForm\",\n            \"getModel\",\n            \"setModel\",\n            \"loadModel\",\n            \"registerComponents\",\n            \"registerComponent\",\n            \"attachToForm\",\n            \"attachValidators\",\n            \"detachFromForm\",\n            \"validateInput\",\n            \"submit\",\n            \"cancel\",\n            \"validate\",\n            \"onSubmit\",\n            \"onInvalid\",\n            \"isSubmitDisabled\",\n            \"enableSubmit\",\n            \"disableSubmit\",\n            \"handleApiError\",\n            \"__createCancelToken\",\n            \"__catchApiError\",\n            \"__renderContent\",\n            \"__processSubmitResponse\",\n            \"__focusTab\",\n            \"__onKeyDown\"\n        ].map(m => {\n            this[m] = this[m].bind(this);\n        });\n    }\n\n    componentWillMount() {\n        const model = _.merge({}, this.props.defaultModel || {});\n        this.setState({ model, initialModel: model });\n\n        if (this.props.loadModel) {\n            return this.props.loadModel({ form: this }).then(customModel => {\n                const mergedModel = _.merge({}, this.props.defaultModel || {}, customModel);\n                this.setState({\n                    model: mergedModel,\n                    loading: false,\n                    initialModel: _.cloneDeep(mergedModel)\n                });\n            });\n        }\n\n        this.loadModel(this.props.id, this.props.model);\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.request) {\n            this.cancelRequest();\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        if (props.id !== this.props.id || !_.isEqual(props.model, this.props.model)) {\n            this.loadModel(props.id, props.model);\n        }\n    }\n\n    isSubmitDisabled() {\n        return this.state.submitDisabled;\n    }\n\n    enableSubmit() {\n        if (this.mounted) {\n            this.setState({ submitDisabled: false });\n        }\n    }\n\n    disableSubmit(message = \"\") {\n        this.setState({ submitDisabled: message || true });\n    }\n\n    /**\n     * Add a callback that will be triggered each time a given input name value is changed\n     *\n     * @param name\n     * @param callback\n     * @returns {Function}\n     */\n    watch(name, callback) {\n        const watches = this.watches[name] || new Set();\n        watches.add(callback);\n        this.watches[name] = watches;\n        return () => {\n            this.watches[name].delete(callback);\n        };\n    }\n\n    /**\n     * Get mounted input component instance\n     * @param name\n     * @returns {*}\n     */\n    getInput(name) {\n        return _.get(this.inputs, name + \".component\");\n    }\n\n    /**\n     * ERROR METHODS\n     */\n\n    getError(key = null) {\n        if (!key) {\n            return this.state.error;\n        }\n\n        return _.get(this.state.error, key);\n    }\n\n    hasError() {\n        return this.state.error !== null;\n    }\n\n    /**\n     * LOADING METHODS\n     */\n\n    showLoading() {\n        this.setState({ loading: true, error: null, showError: false });\n        return this;\n    }\n\n    hideLoading() {\n        this.setState({ loading: false });\n        return this;\n    }\n\n    isLoading() {\n        return this.state.loading;\n    }\n\n    /**\n     * \"ON\" CALLBACK METHODS\n     */\n    onSubmit(model) {\n        // If API is not defined, then latter processing is not necessary\n        // (in these cases a custom onSubmit callback will usually be defined).\n        if (!this.props.api) {\n            return;\n        }\n\n        this.showLoading();\n        this.__removeKeys(model);\n\n        if (model.id) {\n            return this.props.api\n                .patch(this.props.api.defaults.url + \"/\" + model.id, model, {\n                    cancelToken: this.__createCancelToken()\n                })\n                .then(res => this.__processSubmitResponse(model, res))\n                .catch(this.__catchApiError);\n        }\n\n        return this.props.api[this.props.createHttpMethod](\"/\", model, {\n            cancelToken: this.__createCancelToken()\n        })\n            .then(res => this.__processSubmitResponse(model, res))\n            .catch(this.__catchApiError);\n    }\n\n    onInvalid() {\n        if (typeof this.props.onInvalid === \"function\") {\n            this.props.onInvalid();\n        }\n    }\n\n    /**\n     * MODEL METHODS\n     */\n\n    /**\n     * Get form model\n     * @param key\n     * @returns {*}\n     */\n    getModel(key = null) {\n        const data = _.cloneDeep(this.state.model);\n        if (key) {\n            return _.get(data, key);\n        }\n\n        return data;\n    }\n\n    /**\n     * Get initial form model\n     * @param key\n     * @returns {*}\n     */\n    getInitialModel(key = null) {\n        const data = _.cloneDeep(this.state.initialModel);\n        if (key) {\n            return _.get(data, key);\n        }\n\n        return data;\n    }\n\n    /**\n     * Set form model (merge current model with given model object)\n     * @param model New form model data\n     * @param callback\n     * @returns {Form}\n     */\n    setModel(model, callback = null) {\n        const newModel = _.assign({}, this.state.model, model);\n        this.setState({ model: newModel }, callback);\n\n        return this;\n    }\n\n    /**\n     * Reset initialModel and actual model of the Form and set all form inputs validation state to `null`\n     *\n     * @param model\n     * @returns {Form}\n     */\n    resetForm(model = {}) {\n        this.setState({ model, initialModel: model, wasSubmitted: false }, () => {\n            Object.keys(this.inputs).forEach(name => {\n                this.inputs[name].component.setState({ isValid: null });\n            });\n        });\n        return this;\n    }\n\n    loadModel(id = null, model = null) {\n        if (!id) {\n            if (this.props.connectToRouter) {\n                id = app.router.getParams(\"id\");\n            }\n        }\n\n        if (id) {\n            if (this.request) {\n                return this.request;\n            }\n\n            this.showLoading();\n            this.request = this.props.api\n                .request({\n                    url: this.props.api.defaults.url + \"/\" + id,\n                    cancelToken: this.__createCancelToken()\n                })\n                .then(response => {\n                    this.request = null;\n                    this.cancelRequest = null;\n                    if (response.statusText === \"abort\") {\n                        return;\n                    }\n\n                    if (response.data.code) {\n                        if (this.props.onFailure) {\n                            this.props.onFailure({ response, form: this });\n                        }\n                        return;\n                    }\n\n                    let newModel;\n                    const entity = response.data.data.entity;\n                    if (\n                        _.isFunction(this.props.prepareLoadedData) &&\n                        this.props.prepareLoadedData !== _.noop\n                    ) {\n                        newModel = _.merge(\n                            {},\n                            this.props.defaultModel || {},\n                            this.props.prepareLoadedData({ data: entity })\n                        );\n                    } else {\n                        newModel = _.merge({}, this.props.defaultModel || {}, entity);\n                    }\n\n                    this.setState(\n                        { model: newModel, initialModel: _.cloneDeep(newModel), loading: false },\n                        () => {\n                            // Execute optional `onLoad` callback\n                            if (_.isFunction(this.props.onLoad)) {\n                                this.props.onLoad({ model: this.getModel(), form: this });\n                            }\n                            this.__processWatches();\n                        }\n                    );\n                })\n                .catch(this.__catchApiError);\n            return this.request;\n        }\n\n        if (model) {\n            model = _.merge({}, this.props.defaultModel || {}, model);\n            // Find watches to trigger - this is mostly necessary on static forms\n            const changes = [];\n            _.each(this.watches, (watches, name) => {\n                if (!_.isEqual(_.get(model, name), _.get(this.state.model, name))) {\n                    changes.push(name);\n                }\n            });\n\n            this.setState({ model, initialModel: _.cloneDeep(model) }, () =>\n                this.__processWatches(changes)\n            );\n        }\n    }\n\n    /**\n     * MAIN FORM ACTION METHODS\n     */\n\n    submit({ event } = {}) {\n        // If event is present - prevent default behaviour\n        if (event && event.preventDefault) {\n            event.preventDefault();\n        }\n\n        if (this.state.submitDisabled !== false) {\n            this.growler.info(\n                this.state.submitDisabled,\n                t`Please wait! Your data is being processed...`\n            );\n            return false;\n        }\n\n        this.disableSubmit();\n        this.setState({ wasSubmitted: true });\n\n        return this.validate().then(valid => {\n            if (valid) {\n                const model = this.__removeKeys(this.state.model);\n                // If onSubmit was passed through props, execute it. Otherwise proceed with default behaviour.\n                if (this.props.onSubmit) {\n                    // Make sure whatever is returned from `onSubmit` handler is a Promise and then enable form submit\n                    return Promise.resolve(this.props.onSubmit({ model, form: this }))\n                        .catch(e => {\n                            this.growler.danger(\"\" + e);\n                        })\n                        .finally(() => {\n                            this.enableSubmit();\n                        });\n                }\n                return this.onSubmit(model);\n            }\n            this.enableSubmit();\n            return this.onInvalid();\n        });\n    }\n\n    cancel() {\n        if (_.isString(this.props.onCancel)) {\n            app.router.goToRoute(this.props.onCancel);\n        } else if (_.isFunction(this.props.onCancel)) {\n            this.props.onCancel({ form: this });\n        }\n    }\n\n    validate() {\n        let allIsValid = true;\n\n        const inputs = this.inputs;\n        // Inputs must be validated in a queue because we may have async validators\n        let chain = Promise.resolve(allIsValid).then(valid => valid);\n        Object.keys(inputs).forEach(name => {\n            const cmp = inputs[name].component;\n            const hasValidators = inputs[name] && inputs[name].validators;\n            const hasValue = cmp.props.value;\n            const isRequired = hasValidators && _.has(inputs[name].validators, \"required\");\n\n            const shouldValidate =\n                (!hasValue && isRequired) || (hasValue && cmp.state.isValid !== true);\n\n            if (hasValidators && shouldValidate) {\n                if (cmp.state.isValid === false || cmp.state.isValid === null) {\n                    chain = chain.then(() => {\n                        return this.validateInput(cmp).then(validationResult => {\n                            if (validationResult === false) {\n                                if (allIsValid) {\n                                    // If input is located in a Tabs component, focus the right Tab\n                                    // Do it only for the first failed input!\n                                    this.__focusTab(cmp);\n                                }\n                                allIsValid = false;\n                            }\n                            return allIsValid;\n                        });\n                    });\n                }\n            }\n        });\n\n        return chain;\n    }\n\n    /**\n     * HELPER METHODS FOR REGISTERING INPUTS\n     */\n    bindTo(element) {\n        try {\n            return this.registerComponent(element);\n        } catch (e) {\n            console.error(\"INVALID ELEMENT\", element);\n        }\n    }\n\n    /**\n     * @private\n     * @param input React element\n     * @returns {*}\n     */\n    registerComponent(input) {\n        if (typeof input !== \"object\" || input === null || _.get(input, \"props.formSkip\")) {\n            return input;\n        }\n\n        // Do not descend into nested Form\n        if (isElementOfType(input, Form)) {\n            return input;\n        }\n\n        if (_.get(input, \"props.formInject\")) {\n            input = React.cloneElement(input, { form: this });\n        }\n        if (isElementOfType(input, Loader)) {\n            input = React.cloneElement(input, { show: this.isLoading() });\n        }\n\n        if (isElementOfType(input, Error)) {\n            if (!this.state.showError) {\n                return null;\n            }\n            input = React.cloneElement(input, {\n                onClose: () => this.setState({ showError: false }),\n                error: this.getError()\n            });\n        }\n\n        if (input.props && input.props.name && elementHasFlag(input, \"formComponent\")) {\n            // Build new input props\n            const newProps = {\n                attachToForm: this.attachToForm,\n                attachValidators: this.attachValidators,\n                detachFromForm: this.detachFromForm,\n                validateInput: this.validateInput,\n                form: this,\n                disabled: _.get(input.props, \"disabled\", null)\n            };\n\n            // If Form has a `disabled` prop we must evaluate it to see if form input needs to be disabled\n            if (this.props.disabled) {\n                const inputDisabledByForm = _.isFunction(this.props.disabled)\n                    ? this.props.disabled({ model: this.getModel() })\n                    : this.props.disabled;\n                // Only override the input prop if the entire Form is disabled\n                if (inputDisabledByForm) {\n                    newProps[\"disabled\"] = true;\n                }\n            }\n\n            // Create an onChange callback\n            let onAfterChange = _.get(input.props, \"onChange\");\n            const formatValue = _.get(input.props, \"formatValue\");\n\n            // Input changed callback, triggered on each input change\n            const changeCallback = (value, oldValue) => {\n                const inputConfig = this.inputs[input.props.name];\n                const component = inputConfig && inputConfig.component;\n\n                // Bind onChange callback params (we do it here because later we no longer have access to these values)\n                if (_.isFunction(onAfterChange)) {\n                    onAfterChange = onAfterChange.bind(null, { value, oldValue, component });\n                }\n\n                // Format value\n                if (component && _.isFunction(formatValue)) {\n                    // If component formatValue returns a value we will use that as our new value\n                    const cbValue = formatValue({ value, oldValue, component });\n                    if (isValidModelType(cbValue)) {\n                        value = cbValue;\n                    }\n                }\n\n                return value;\n            };\n\n            // Assign value and onChange props\n            const ls = new LinkState(\n                this,\n                \"model.\" + input.props.name,\n                changeCallback,\n                input.props.defaultValue\n            );\n            const linkState = ls.create();\n\n            _.assign(newProps, {\n                value: linkState.value,\n                onChange: (newValue, cb) => {\n                    // When linkState is done processing the value change...\n                    return linkState.onChange(newValue, cb).then(value => {\n                        // call the Form onChange with updated model\n                        if (_.isFunction(this.props.onChange)) {\n                            this.props.onChange(this.getModel(), this);\n                        }\n\n                        // see if there is a watch registered for changed input\n                        const inputConfig = this.inputs[input.props.name];\n                        const component = inputConfig && inputConfig.component;\n                        const watches = this.watches[input.props.name] || new Set();\n                        _.map(Array.from(watches), w => w(value, component));\n\n                        // Execute onAfterChange\n                        onAfterChange && onAfterChange();\n\n                        return value;\n                    });\n                }\n            });\n\n            if (this.parsingTabsIndex > 0) {\n                newProps[\"__tabs\"] = {\n                    id: \"tabs-\" + this.parsingTabsIndex,\n                    tab: this.parsingTabIndex\n                };\n            }\n\n            return React.cloneElement(input, newProps, input.props && input.props.children);\n        }\n\n        // Track Tabs to be able to focus the relevant tab when validation fails\n\n        if (elementHasFlag(input, \"tabs\")) {\n            this.parsingTabsIndex++;\n            this.parsingTabIndex = -1;\n\n            const tabsProps = _.omit(input.props, [\"key\", \"ref\"]);\n            _.merge(tabsProps, {\n                __tabsId: \"tabs-\" + this.parsingTabsIndex,\n                attachToForm: this.attachToForm,\n                detachFromForm: this.detachFromForm,\n                form: this\n            });\n\n            const tabsContent = React.cloneElement(\n                input,\n                tabsProps,\n                this.registerComponents(input.props && input.props.children)\n            );\n            this.parsingTabsIndex--;\n            return tabsContent;\n        }\n\n        if (elementHasFlag(input, \"tab\") && this.parsingTabsIndex > 0) {\n            this.parsingTabIndex++;\n        }\n\n        return React.cloneElement(\n            input,\n            _.omit(input.props, [\"key\", \"ref\"]),\n            this.registerComponents(input.props && input.props.children)\n        );\n    }\n\n    /**\n     * @private\n     * @param children\n     * @returns {*}\n     */\n    registerComponents(children) {\n        if (typeof children !== \"object\" || children === null) {\n            return children;\n        }\n        return React.Children.map(children, this.registerComponent, this);\n    }\n\n    attachValidators(props) {\n        this.inputs[props.name].validators = validation.getValidatorsFromProps(props);\n        this.inputs[props.name].messages = validation.parseCustomValidationMessages(props.children);\n    }\n\n    attachToForm(component) {\n        // Tabs component is stored separately from inputs\n        if (component.props.__tabsId) {\n            this.tabs[component.props.__tabsId] = component;\n            return;\n        }\n        this.inputs[component.props.name] = { component };\n        this.attachValidators(component.props);\n    }\n\n    detachFromForm(component) {\n        delete this.inputs[component.props.name];\n    }\n\n    validateInput(component) {\n        if (\n            (this.props.validateOnFirstSubmit && !this.state.wasSubmitted) ||\n            !this.inputs[component.props.name]\n        ) {\n            return Promise.resolve(null);\n        }\n        const validators = this.inputs[component.props.name].validators;\n        const hasValidators = _.keys(validators).length;\n        const messages = this.inputs[component.props.name].messages;\n\n        // Validate input\n        const formData = {\n            inputs: this.inputs,\n            model: this.getModel()\n        };\n\n        return Promise.resolve(validation.validate(component.props.value, validators, formData))\n            .then(validationResults => {\n                if (hasValidators) {\n                    const isValid = component.props.value === null ? null : true;\n                    component.setState({ isValid, validationResults });\n                } else {\n                    component.setState({ isValid: null, validationMessage: null });\n                }\n                return validationResults;\n            })\n            .catch(validationError => {\n                // Set custom error message if defined\n                const validator = validationError.getValidator();\n                if (validator in messages) {\n                    validationError.setMessage(messages[validator]);\n                }\n\n                // Set component state to reflect validation error\n                component.setState({\n                    isValid: false,\n                    validationMessage: validationError.getMessage(),\n                    validationResults: false\n                });\n\n                return false;\n            });\n    }\n\n    handleApiError(response) {\n        this.hideLoading();\n        this.enableSubmit();\n        this.setState({ error: response, showError: true }, () => {\n            // error callback\n            this.props.onSubmitError({ response, form: this });\n\n            // Check error data and if validation error - try highlighting invalid fields\n            const data = _.get(response, \"data.data\");\n            if (_.isPlainObject(data)) {\n                let tabFocused = false;\n                _.each(data, (message, name) => {\n                    const input = this.getInput(name);\n                    if (input) {\n                        if (!tabFocused) {\n                            this.__focusTab(input);\n                            tabFocused = true;\n                        }\n                        this.getInput(name).setInvalid(message);\n                    }\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Render Container content\n     * @returns {*}\n     */\n    __renderContent() {\n        const children = this.props.children;\n        if (!_.isFunction(children)) {\n            throw new Error(\"Form must have a function as its only child!\");\n        }\n        return this.registerComponents(\n            children.call(this, { model: _.cloneDeep(this.state.model), form: this })\n        );\n    }\n\n    __createCancelToken() {\n        return new axios.CancelToken(cancel => {\n            this.cancelRequest = cancel;\n        });\n    }\n\n    __catchApiError(err) {\n        if (axios.isCancel(err)) {\n            return;\n        }\n        this.handleApiError(err.response);\n    }\n\n    __processSubmitResponse(model, response) {\n        this.request = null;\n        this.cancelRequest = null;\n        this.enableSubmit();\n        this.growler.remove(this.growlId);\n        this.hideLoading();\n\n        const responseData = response.data.data;\n        const newModel = _.has(responseData, \"entity\") ? responseData.entity : responseData;\n        this.setState({\n            model: newModel,\n            initialModel: _.cloneDeep(newModel),\n            error: null,\n            showError: false\n        });\n        if (_.isFunction(this.props.onSuccessMessage)) {\n            this.growler.success(this.props.onSuccessMessage({ model, response, form: this }));\n        }\n\n        const onSubmitSuccess = this.props.onSubmitSuccess;\n        if (_.isFunction(onSubmitSuccess)) {\n            return onSubmitSuccess({ model, response, form: this });\n        }\n\n        if (_.isString(onSubmitSuccess)) {\n            return app.router.goToRoute(onSubmitSuccess);\n        }\n\n        return response;\n    }\n\n    __focusTab(input) {\n        const inputTabs = input.props.__tabs;\n        if (inputTabs && inputTabs.tab >= 0) {\n            this.tabs[inputTabs.id].selectTab(inputTabs.tab);\n        }\n    }\n\n    __processWatches(changes = null) {\n        const source = changes ? _.pick(this.watches, changes) : this.watches;\n        _.each(source, (watches, name) => {\n            _.map(Array.from(watches), w => w(_.get(this.state.model, name)));\n        });\n    }\n\n    __removeKeys(collection, excludeKeys = [\"$key\", \"$index\"]) {\n        function omitFn(value) {\n            if (value && typeof value === \"object\") {\n                excludeKeys.forEach(key => {\n                    delete value[key];\n                });\n            }\n        }\n\n        return _.cloneDeepWith(collection, omitFn);\n    }\n\n    __onKeyDown(e) {\n        if (\n            (e.metaKey || e.ctrlKey) &&\n            [\"s\", \"Enter\"].indexOf(e.key) > -1 &&\n            !e.isDefaultPrevented()\n        ) {\n            // Need to blur current target in case of input fields to trigger validation\n            e.target.blur();\n            e.preventDefault();\n            e.stopPropagation();\n            this.submit();\n        }\n    }\n\n    render() {\n        return (\n            <webiny-form-container onKeyDown={this.__onKeyDown}>\n                {this.__renderContent()}\n            </webiny-form-container>\n        );\n    }\n}\n\nForm.defaultProps = {\n    disabled: false,\n    defaultModel: {},\n    connectToRouter: false,\n    createHttpMethod: \"post\",\n    validateOnFirstSubmit: false,\n    onSubmit: null,\n    onSubmitSuccess: null,\n    onSubmitError: _.noop,\n    onFailure: _.noop,\n    onLoad: _.noop,\n    prepareLoadedData: null,\n    onSuccessMessage() {\n        return \"Your record was saved successfully!\";\n    }\n};\n\nexport default createComponent([Form, ApiComponent]);\n"]}