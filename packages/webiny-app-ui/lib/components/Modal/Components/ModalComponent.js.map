{"version":3,"sources":["../../../../src/components/Modal/Components/ModalComponent.js"],"names":["mountedDialogs","getShownDialog","id","item","state","isShown","ModalComponent","props","animating","isDialogShown","modalShowDuration","modalHideDuration","backdropShowDuration","backdropHideDuration","clickStartedOnBackdrop","document","querySelector","modalContainerTag","body","appendChild","createElement","modalContainer","map","m","bind","nextProps","nextState","currentDialog","dynamics","container","dialog","find","backdrop","animate","opacity","translateY","type","easeOut","duration","complete","closest","hide","css","services","get","register","name","prevProps","prevState","render","renderDialog","focus","bindHandlers","unbindHandlers","unmountComponentAtNode","onReady","show","push","unregister","splice","namespace","on","e","keyCode","closeOnClick","Promise","resolve","onCancel","then","target","attr","off","setState","onHide","hideResolve","onShow","prevContainer","prevDialog","prevBackdrop","spring","easeIn","onShown","setTimeout","onHidden","Animate","styles","className","modal","wide","fullScreen","content","children","call","display","style","ease","animationFinish","frequency","friction","top","cloneElement","Component","defaultProps","modules"],"mappings":"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","file":"ModalComponent.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport classSet from \"classnames\";\nimport { app, createComponent } from \"webiny-app\";\nimport styles from \"../styles.css\";\n\nconst mountedDialogs = [];\n\nfunction getShownDialog(id = null) {\n    return _.find(mountedDialogs, item => item.state.isShown === true && item.id !== id);\n}\n\nclass ModalComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = _.uniqueId(\"modal-\");\n\n        this.state = {\n            animating: false,\n            isShown: false,\n            isDialogShown: false\n        };\n\n        this.modalShowDuration = 500;\n        this.modalHideDuration = 250;\n        this.backdropShowDuration = 100;\n        this.backdropHideDuration = 200;\n\n        this.clickStartedOnBackdrop = false;\n        if (!document.querySelector(props.modalContainerTag)) {\n            document.body.appendChild(document.createElement(props.modalContainerTag));\n        }\n\n        this.modalContainer = document.querySelector(props.modalContainerTag);\n\n        [\"show\", \"hide\", \"bindHandlers\", \"unbindHandlers\", \"animationFinish\"].map(m => {\n            this[m] = this[m].bind(this);\n        });\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        const currentDialog = getShownDialog();\n        const { dynamics } = this.props;\n\n        // Hide currently visible dialog but do not unmount it\n        if (currentDialog && currentDialog.id !== this.id && nextState.isShown) {\n            const container = $(currentDialog.modalContainer);\n            const dialog = container.find('[data-role=\"dialog\"]');\n            const backdrop = container.find('[data-role=\"backdrop\"]');\n\n            dynamics.animate(\n                dialog[0],\n                {\n                    opacity: 0,\n                    translateY: -100\n                },\n                {\n                    type: dynamics.easeOut,\n                    duration: this.modalHideDuration,\n                    complete: () => {\n                        // Need to hide .modal to let mouse events through\n                        dialog.closest('[data-role=\"modal\"]').hide();\n                        // Remove transform so next time we animate, we start from scratch, with no transformations applied\n                        dialog.css(\"transform\", \"\");\n                    }\n                }\n            );\n\n            dynamics.animate(\n                backdrop[0],\n                {\n                    opacity: 0\n                },\n                {\n                    type: dynamics.easeOut,\n                    duration: this.backdropHideDuration\n                }\n            );\n        }\n    }\n\n    componentWillMount() {\n        app.services.get(\"modal\").register(this.props.name, this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.isShown) {\n            ReactDOM.render(this.renderDialog(), this.modalContainer);\n            $(this.modalContainer)\n                .find('[data-role=\"modal\"]')\n                .focus();\n            this.bindHandlers();\n        } else if (prevState.isShown && !this.state.isShown) {\n            this.unbindHandlers();\n            ReactDOM.unmountComponentAtNode(this.modalContainer);\n        }\n    }\n\n    componentDidMount() {\n        this.props.onReady &&\n            this.props.onReady({\n                show: this.show,\n                hide: this.hide\n            });\n\n        mountedDialogs.push(this);\n    }\n\n    componentWillUnmount() {\n        this.unbindHandlers();\n        app.services.get(\"modal\").unregister(this.props.name);\n        mountedDialogs.splice(_.findIndex(mountedDialogs, { id: this.id }), 1);\n        ReactDOM.unmountComponentAtNode(this.modalContainer);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return !_.isEqual(nextProps, this.props) || !_.isEqual(nextState, this.state);\n    }\n\n    bindHandlers() {\n        this.unbindHandlers();\n        const namespace = \".\" + this.id;\n        $(this.props.modalContainerTag)\n            .on(\"keyup\" + namespace, '[data-role=\"modal\"]', e => {\n                // Listen for ESC button\n                if (e.keyCode === 27 && !this.state.animating && this.props.closeOnClick) {\n                    Promise.resolve(this.props.onCancel()).then(this.hide);\n                }\n            })\n            .on(\"mousedown\" + namespace, '[data-role=\"modal\"]', e => {\n                // Catch backdrop click\n                if ($(e.target).attr(\"data-role\") === \"modal\") {\n                    this.clickStartedOnBackdrop = true;\n                }\n            })\n            .on(\"click\" + namespace, '[data-role=\"modal\"]', () => {\n                if (this.clickStartedOnBackdrop && this.props.closeOnClick) {\n                    Promise.resolve(this.props.onCancel()).then(this.hide);\n                }\n                this.clickStartedOnBackdrop = false;\n            });\n    }\n\n    unbindHandlers() {\n        $(this.props.modalContainerTag).off(\".\" + this.id);\n    }\n\n    hide() {\n        if (!this.state.isDialogShown || this.state.animating) {\n            return Promise.resolve(true);\n        }\n\n        this.setState({ animating: true });\n        return Promise.resolve(this.props.onHide()).then(() => {\n            return new Promise(resolve => {\n                this.hideResolve = resolve;\n                this.setState({\n                    isDialogShown: false\n                });\n            });\n        });\n    }\n\n    show() {\n        // This shows the modal container element in case it was previously hidden by another dialog\n        this.props.onShow();\n\n        if (this.state.isShown) {\n            // Animate previously hidden dialog\n            return new Promise(resolve => {\n                const { dynamics } = this.props;\n                this.setState({ animating: true });\n                const prevContainer = $(this.modalContainer);\n                const prevDialog = prevContainer.find('[data-role=\"dialog\"]');\n                const prevBackdrop = prevContainer.find('[data-role=\"backdrop\"]');\n                prevDialog.closest('[data-role=\"modal\"]').show();\n                dynamics.animate(\n                    prevDialog[0],\n                    {\n                        opacity: 1,\n                        translateY: 50\n                    },\n                    {\n                        type: dynamics.spring,\n                        duration: this.modalShowDuration,\n                        complete: () => {\n                            prevDialog.closest('[data-role=\"modal\"]').focus();\n                            this.setState({ animating: false });\n                            resolve();\n                        }\n                    }\n                );\n\n                dynamics.animate(\n                    prevBackdrop[0],\n                    {\n                        opacity: 0.8\n                    },\n                    {\n                        type: dynamics.easeIn,\n                        duration: this.backdropShowDuration\n                    }\n                );\n            });\n        }\n\n        return new Promise(resolve => {\n            // If showing previously visually hidden modal - resolve promise\n            if (this.state.isShown) {\n                return resolve();\n            }\n\n            this.setState(\n                {\n                    isShown: true\n                },\n                () => {\n                    // Now we are supposed to show dialog with animation\n                    this.setState({ animating: true });\n                    const show = () => {\n                        this.setState(\n                            {\n                                isDialogShown: true\n                            },\n                            () => {\n                                this.props.onShown();\n                                resolve();\n                            }\n                        );\n                    };\n\n                    // If there was a previous dialog (eg: hidden with ClickConfirm), let the animation finish and show new dialog with delay\n                    if (getShownDialog(this.id)) {\n                        setTimeout(show, 250);\n                    } else {\n                        // No previous dialog was opened - we can safely show our new dialog\n                        setTimeout(show);\n                    }\n                }\n            );\n        });\n    }\n\n    animationFinish(isDialogShown) {\n        this.setState({ animating: false });\n        if (!isDialogShown) {\n            this.setState({ isShown: false }, this.props.onHidden);\n            this.hideResolve && this.hideResolve();\n        }\n    }\n\n    renderDialog() {\n        if (!this.state.isShown) {\n            return null;\n        }\n\n        const { Animate, styles } = this.props;\n        const className = classSet(styles.modal, {\n            [styles.wide]: this.props.wide,\n            [styles.fullScreen]: this.props.fullScreen\n        });\n        let content = this.props.children;\n        if (_.isFunction(content)) {\n            content = content.call(this, { dialog: this });\n        }\n\n        return (\n            <div style={_.merge({}, { display: \"block\" }, this.props.style)}>\n                <Animate\n                    trigger={this.state.isDialogShown}\n                    show={{ opacity: 0.8, duration: this.backdropShowDuration, ease: \"easeIn\" }}\n                    hide={{ opacity: 0, duration: this.backdropHideDuration, ease: \"easeOut\" }}\n                >\n                    <div className={styles.backdrop} style={{ opacity: 0 }} data-role=\"backdrop\" />\n                </Animate>\n                <div\n                    className={className}\n                    tabIndex=\"-1\"\n                    style={{ display: \"block\" }}\n                    data-role=\"modal\"\n                >\n                    <Animate\n                        trigger={this.state.isDialogShown}\n                        onFinish={this.animationFinish}\n                        show={{\n                            translateY: 50,\n                            ease: \"spring\",\n                            duration: this.modalShowDuration,\n                            frequency: 50,\n                            friction: 300\n                        }}\n                        hide={{\n                            translateY: -100,\n                            ease: \"easeOut\",\n                            opacity: 0,\n                            duration: this.modalHideDuration\n                        }}\n                    >\n                        <div\n                            className={classSet(styles.dialog, styles.show, this.props.className)}\n                            style={{ top: -50 }}\n                            data-role=\"dialog\"\n                        >\n                            {React.cloneElement(content, {\n                                hide: this.hide,\n                                animating: this.state.animating\n                            })}\n                        </div>\n                    </Animate>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return null;\n    }\n}\n\nModalComponent.defaultProps = {\n    wide: false,\n    fullScreen: false,\n    onHide: _.noop,\n    onHidden: _.noop,\n    onShow: _.noop,\n    onShown: _.noop,\n    onCancel: _.noop, // Called when dialog is closed using ESC or backdrop click\n    onReady: _.noop,\n    closeOnClick: true,\n    modalContainerTag: \"webiny-modal\",\n    style: {}\n};\n\nexport default createComponent(ModalComponent, {\n    styles,\n    modules: [\"Animate\", { dynamics: () => import(\"dynamics.js\") }]\n});\n"]}