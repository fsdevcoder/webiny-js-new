{"version":3,"sources":["../../../../src/components/Modal/Components/Success.js"],"names":["t","namespace","Success","props","Button","closeBtn","onClose","button","hide","then","isValidElement","render","call","content","message","children","Icon","onShown","alertModal","title","renderFooter","Component","defaultProps","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,IAAI,gBAAKC,SAAL,CAAe,yBAAf,CAAV;;IACMC,O;;;;;;;;;;uCACa;AAAA;;AAAA,yBACyB,KAAKC,KAD9B;AAAA,gBACLC,MADK,UACLA,MADK;AAAA,gBACGC,QADH,UACGA,QADH;AAAA,gBACaC,OADb,UACaA,OADb;;AAEX,gBAAIC,SAAS,IAAb;;AAEA,gBAAI,0BAAaF,QAAb,CAAJ,EAA4B;AACxBA,2BAAWA,SAAS,IAAT,CAAX;AACH;;AAED,gBAAI,wBAAWA,QAAX,CAAJ,EAA0B;AACtBE,yBACI,8BAAC,MAAD;AACI,0BAAK,SADT;AAEI,2BAAOF,QAFX;AAGI,6BAAS;AAAA,+BAAM,OAAKF,KAAL,CAAWK,IAAX,GAAkBC,IAAlB,CAAuBH,OAAvB,CAAN;AAAA;AAHb,kBADJ;AAOH;;AAED,gBAAI,gBAAMI,cAAN,CAAqBL,QAArB,CAAJ,EAAoC;AAChCE,yBAASF,QAAT;AACH;;AAED,mBAAO;AAAA;AAAA;AAASE;AAAT,aAAP;AACH;;;iCAEQ;AACL,gBAAI,KAAKJ,KAAL,CAAWQ,MAAf,EAAuB;AACnB,uBAAO,KAAKR,KAAL,CAAWQ,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAED,gBAAIC,UAAU,KAAKV,KAAL,CAAWW,OAAX,IAAsB,KAAKX,KAAL,CAAWY,QAA/C;;AAEA,gBAAI,0BAAaF,OAAb,CAAJ,EAA2B;AACvBA,0BAAUA,QAAQ,IAAR,CAAV;AACH;;AATI,0BAWqB,KAAKV,KAX1B;AAAA,gBAWGa,IAXH,WAWGA,IAXH;AAAA,gBAWSC,OAXT,WAWSA,OAXT;;AAYL,mBACI;AAAA;AAAA;AACI,uCAAkB,eADtB;AAEI,+BAAW,iBAAOC,UAFtB;AAGI,6BAASD;AAHb;AAKI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA,8BAAK,WAAU,aAAf;AACI,0DAAC,IAAD,IAAM,MAAK,SAAX,EAAqB,MAAK,IAA1B,EAA+B,MAAK,mBAApC,EAAwD,SAAQ,KAAhE,GADJ;AAEI;AAAA;AAAA;AAAK,qCAAKd,KAAL,CAAWgB;AAAhB,6BAFJ;AAII;AAAA;AAAA;AAAMN;AAAN;AAJJ;AADJ,qBADJ;AASK,yBAAKO,YAAL;AATL;AALJ,aADJ;AAmBH;;;EAzDiB,gBAAMC,S;;AA4D5BnB,QAAQoB,YAAR,GAAuB;AACnBH,WAAOnB,CAAP,iBADmB;AAEnBK,cAAUL,CAAV,kBAFmB;AAGnBM,2BAHmB;AAInBW;AAJmB,CAAvB;;kBAOe,gCAAgB,CAACf,OAAD,8BAAhB,EAA2C,EAAEqB,SAAS,CAAC,QAAD,EAAW,MAAX,CAAX,EAA3C,C","file":"Success.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent, i18n } from \"webiny-app\";\nimport { ModalComponent } from \"webiny-app-ui\";\nimport Dialog from \"./Dialog\";\nimport Content from \"./Content\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport styles from \"../styles.css\";\n\nconst t = i18n.namespace(\"Webiny.Ui.Modal.Success\");\nclass Success extends React.Component {\n    renderFooter() {\n        let { Button, closeBtn, onClose } = this.props;\n        let button = null;\n\n        if (_.isFunction(closeBtn)) {\n            closeBtn = closeBtn(this);\n        }\n\n        if (_.isString(closeBtn)) {\n            button = (\n                <Button\n                    type=\"primary\"\n                    label={closeBtn}\n                    onClick={() => this.props.hide().then(onClose)}\n                />\n            );\n        }\n\n        if (React.isValidElement(closeBtn)) {\n            button = closeBtn;\n        }\n\n        return <Footer>{button}</Footer>;\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        let content = this.props.message || this.props.children;\n\n        if (_.isFunction(content)) {\n            content = content(this);\n        }\n\n        const { Icon, onShown } = this.props;\n        return (\n            <Dialog\n                modalContainerTag=\"success-modal\"\n                className={styles.alertModal}\n                onShown={onShown}\n            >\n                <Content>\n                    <Body>\n                        <div className=\"text-center\">\n                            <Icon type=\"success\" size=\"4x\" icon=\"icon-check-circle\" element=\"div\" />\n                            <h4>{this.props.title}</h4>\n\n                            <div>{content}</div>\n                        </div>\n                    </Body>\n                    {this.renderFooter()}\n                </Content>\n            </Dialog>\n        );\n    }\n}\n\nSuccess.defaultProps = {\n    title: t`Awesome!`,\n    closeBtn: t`Close`,\n    onClose: _.noop,\n    onShown: _.noop\n};\n\nexport default createComponent([Success, ModalComponent], { modules: [\"Button\", \"Icon\"] });\n"]}