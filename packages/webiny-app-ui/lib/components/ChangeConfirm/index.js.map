{"version":3,"sources":["../../../src/components/ChangeConfirm/index.js"],"names":["t","namespace","ChangeConfirm","props","input","getInput","state","value","dialogId","message","onChange","bind","onConfirm","onCancel","setState","nextProps","component","form","name","msg","realOnChange","services","get","show","Children","toArray","children","cancelValue","hide","render","call","dialogProps","onComplete","Modal","dialog","renderDialog","cloneElement","Component","defaultProps","modules"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { app, createComponent, i18n } from \"webiny-app\";\n\nconst t = i18n.namespace(\"Webiny.Ui.ChangeConfirm\");\nclass ChangeConfirm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const input = this.getInput(props);\n        this.state = {\n            value: input.props.value\n        };\n\n        this.dialogId = _.uniqueId(\"change-confirm-\");\n        this.message = null;\n\n        this.onChange = this.onChange.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n        const input = this.getInput(props);\n        this.setState({ value: input.props.value });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !_.isEqual(nextProps, this.props);\n    }\n\n    onChange(value) {\n        const input = this.getInput(this.props);\n        let component = null;\n        if (input.props.form) {\n            component = input.props.form.getInput(input.props.name);\n        }\n\n        let msg = this.props.message;\n        if (_.isFunction(msg)) {\n            msg = msg({ value, component });\n        }\n\n        if (!msg) {\n            this.realOnChange(value);\n            return;\n        }\n\n        this.message = msg;\n        this.value = value;\n        app.services.get(\"modal\").show(this.dialogId);\n    }\n\n    getInput(props) {\n        return React.Children.toArray(props.children)[0];\n    }\n\n    onCancel() {\n        const cancelValue = this.props.onCancel(this.getInput(this.props).props.form);\n        if (!_.isUndefined(cancelValue)) {\n            this.realOnChange(cancelValue);\n        }\n        app.services.get(\"modal\").hide(this.dialogId);\n    }\n\n    onConfirm() {\n        return this.realOnChange(this.value);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        // Input\n        const input = this.getInput(this.props);\n        this.realOnChange = input.props.onChange;\n        const props = _.omit(input.props, [\"onChange\"]);\n        props.onChange = this.onChange;\n\n        const dialogProps = {\n            name: this.dialogId,\n            message: () => this.message,\n            onConfirm: this.onConfirm,\n            onCancel: this.onCancel,\n            onComplete: this.props.onComplete\n        };\n\n        const { Modal } = this.props;\n        const dialog = _.isFunction(this.props.renderDialog) ? (\n            this.props.renderDialog()\n        ) : (\n            <Modal.Confirmation />\n        );\n\n        return (\n            <webiny-change-confirm>\n                {React.cloneElement(input, props)}\n                {React.cloneElement(dialog, dialogProps)}\n            </webiny-change-confirm>\n        );\n    }\n}\n\nChangeConfirm.defaultProps = {\n    message: t`Confirm value change?`,\n    onComplete: _.noop,\n    onCancel: _.noop,\n    renderDialog: null\n};\n\nexport default createComponent(ChangeConfirm, { modules: [\"Modal\"] });\n"]}