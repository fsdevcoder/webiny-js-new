{"version":3,"sources":["../../../../src/components/List/Components/BaseContainer.jsx"],"names":["BaseContainer","props","state","loading","list","meta","initialSorters","getInitialSorters","sorters","filters","page","perPage","searchQuery","searchOperator","searchFields","replace","selectedRows","filtersElement","loaderElement","tableElement","paginationElement","multiActionsElement","map","m","bind","prepare","sortValues","query","join","split","sorter","startsWith","setState","connectToRouter","prepareUsingRouter","prepareNotUsingRouter","params","router","getQuery","urlSort","_sort","parseInt","_page","_perPage","_searchQuery","value","name","goToRoute","loadData","routeParams","id","attributes","Error","autoRefresh","data","tableProps","onSort","setSorters","showEmpty","isLoading","paginationProps","onPageChange","setPage","onPerPageChange","setPerPage","currentPage","count","totalCount","totalPages","multiActionsProps","children","listProps","Children","child","cloneElement","onFilter","setFilters","show","onSelect","table","pagination","multiActions","loader","createElement","$this","content","call","layout","type","toArray","prepareList","getContent","getListElements","showLoading","Component","defaultProps","trackLastUsedParameters"],"mappings":"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","file":"BaseContainer.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport invariant from \"invariant\";\nimport { app, isElementOfType, createComponent } from 'webiny-app';\nimport Filters from './Filters';\nimport FormFilters from './FormFilters';\nimport Table from './Table/Table';\nimport MultiActions from './MultiActions';\nimport Pagination from './Pagination';\nimport sortersToString from \"./sortersToString\";\nimport Loader from './../Components/ListContainerLoader';\n\nclass BaseContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            list: [],\n            meta: {},\n            initialSorters: this.getInitialSorters(props),\n            sorters: {},\n            filters: {},\n            page: props.page,\n            perPage: props.perPage,\n            searchQuery: null,\n            searchOperator: props.searchOperator || 'or',\n            searchFields: props.searchFields ? props.searchFields.replace(/\\s/g, '') : null,\n            selectedRows: []\n        };\n\n        this.filtersElement = null;\n        this.loaderElement = null;\n        this.tableElement = null;\n        this.paginationElement = null;\n        this.multiActionsElement = null;\n\n        [\n            'prepareList',\n            'tableProps',\n            'paginationProps',\n            'setSorters',\n            'setFilters',\n            'setPage',\n            'setPerPage',\n            'setSearchQuery',\n            'getSearchQuery',\n            'prepare',\n            'recordUpdate',\n            'recordDelete',\n            'onSelect',\n            'getContent'\n        ].map(m => {\n            invariant(this[m], `Method ${m} does not exist!`);\n            this[m] = this[m].bind(this);\n        });\n    }\n\n    componentWillMount() {\n        this.prepare(this.props);\n    }\n\n    componentWillReceiveProps(props) {\n        this.prepare(props);\n    }\n\n    getInitialSorters(props) {\n        const sorters = {};\n        const sortValues = [\n            _.get(props, 'sort', ''),\n            _.get(props.query, '_sort', '')\n        ];\n\n        sortValues.join(',').split(',').map(sorter => {\n            if (sorter === '') {\n                return;\n            }\n            if (sorter.startsWith('-')) {\n                sorters[_.trimStart(sorter, '-')] = -1;\n            } else {\n                sorters[sorter] = 1;\n            }\n        });\n\n        return sortersToString(sorters);\n    }\n\n    /**\n     * LOADING METHODS\n     */\n    showLoading() {\n        this.setState({ loading: true });\n    }\n\n    hideLoading() {\n        this.setState({ loading: false });\n    }\n\n    isLoading() {\n        return this.state.loading;\n    }\n\n    prepare(props) {\n        const state = props.connectToRouter ? this.prepareUsingRouter(props) : this.prepareNotUsingRouter();\n\n        this.setState(state);\n    }\n\n    prepareUsingRouter(props) {\n        const state = {\n            sorters: {},\n            filters: {}\n        };\n        const params = app.router.getQuery();\n        const urlSort = params._sort || '';\n        urlSort.split(',').map(sorter => {\n            if (sorter === '') {\n                return;\n            }\n            if (sorter.startsWith('-')) {\n                state.sorters[_.trimStart(sorter, '-')] = -1;\n            } else {\n                state.sorters[sorter] = 1;\n            }\n        });\n\n        // Get limit and page\n        state.page = parseInt(params._page || props.page || 1);\n        state.perPage = params._perPage || props.perPage || 10;\n        state.searchQuery = params._searchQuery || null;\n\n        // Get filters\n        _.each(params, (value, name) => {\n            if (!name.startsWith('_')) {\n                state.filters[name] = value;\n            }\n        });\n\n        // Add _searchQuery to filters even though it starts with '_' - it's a special system parameter and is in fact a filter\n        state.filters._searchQuery = state.searchQuery;\n\n        return state;\n    }\n\n    prepareNotUsingRouter() {\n        return {\n            sorters: {},\n            filters: {},\n        };\n    }\n\n    setSorters(sorters) {\n        if (this.props.connectToRouter) {\n            this.goToRoute({ _sort: sortersToString(sorters), _page: 1 });\n        } else {\n            this.setState({ page: 1, sorters }, this.loadData);\n        }\n\n        return this;\n    }\n\n    setFilters(filters) {\n        if (this.props.connectToRouter) {\n            // Need to build a new object with null values to unset filters from URL\n            if (_.isEmpty(filters) && _.keys(this.state.filters)) {\n                filters = _.mapValues(this.state.filters, () => null);\n            }\n\n            filters._page = 1;\n            this.goToRoute(filters);\n        } else {\n            this.setState({ page: 1, filters }, this.loadData);\n        }\n\n        return this;\n    }\n\n    setPage(page) {\n        if (this.props.connectToRouter) {\n            this.goToRoute({ _page: page });\n        } else {\n            this.setState({ page }, this.loadData);\n        }\n\n        return this;\n    }\n\n    setPerPage(perPage) {\n        if (this.props.connectToRouter) {\n            this.goToRoute({ _perPage: perPage, _page: 1 });\n        } else {\n            this.setState({ page: 1, perPage }, this.loadData);\n        }\n\n        return this;\n    }\n\n    setSearchQuery(query) {\n        if (this.props.connectToRouter) {\n            this.goToRoute({ _searchQuery: query, _page: 1 });\n        } else {\n            this.setState({ page: 1, searchQuery: query }, this.loadData);\n        }\n\n        return this;\n    }\n\n    goToRoute(params) {\n        const routeParams = _.merge({}, app.router.getQuery(), params);\n        app.router.goToRoute('current', routeParams);\n    }\n\n    getSearchQuery() {\n        return this.state.searchQuery;\n    }\n\n    getFilters() {\n        return this.state.filters;\n    }\n\n    /* eslint-disable */\n    recordUpdate(id, attributes) {\n        throw new Error('Implement recordUpdate method in your list container class!');\n    }\n\n    recordDelete(id, autoRefresh = true) {\n        throw new Error('Implement recordDelete method in your list container class!');\n    }\n\n    /* eslint-enable */\n\n    onSelect(data) {\n        this.setState({ selectedRows: data });\n    }\n\n    tableProps(tableProps) {\n        // Pass relevant props from BaseContainer to Table\n        _.each(this.props, (value, name) => {\n            if (name.startsWith('field') && name !== 'fields' || name.startsWith('action')) {\n                tableProps[name] = value;\n            }\n        });\n\n        _.assign(tableProps, {\n            data: _.clone(this.state.list),\n            sorters: this.state.sorters,\n            onSort: this.setSorters,\n            selectedRows: this.state.selectedRows,\n            showEmpty: !this.isLoading()\n        });\n\n        return tableProps;\n    }\n\n    paginationProps(paginationProps) {\n        _.assign(paginationProps, {\n            onPageChange: this.setPage,\n            onPerPageChange: this.setPerPage,\n            currentPage: this.state.page,\n            perPage: this.state.perPage,\n            count: _.get(this.state.list, 'length', 0),\n            totalCount: _.get(this.state.meta, 'totalCount', 0),\n            totalPages: _.get(this.state.meta, 'totalPages', 0)\n        });\n\n        return paginationProps;\n    }\n\n    multiActionsProps(multiActionsProps) {\n        _.assign(multiActionsProps, {\n            data: this.state.selectedRows\n        });\n\n        return multiActionsProps;\n    }\n\n    /**\n     * @private\n     * @param children\n     * @param props\n     */\n    prepareList(children, listProps) {\n        if (typeof children !== 'object' || children === null) {\n            return;\n        }\n\n        React.Children.map(children, child => {\n            if (isElementOfType(child, Filters) || isElementOfType(child, FormFilters)) {\n                // Need to omit fields that are not actual filters\n                this.filtersElement = React.cloneElement(child, {\n                    filters: this.state.filters,\n                    onFilter: this.setFilters\n                });\n            }\n\n            const props = _.omit(child.props, ['children', 'key', 'ref']);\n            if (isElementOfType(child, Table)) {\n                this.tableElement = React.cloneElement(child, { ...this.tableProps(props), ...listProps }, child.props.children);\n            }\n\n            if (isElementOfType(child, Pagination)) {\n                this.paginationElement = React.cloneElement(child, { ...this.paginationProps(props), ...listProps }, child.props.children);\n            }\n\n            if (isElementOfType(child, Loader)) {\n                this.loaderElement = React.cloneElement(child, { show: this.isLoading() }, child.props.children);\n            }\n\n            if (isElementOfType(child, MultiActions)) {\n                this.multiActionsElement = React.cloneElement(child, { ...this.multiActionsProps(props), ...listProps }, child.props.children);\n            }\n        }, this);\n\n        // If MultiActions are present, pass an onSelect callback to Table which will tell Table to allow selection\n        // and execute onSelect callback when selection is changed\n        if (this.multiActionsElement) {\n            this.tableElement = React.cloneElement(this.tableElement, { onSelect: this.onSelect });\n        }\n\n        return {\n            filters: this.filtersElement,\n            table: this.tableElement,\n            pagination: this.paginationElement,\n            multiActions: this.multiActionsElement,\n            loader: this.loaderElement ? this.loaderElement : React.createElement(Loader, { show: this.isLoading() })\n        };\n    }\n\n\n    /**\n     * Get ApiContainer content\n     * @returns {*}\n     */\n    getContent(children) {\n        if (_.isFunction(children)) {\n            const params = {\n                list: this.state.list,\n                meta: this.state.meta,\n                $this: this\n            };\n\n            const content = children.call(this, params);\n\n            // NOTE: The following hacky \"if\" is needed because React does not yet support returning of multiple elements.\n            // And since BaseContainer only parses first level of children, if you return some kind of a wrapper while using a layout\n            // we need to get the list elements from the wrapper element (its children).\n            // NOTE: When layout is not defined (or set to null/false) - this will not be executed!\n            // TODO: add support for returning a Table (currently not working without a wrapper)\n            if (this.props.layout && React.Children.count(content) === 1 && _.isString(content.type)) {\n                return content.props.children;\n            }\n\n            return content;\n        }\n\n        return React.Children.toArray(children);\n    }\n\n    render() {\n        const { children, ...props } = this.props;\n        return React.cloneElement(children, {\n            ...props,\n            ...this.state,\n            setState: (...args) => this.setState(...args),\n            prepare: props => this.prepare(props),\n            prepareList: this.prepareList.bind(this),\n            getContent: children => this.getContent(children),\n            getListElements: content => this.prepareList(content),\n            showLoading: this.showLoading.bind(this)\n        });\n    }\n}\n\nBaseContainer.defaultProps = {\n    connectToRouter: false,\n    trackLastUsedParameters: true,\n    page: 1,\n    perPage: 10\n};\n\nexport default BaseContainer;"]}