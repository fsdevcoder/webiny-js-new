{"version":3,"sources":["../../../../src/components/List/Components/FormFilters.jsx"],"names":["FormFilters","props","map","m","bind","nextProps","filters","onFilter","model","form","onSubmit","apply","applyFilters","render","call","Form","defaultModel","submit","children","reset","Component","defaultProps","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEMA,W;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACTA,KADS;;AAGf,SAAC,QAAD,EAAW,cAAX,EAA2BC,GAA3B,CAA+B;AAAA,mBAAK,MAAKC,CAAL,IAAU,MAAKA,CAAL,EAAQC,IAAR,OAAf;AAAA,SAA/B;AAHe;AAIlB;;;;8CAEqBC,S,EAAW;AAC7B,mBAAO,CAAC,uBAAUA,SAAV,EAAqB,KAAKJ,KAA1B,CAAR;AACH;;;qCAEYK,O,EAAS;AAClB,iBAAKL,KAAL,CAAWM,QAAX,CAAoBD,OAApB;AACH;;;qCAEuB;AAAA,gBAAfE,KAAe,QAAfA,KAAe;AAAA,gBAARC,IAAQ,QAARA,IAAQ;;AACpB,gBAAI,OAAO,KAAKR,KAAL,CAAWS,QAAlB,KAA+B,UAAnC,EAA+C;AAC3C,qBAAKT,KAAL,CAAWS,QAAX,CAAoB,EAAEF,YAAF,EAASC,UAAT,EAAeE,OAAO,KAAKC,YAA3B,EAApB;AACH,aAFD,MAEO;AACH,qBAAKA,YAAL,CAAkBJ,KAAlB;AACH;AACJ;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKP,KAAL,CAAWY,MAAf,EAAuB;AACnB,uBAAO,KAAKZ,KAAL,CAAWY,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,gBAKGC,IALH,GAKY,KAAKd,KALjB,CAKGc,IALH;;;AAOL,mBACI;AAAC,oBAAD;AAAA;AACI,kCAAc,KAAKd,KAAL,CAAWe,YAD7B;AAEI,2BAAO,KAAKf,KAAL,CAAWK,OAFtB;AAGI,8BAAU,KAAKW;AAHnB;AAKK;AAAA,wBAAGR,IAAH,SAAGA,IAAH;AAAA,2BAAc,OAAKR,KAAL,CAAWiB,QAAX,CAAoB;AAC/BP,+BAAO;AAAA,mCAAM;AAAA,uCAAMF,KAAKQ,MAAL,EAAN;AAAA,6BAAN;AAAA,yBADwB;AAE/BE,+BAAO;AAAA,mCAAM;AAAA,uCAAM,OAAKP,YAAL,CAAkB,EAAlB,CAAN;AAAA,6BAAN;AAAA;AAFwB,qBAApB,CAAd;AAAA;AALL,aADJ;AAYH;;;EA3CqB,gBAAMQ,S;;AA8ChCpB,YAAYqB,YAAZ,GAA2B;AACvBL,kBAAc,IADS;AAEvBN,YAFuB,2BAEU;AAAA,YAAtBF,KAAsB,SAAtBA,KAAsB;AAAA,YAAfC,IAAe,SAAfA,IAAe;AAAA,YAATE,KAAS,SAATA,KAAS;;AAC7BA,cAAMH,KAAN;AACH;AAJsB,CAA3B;;kBAOe,gCAAgBR,WAAhB,EAA6B,EAAEsB,SAAS,CAAC,MAAD,CAAX,EAA7B,C","file":"FormFilters.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent } from 'webiny-app';\n\nclass FormFilters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        ['submit', 'applyFilters'].map(m => this[m] = this[m].bind(this));\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !_.isEqual(nextProps, this.props);\n    }\n\n    applyFilters(filters) {\n        this.props.onFilter(filters);\n    }\n\n    submit({ model, form }) {\n        if (typeof this.props.onSubmit === \"function\") {\n            this.props.onSubmit({ model, form, apply: this.applyFilters });\n        } else {\n            this.applyFilters(model);\n        }\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Form } = this.props;\n\n        return (\n            <Form\n                defaultModel={this.props.defaultModel}\n                model={this.props.filters}\n                onSubmit={this.submit}\n            >\n                {({ form }) => this.props.children({\n                    apply: () => () => form.submit(),\n                    reset: () => () => this.applyFilters({})\n                })}\n            </Form>\n        );\n    }\n}\n\nFormFilters.defaultProps = {\n    defaultModel: null,\n    onSubmit({ model, form, apply }) {\n        apply(model);\n    }\n};\n\nexport default createComponent(FormFilters, { modules: ['Form'] });"]}