{"version":3,"sources":["../../../../../src/components/List/Components/Table/Table.jsx"],"names":["Table","props","rowElement","selectAllRowsElement","rowDetailsElement","footerElement","emptyElement","headers","rows","state","selectAll","selectedRows","expandedRows","map","m","bind","tempProps","prepareChildren","children","setState","row","index","selected","data","Object","values","isDisabled","push","onSelect","splice","name","sort","sorters","onSort","child","Children","rowChild","hide","headerProps","sortable","sorted","ch","render","renderHeader","defaultProps","rowIndex","indexOf","hideRowDetails","showRowDetails","prepareChild","element","key","table","attachToTable","fieldsCount","length","expanded","id","actions","toggleRowDetails","onSelectAll","cloneElement","header","i","allRowsSelected","call","typeClasses","simple","className","type","showEmpty","renderRow","showHeader","Component","formSkip","styles"],"mappings":"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","file":"Table.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport classSet from \"classnames\";\nimport { createComponent, isElementOfType, elementHasFlag } from 'webiny-app';\nimport Row from './Row';\nimport FieldInfo from './FieldInfo';\nimport Actions from './Actions';\nimport Footer from './Footer';\nimport RowDetails from './RowDetails';\nimport Header from './Header';\nimport Empty from './Empty';\nimport SelectRowField from './Fields/SelectRowField';\nimport styles from '../../styles.css';\n\n\nclass Table extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.rowElement = null;\n        this.selectAllRowsElement = null;\n        this.rowDetailsElement = null;\n        this.footerElement = null;\n        this.emptyElement = null;\n        this.headers = [];\n        this.rows = {};\n\n        this.state = {\n            selectAll: false,\n            selectedRows: props.selectedRows,\n            expandedRows: []\n        };\n\n        [\n            'attachToTable',\n            'prepareChildren',\n            'prepareChild',\n            'renderRow',\n            'renderHeader',\n            'onSort',\n            'onSelect',\n            'selectAll',\n            'showRowDetails',\n            'hideRowDetails',\n            'toggleRowDetails'\n        ].map(m => this[m] = this[m].bind(this));\n    }\n\n    componentWillMount() {\n        this.tempProps = this.props; // assign props to tempProps to be accessible without passing through method args\n        this.prepareChildren(this.props.children);\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({ selectedRows: props.selectedRows });\n        this.tempProps = props; // assign props to tempProps to be accessible without passing through method args\n        this.prepareChildren(props.children);\n    }\n\n    attachToTable(row, index) {\n        this.rows[index] = row;\n    }\n\n    selectAll(selected) {\n        let data = [];\n        if (selected) {\n            Object.values(this.rows).map(row => {\n                if (!row.isDisabled()) {\n                    data.push(row.props.data);\n                }\n            });\n        }\n\n        this.setState({\n            selectAll: selected,\n            selectedRows: data\n        }, () => {\n            if (this.props.onSelect) {\n                this.props.onSelect(this.state.selectedRows);\n            }\n        });\n    }\n\n    onSelect(data, selected) {\n        const selectedRows = this.state.selectedRows;\n        if (selected) {\n            selectedRows.push(data);\n        } else {\n            selectedRows.splice(_.findIndex(selectedRows, data), 1);\n        }\n        this.setState({ selectedRows });\n        this.props.onSelect(selectedRows);\n    }\n\n    onSort(name, sort) {\n        this.selectAll(false);\n        this.setState({ expandedRows: [] });\n        const sorters = _.clone(this.props.sorters);\n        if (sort !== 0) {\n            sorters[name] = sort;\n        } else {\n            delete sorters[name];\n        }\n\n        this.props.onSort(sorters);\n    }\n\n    prepareChild(child) {\n        if (typeof child !== 'object' || child === null) {\n            return child;\n        }\n\n        // Table handles Row and Footer\n        if (isElementOfType(child, Row)) {\n            this.rowElement = child;\n            // Parse Row fields to extract headers\n            this.headers = [];\n            React.Children.map(child.props.children, rowChild => {\n                if (elementHasFlag(rowChild, 'tableField')) {\n                    if (isElementOfType(rowChild, SelectRowField)) {\n                        this.selectAllRowsElement = true;\n                    }\n\n                    // Only evaluate `hide` condition if it is a plain value (not a function)\n                    if (!_.isFunction(rowChild.props.hide) && rowChild.props.hide) {\n                        return;\n                    }\n\n                    const headerProps = _.omit(rowChild.props, ['render', 'renderHeader']);\n                    headerProps.sortable = headerProps.sort || false;\n                    headerProps.sorted = this.tempProps.sorters[headerProps.sort] || 0;\n                    headerProps.children = React.Children.map(rowChild.props.children, ch => {\n                        if (isElementOfType(ch, FieldInfo)) {\n                            return ch;\n                        }\n                    });\n\n                    if (_.has(rowChild.props, 'renderHeader')) {\n                        headerProps.render = rowChild.props.renderHeader;\n                    }\n                    this.headers.push(headerProps);\n                }\n\n                if (isElementOfType(rowChild, Actions) && !rowChild.props.hide) {\n                    this.headers.push({});\n                }\n            });\n\n            if (this.props.onSelect && !this.selectAllRowsElement) {\n                this.headers.splice(0, 0, { render: SelectRowField.defaultProps.renderHeader });\n            }\n        } else if (isElementOfType(child, Footer)) {\n            this.footerElement = child;\n        } else if (isElementOfType(child, Empty)) {\n            this.emptyElement = child;\n        } else if (isElementOfType(child, RowDetails)) {\n            this.rowDetailsElement = child;\n        }\n    }\n\n    showRowDetails(rowIndex) {\n        return () => {\n            this.state.expandedRows.push(rowIndex);\n            this.setState({ expandedRows: this.state.expandedRows });\n        };\n    }\n\n    hideRowDetails(rowIndex) {\n        return () => {\n            this.state.expandedRows.splice(this.state.expandedRows.indexOf(rowIndex), 1);\n            this.setState({ expandedRows: this.state.expandedRows });\n        };\n    }\n\n    toggleRowDetails(rowIndex) {\n        return () => {\n            if (this.state.expandedRows.indexOf(rowIndex) > -1) {\n                this.hideRowDetails(rowIndex)();\n            } else {\n                this.showRowDetails(rowIndex)();\n            }\n        };\n    }\n\n    prepareChildren(children) {\n        if (typeof children !== 'object' || children === null) {\n            return children;\n        }\n        return React.Children.map(children, this.prepareChild);\n    }\n\n    renderRow(data, index, element, key) {\n        const props = _.omit(element.props, ['children']);\n        _.assign(props, {\n            table: this,\n            attachToTable: this.attachToTable,\n            index,\n            key,\n            data,\n            fieldsCount: this.headers.length + (this.props.onSelect ? 1 : 0),\n            expanded: this.state.expandedRows.indexOf(index) > -1,\n            selected: !!_.find(this.state.selectedRows, { id: data.id }),\n            sorters: _.clone(this.props.sorters),\n            actions: _.assign({}, this.props.actions, {\n                showRowDetails: this.showRowDetails,\n                hideRowDetails: this.hideRowDetails,\n                toggleRowDetails: this.toggleRowDetails\n            }),\n            onSelect: this.props.onSelect ? this.onSelect : null,\n            onSelectAll: this.selectAll\n        });\n\n        if (this.props.onSelect) {\n            props.onSelect = this.onSelect;\n        }\n\n        return React.cloneElement(element, props, element.props.children);\n    }\n\n    renderHeader(header, i) {\n        header.key = i;\n        header.onSort = this.onSort;\n        header.allRowsSelected = this.state.selectAll;\n        header.onSelectAll = this.selectAll;\n        return (\n            <Header {...header}/>\n        );\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const typeClasses = {\n            simple: styles.simple\n        };\n\n        const className = classSet([\n            styles.table,\n            typeClasses[this.props.type],\n            this.props.className\n        ]);\n\n        if (!this.props.data || !this.props.data.length && this.props.showEmpty) {\n            return this.emptyElement || <Empty/>;\n        }\n\n        const rows = [];\n        this.props.data.map((data, index) => {\n            rows.push(this.renderRow(data, data.id || index, this.rowElement, data.id || index));\n            if (this.rowDetailsElement) {\n                rows.push(this.renderRow(data, data.id || index, this.rowDetailsElement, 'details-' + (data.id || index)));\n            }\n        });\n\n        let header = null;\n        if (this.props.showHeader) {\n            header = (\n                <thead>\n                <tr>\n                    {this.headers.map(this.renderHeader)}\n                </tr>\n                </thead>\n            );\n        }\n\n        return (\n            <table className={className}>\n                {header}\n                <tbody>{rows}</tbody>\n            </table>\n        );\n    }\n}\n\nTable.defaultProps = {\n    formSkip: true, // tells Form to stop descending into this element's children when looking for form components\n    data: [],\n    type: 'simple',\n    onSelect: null,\n    selectedRows: [],\n    sorters: {},\n    showHeader: true,\n    className: null\n};\n\nexport default createComponent(Table, { styles });"]}