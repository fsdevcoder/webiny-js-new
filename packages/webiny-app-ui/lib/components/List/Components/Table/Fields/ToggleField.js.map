{"version":3,"sources":["../../../../../../src/components/List/Components/Table/Fields/ToggleField.jsx"],"names":["ToggleField","props","ChangeConfirm","Switch","List","render","tdProps","call","onChange","attributes","name","newValue","actions","update","data","id","value","disabled","message","Component","defaultProps","modules","tableField"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEMA,W;;;;;;;;;;iCACO;AAAA;;AAAA,yBACuD,KAAKC,KAD5D;AAAA,gBACGC,aADH,UACGA,aADH;AAAA,gBACkBC,MADlB,UACkBA,MADlB;AAAA,gBAC0BC,IAD1B,UAC0BA,IAD1B;AAAA,gBACgCC,MADhC,UACgCA,MADhC;AAAA,gBAC2CC,OAD3C;;;AAGL,gBAAID,MAAJ,EAAY;AACR,uBAAOA,OAAOE,IAAP,CAAY,IAAZ,CAAP;AACH;;AAED,gBAAMN,QAAQ;AACVO,0BAAU,4BAAY;AAClB,wBAAI,sBAAS,OAAKP,KAAL,CAAWO,QAApB,CAAJ,EAAmC;AAC/B,4BAAMC,aAAa,EAAnB;AACA,2CAAMA,UAAN,EAAkB,OAAKR,KAAL,CAAWS,IAA7B,EAAmCC,QAAnC;AACA,+BAAKV,KAAL,CAAWW,OAAX,CAAmBC,MAAnB,CAA0B,OAAKZ,KAAL,CAAWa,IAAX,CAAgBC,EAA1C,EAA8CN,UAA9C;AACH,qBAJD,MAIO;AACH,+BAAKR,KAAL,CAAWO,QAAX,CAAoBG,QAApB;AACH;AACJ,iBATS;AAUVK,uBAAO,mBAAM,KAAKf,KAAL,CAAWa,IAAjB,EAAuB,KAAKb,KAAL,CAAWS,IAAlC,CAVG;AAWVO,0BAAU,0BAAa,KAAKhB,KAAL,CAAWgB,QAAxB,IAAoC,KAAKhB,KAAL,CAAWgB,QAAX,CAAoB,KAAKhB,KAAL,CAAWa,IAA/B,CAApC,GAA2E,KAAKb,KAAL,CAAWgB;AAXtF,aAAd;;AAcA,mBACI;AAAC,oBAAD,CAAM,KAAN,CAAY,KAAZ;AAAsBX,uBAAtB;AACK;AAAA,2BACG;AAAC,qCAAD;AAAA,0BAAe,SAAS,OAAKL,KAAL,CAAWiB,OAAnC;AACI,sDAAC,MAAD,EAAYjB,KAAZ;AADJ,qBADH;AAAA;AADL,aADJ;AASH;;;EA/BqB,gBAAMkB,S;;AAkChCnB,YAAYoB,YAAZ,GAA2B;AACvBF,aAAS,IADc;AAEvBV,cAAU,IAFa;AAGvBS,cAAU;AAHa,CAA3B;;kBAMe,gCAAgBjB,WAAhB,EAA6B,EAAEqB,SAAS,CAAC,MAAD,EAAS,eAAT,EAA0B,QAA1B,CAAX,EAAgDC,YAAY,IAA5D,EAA7B,C","file":"ToggleField.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent } from 'webiny-app';\n\nclass ToggleField extends React.Component {\n    render() {\n        const { ChangeConfirm, Switch, List, render, ...tdProps } = this.props;\n\n        if (render) {\n            return render.call(this);\n        }\n\n        const props = {\n            onChange: newValue => {\n                if (_.isNull(this.props.onChange)) {\n                    const attributes = {};\n                    _.set(attributes, this.props.name, newValue);\n                    this.props.actions.update(this.props.data.id, attributes);\n                } else {\n                    this.props.onChange(newValue);\n                }\n            },\n            value: _.get(this.props.data, this.props.name),\n            disabled: _.isFunction(this.props.disabled) ? this.props.disabled(this.props.data) : this.props.disabled\n        };\n\n        return (\n            <List.Table.Field {...tdProps}>\n                {() => (\n                    <ChangeConfirm message={this.props.message}>\n                        <Switch {...props}/>\n                    </ChangeConfirm>\n                )}\n            </List.Table.Field>\n        );\n    }\n}\n\nToggleField.defaultProps = {\n    message: null,\n    onChange: null,\n    disabled: false\n};\n\nexport default createComponent(ToggleField, { modules: ['List', 'ChangeConfirm', 'Switch'], tableField: true });"]}