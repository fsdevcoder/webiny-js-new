{"version":3,"sources":["../../../../../../src/components/List/Components/Table/Fields/CaseField.jsx"],"names":["CaseField","props","render","call","content","defaultContent","Children","toArray","children","child","type","value","data","name","List","Component","modules","tableField"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEMA,S;;;;;;;;;;iCACO;AAAA;;AACL,gBAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,uBAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAED,gBAAIC,UAAU,IAAd;AACA,gBAAIC,iBAAiB,IAArB;AACA,gCAAO,gBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKN,KAAL,CAAWO,QAAlC,CAAP,EAAoD,iBAAS;AACzD,oBAAIC,MAAMC,IAAN,KAAe,SAAnB,EAA8B;AAC1BL,qCAAiBI,MAAMR,KAAN,CAAYO,QAA7B;AACA;AACH;AACD,oBAAMG,QAAQF,MAAMR,KAAN,CAAYU,KAA1B;AACA,oBAAI,0BAAaA,KAAb,KAAuBA,MAAM,OAAKV,KAAL,CAAWW,IAAjB,MAA2B,IAAlD,IAA0DD,UAAU,mBAAM,OAAKV,KAAL,CAAWW,IAAjB,EAAuB,OAAKX,KAAL,CAAWY,IAAlC,CAAxE,EAAiH;AAC7GT,8BAAUK,MAAMR,KAAN,CAAYO,QAAtB;AACH;AACJ,aATD;;AAWA,gBAAI,CAACJ,OAAL,EAAc;AACVA,0BAAUC,cAAV;AACH;;AAED,gBAAI,0BAAaD,OAAb,CAAJ,EAA2B;AACvBA,0BAAUA,QAAQD,IAAR,CAAa,IAAb,EAAmB,EAACS,MAAM,KAAKX,KAAL,CAAWW,IAAlB,EAAnB,CAAV;AACH;;AAxBI,yBA0BoB,KAAKX,KA1BzB;AAAA,gBA0BEa,IA1BF,UA0BEA,IA1BF;AAAA,gBA0BWb,KA1BX;;;AA4BL,mBACI;AAAC,oBAAD,CAAM,KAAN,CAAY,KAAZ;AAAsB,oCAAOA,KAAP,EAAc,CAAC,QAAD,CAAd,CAAtB;AACKG;AADL,aADJ;AAKH;;;EAlCmB,gBAAMW,S;;kBAqCf,gCAAgBf,SAAhB,EAA2B,EAACgB,SAAS,CAAC,MAAD,CAAV,EAAoBC,YAAY,IAAhC,EAA3B,C","file":"CaseField.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent } from 'webiny-app';\n\nclass CaseField extends React.Component {\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        let content = null;\n        let defaultContent = null;\n        _.each(React.Children.toArray(this.props.children), child => {\n            if (child.type === 'default') {\n                defaultContent = child.props.children;\n                return;\n            }\n            const value = child.props.value;\n            if (_.isFunction(value) && value(this.props.data) === true || value === _.get(this.props.data, this.props.name)) {\n                content = child.props.children;\n            }\n        });\n\n        if (!content) {\n            content = defaultContent;\n        }\n\n        if (_.isFunction(content)) {\n            content = content.call(this, {data: this.props.data});\n        }\n\n        const {List, ...props} = this.props;\n\n        return (\n            <List.Table.Field {..._.omit(props, ['render'])}>\n                {content}\n            </List.Table.Field>\n        );\n    }\n}\n\nexport default createComponent(CaseField, {modules: ['List'], tableField: true});"]}