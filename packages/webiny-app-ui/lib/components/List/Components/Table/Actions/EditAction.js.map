{"version":3,"sources":["../../../../../../src/components/List/Components/Table/Actions/EditAction.jsx"],"names":["EditAction","props","render","call","Link","Icon","onClick","icon","data","label","route","Component","defaultProps","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;;;IAEMA,U;;;;;;;;;;iCACO;AAAA;;AACL,gBAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,uBAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAED,gBAAMF,QAAQ,oBAAO,KAAKA,KAAZ,EAAmB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAnB,CAAd;AALK,yBAMkB,KAAKA,KANvB;AAAA,gBAMGG,IANH,UAMGA,IANH;AAAA,gBAMSC,IANT,UAMSA,IANT;;;AAQL,gBAAI,KAAKJ,KAAL,CAAWK,OAAf,EAAwB;AACpB,oBAAMC,OAAON,MAAMM,IAAN,GAAa,8BAAC,IAAD,IAAM,MAAMN,MAAMM,IAAlB,GAAb,GAAyC,IAAtD;AACAN,sBAAMK,OAAN,GAAgB;AAAA,2BAAM,OAAKL,KAAL,CAAWK,OAAX,CAAmB,EAAEE,MAAM,OAAKP,KAAL,CAAWO,IAAnB,EAAnB,CAAN;AAAA,iBAAhB;AACA,uBACI;AAAC,wBAAD;AAAUP,yBAAV;AACKM,wBADL;AAEKN,0BAAMQ;AAFX,iBADJ;AAMH;;AAED,gBAAI,KAAKR,KAAL,CAAWS,KAAf,EAAsB;AAClB,oBAAIA,QAAQ,KAAKT,KAAL,CAAWS,KAAvB;AACA,oBAAI,0BAAaA,KAAb,CAAJ,EAAyB;AACrBA,4BAAQA,MAAM,KAAKT,KAAL,CAAWO,IAAjB,CAAR;AACH;AACDP,sBAAMS,KAAN,GAAcA,KAAd;AACH;;AAED,mBACI,qDAAiBT,KAAjB,CADJ;AAGH;;;EA/BoB,gBAAMU,S;;AAkC/BX,WAAWY,YAAX,GAA0B;AACtBH,WAAO,MADe;AAEtBF,UAAM;AAFgB,CAA1B;;kBAKe,gCAAgBP,UAAhB,EAA4B,EAAEa,SAAS,CAAC,MAAD,EAAS,MAAT,CAAX,EAA5B,C","file":"EditAction.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent } from 'webiny-app';\nimport RouteAction from './RouteAction';\n\nclass EditAction extends React.Component {\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const props = _.pick(this.props, ['data', 'label', 'icon']);\n        const { Link, Icon } = this.props;\n\n        if (this.props.onClick) {\n            const icon = props.icon ? <Icon icon={props.icon}/> : null;\n            props.onClick = () => this.props.onClick({ data: this.props.data });\n            return (\n                <Link {...props}>\n                    {icon}\n                    {props.label}\n                </Link>\n            );\n        }\n\n        if (this.props.route) {\n            let route = this.props.route;\n            if (_.isFunction(route)) {\n                route = route(this.props.data);\n            }\n            props.route = route;\n        }\n\n        return (\n            <RouteAction {...props}/>\n        );\n    }\n}\n\nEditAction.defaultProps = {\n    label: 'Edit',\n    icon: 'icon-pencil'\n};\n\nexport default createComponent(EditAction, { modules: ['Link', 'Icon'] });"]}