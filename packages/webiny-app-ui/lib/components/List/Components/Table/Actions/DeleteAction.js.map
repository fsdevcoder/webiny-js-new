{"version":3,"sources":["../../../../../../src/components/List/Components/Table/Actions/DeleteAction.jsx"],"names":["t","namespace","DeleteAction","dialogId","props","render","call","message","Modal","$this","data","actions","dialog","name","title","confirm","confirmButtonLabel","cancel","cancelButtonLabel","onComplete","reload","onConfirm","Component","defaultProps","label","icon","hide","afterDelete","delete","id","then","Promise","resolve","res","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;;;AAEA,IAAMA,IAAI,gBAAKC,SAAL,CAAe,8BAAf,CAAV;;IACMC,Y;;;AACF,4BAAc;AAAA;;AAAA;;AAEV,cAAKC,QAAL,GAAgB,wBAAW,sBAAX,CAAhB;AAFU;AAGb;;;;iCAEQ;AACL,gBAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,uBAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,yBAKoB,KAAKF,KALzB;AAAA,gBAKEG,OALF,UAKEA,OALF;AAAA,gBAKWC,KALX,UAKWA,KALX;;AAML,gBAAMC,QAAQ,IAAd;;AAEA,mBACI;AAAA;AAAiB,oCAAO,KAAKL,KAAZ,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC,OAAtC,EAA+C,MAA/C,EAAuD,aAAvD,EAAsE,MAAtE,CAAjB;AACK,yBAASC,MAAT,OAAyC;AAAA,wBAAxBK,IAAwB,QAAxBA,IAAwB;AAAA,wBAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,wBAATC,MAAS,QAATA,MAAS;;AACtC,wBAAMR,QAAQ;AACVS,8BAAMJ,MAAMN,QADF;AAEVW,+BAAOL,MAAML,KAAN,CAAYU,KAFT;AAGVC,iCAASN,MAAML,KAAN,CAAYY,kBAHX;AAIVC,gCAAQR,MAAML,KAAN,CAAYc,iBAJV;AAKVX,wCALU;AAMVY,oCAAY,sBAAM;AACdR,oCAAQS,MAAR;AACH,yBARS;AASVC,mCAAW,qBAAM;AACbZ,kCAAML,KAAN,CAAYiB,SAAZ,CAAsBf,IAAtB,CAA2BG,KAA3B,EAAkC,EAACC,UAAD,EAAOC,gBAAP,EAAgBC,cAAhB,EAAlC;AACH;AAXS,qBAAd;AAaA,2BACI,8BAAC,KAAD,CAAO,YAAP,EAAwBR,KAAxB,CADJ;AAGH;AAlBL,aADJ;AAsBH;;;EApCsB,gBAAMkB,S;;AAuCjCpB,aAAaqB,YAAb,GAA4B;AACxBC,WAAOxB,CAAP,iBADwB;AAExBc,WAAOd,CAAP,kBAFwB;AAGxByB,UAAM,aAHkB;AAIxBlB,aAASP,CAAT,kBAJwB;AAKxBgB,wBAAoBhB,CAApB,kBALwB;AAMxBkB,uBAAmBlB,CAAnB,kBANwB;AAOxB0B,wBAPwB;AAQxBC,+BARwB;AASxBN,aATwB,4BASW;AAAA;;AAAA,YAAxBX,IAAwB,SAAxBA,IAAwB;AAAA,YAAlBC,OAAkB,SAAlBA,OAAkB;AAAA,YAATC,MAAS,SAATA,MAAS;;AAC/B,eAAOD,QAAQiB,MAAR,CAAelB,KAAKmB,EAApB,EAAwB,KAAxB,EAA+BC,IAA/B,CAAoC,eAAO;AAC9C,mBAAOC,QAAQC,OAAR,CAAgB,OAAK5B,KAAL,CAAWuB,WAAX,CAAuBM,GAAvB,CAAhB,EAA6CH,IAA7C,CAAkD;AAAA,uBAAMG,GAAN;AAAA,aAAlD,CAAP;AACH,SAFM,CAAP;AAGH;AAbuB,CAA5B;;kBAgBe,gCAAgB/B,YAAhB,EAA8B,EAACgC,SAAS,CAAC,OAAD,CAAV,EAA9B,C","file":"DeleteAction.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent, i18n } from 'webiny-app';\nimport ModalAction from './ModalAction';\n\nconst t = i18n.namespace(\"Webiny.Ui.List.Table.Actions\");\nclass DeleteAction extends React.Component {\n    constructor() {\n        super();\n        this.dialogId = _.uniqueId('delete-action-modal-');\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const {message, Modal} = this.props;\n        const $this = this;\n\n        return (\n            <ModalAction {..._.pick(this.props, 'data', 'actions', 'label', 'hide', 'afterDelete', 'icon')}>\n                {function render({data, actions, dialog}) {\n                    const props = {\n                        name: $this.dialogId,\n                        title: $this.props.title,\n                        confirm: $this.props.confirmButtonLabel,\n                        cancel: $this.props.cancelButtonLabel,\n                        message,\n                        onComplete: () => {\n                            actions.reload();\n                        },\n                        onConfirm: () => {\n                            $this.props.onConfirm.call($this, {data, actions, dialog});\n                        }\n                    };\n                    return (\n                        <Modal.Confirmation {...props}/>\n                    );\n                }}\n            </ModalAction>\n        );\n    }\n}\n\nDeleteAction.defaultProps = {\n    label: t`Delete`,\n    title: t`Delete confirmation`,\n    icon: 'icon-cancel',\n    message: t`Are you sure you want to delete this record?`,\n    confirmButtonLabel: t`Yes, delete!`,\n    cancelButtonLabel: t`No`,\n    hide: _.noop,\n    afterDelete: _.noop,\n    onConfirm({data, actions, dialog}) {\n        return actions.delete(data.id, false).then(res => {\n            return Promise.resolve(this.props.afterDelete(res)).then(() => res);\n        });\n    }\n};\n\nexport default createComponent(DeleteAction, {modules: ['Modal']});"]}