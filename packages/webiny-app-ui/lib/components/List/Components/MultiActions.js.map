{"version":3,"sources":["../../../../src/components/List/Components/MultiActions.jsx"],"names":["t","namespace","MultiActions","props","render","call","Dropdown","label","Children","map","children","child","Divider","Header","cloneElement","data","actions","Component","defaultProps","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,IAAI,gBAAKC,SAAL,CAAe,mCAAf,CAAV;;IACMC,Y;;;;;;;;;;iCACO;AAAA;;AACL,gBAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,uBAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,gBAKGC,QALH,GAKgB,KAAKH,KALrB,CAKGG,QALH;;AAML,mBACI;AAAC,wBAAD;AAAA,kBAAU,OAAO,KAAKH,KAAL,CAAWI,KAA5B;AACI,8CAAC,QAAD,CAAU,MAAV,IAAiB,OAAOP,CAAP,iBAAjB,GADJ;AAEK,gCAAMQ,QAAN,CAAeC,GAAf,CAAmB,KAAKN,KAAL,CAAWO,QAA9B,EAAwC,iBAAS;AAC9C,wBAAI,gCAAgBC,KAAhB,EAAuBL,SAASM,OAAhC,KAA4C,gCAAgBD,KAAhB,EAAuBL,SAASO,MAAhC,CAAhD,EAAyF;AACrF,+BAAOF,KAAP;AACH;;AAED,2BACI;AAAA;AAAA,0BAAI,MAAK,cAAT;AACK,wCAAMG,YAAN,CAAmBH,KAAnB,EAA0B;AACvBI,kCAAM,OAAKZ,KAAL,CAAWY,IADM;AAEvBC,qCAAS,OAAKb,KAAL,CAAWa;AAFG,yBAA1B;AADL,qBADJ;AAQH,iBAbA;AAFL,aADJ;AAmBH;;;EA1BsB,gBAAMC,S;;AA6BjCf,aAAagB,YAAb,GAA4B;AACxBX,WAAOP,CAAP;AADwB,CAA5B;;kBAIe,gCAAgBE,YAAhB,EAA8B,EAAEiB,SAAS,CAAC,UAAD,CAAX,EAA9B,C","file":"MultiActions.js","sourcesContent":["import React from 'react';\nimport { createComponent, i18n, isElementOfType } from 'webiny-app';\n\nconst t = i18n.namespace(\"Webiny.Ui.List.Table.MultiActions\");\nclass MultiActions extends React.Component {\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Dropdown } = this.props;\n        return (\n            <Dropdown title={this.props.label}>\n                <Dropdown.Header title={t`Actions`}/>\n                {React.Children.map(this.props.children, child => {\n                    if (isElementOfType(child, Dropdown.Divider) || isElementOfType(child, Dropdown.Header)) {\n                        return child;\n                    }\n\n                    return (\n                        <li role=\"presentation\">\n                            {React.cloneElement(child, {\n                                data: this.props.data,\n                                actions: this.props.actions\n                            })}\n                        </li>\n                    );\n                })}\n            </Dropdown>\n        );\n    }\n}\n\nMultiActions.defaultProps = {\n    label: t`With selected...`\n};\n\nexport default createComponent(MultiActions, { modules: ['Dropdown'] });"]}