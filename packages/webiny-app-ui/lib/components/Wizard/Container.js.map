{"version":3,"sources":["../../../src/components/Wizard/Container.js"],"names":["Container","props","state","steps","current","initialStep","loading","form","map","m","bind","onStart","getCallbackParams","next","getCurrentStep","onEnter","previous","count","components","children","Children","forEach","component","parseSteps","getCurrentStepIndex","lastIndex","countSteps","index","output","push","parseStep","step","defaultProps","completed","actions","content","Content","Actions","action","actionIndex","isValidElement","cloneElement","key","wizard","merge","model","getModel","setState","params","onLeave","onTransition","isLastStep","setStep","isFirstStep","onFinish","render","call","list","styles","renderLayout","navigation","renderNavigation","renderContent","renderActions","loader","renderLoader","Component","Icon","title","Loader","container"],"mappings":"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","file":"Container.js","sourcesContent":["import React from 'react';\nimport classSet from \"classnames\";\nimport { createComponent, isElementOfType, LazyLoad } from 'webiny-app';\nimport _ from 'lodash';\nimport Step from './Step';\nimport styles from './styles.scss';\n\n/**\n * Wizard component, makes it easier to create wizards, without worrying about common features like steps, navigation, content etc.\n */\nclass Container extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            steps: { current: props.initialStep },\n            loading: false\n        };\n\n        this.form = props.form;\n\n        ['setStep', 'nextStep', 'previousStep'].map(m => this[m] = this[m].bind(this));\n    }\n\n    /**\n     * Let's just call onStart callback.\n     */\n    componentDidMount() {\n        this.props.onStart(this.getCallbackParams());\n\n        const next = this.getCurrentStep();\n        next.onEnter(this.getCallbackParams({ previous: null, next }));\n    }\n\n    /**\n     * Returns total count of all valid steps.\n     * @returns {number}\n     */\n    countSteps() {\n        let count = 0;\n        const components = this.props.children(this.getCallbackParams());\n        React.Children.forEach(components.props.children, component => isElementOfType(component, Step) && count++);\n\n        return count;\n    }\n\n    /**\n     * Returns index of current step\n     * @returns {number}\n     */\n    getCurrentStepIndex() {\n        return this.state.steps.current;\n    }\n\n    getCurrentStep() {\n        return this.parseSteps(this.getCurrentStepIndex());\n    }\n\n    /**\n     * Tells us whether current step is the first one or not.\n     * @returns {boolean}\n     */\n    isFirstStep() {\n        return this.getCurrentStepIndex() === 0;\n    }\n\n    /**\n     * Tells us whether current step is the last one or not.\n     * @returns {boolean}\n     */\n    isLastStep() {\n        const lastIndex = this.countSteps() - 1;\n        return this.getCurrentStepIndex() === lastIndex;\n    }\n\n    /**\n     * Parses all steps passed as immediate children to the Wizard component.\n     * If index is passed, only that parsed step will be returned.\n     * @returns {Object}\n     */\n    parseSteps(index = null) {\n        const output = [];\n        const components = this.props.children(this.getCallbackParams());\n\n        if (index === null) {\n            React.Children.forEach(components.props.children, (component, index) => {\n                if (isElementOfType(component, Step)) {\n                    output.push(this.parseStep(component, index));\n                }\n            });\n            return output;\n        }\n\n        const component = components.props.children[index];\n        if (isElementOfType(component, Step)) {\n            return this.parseStep(component, index);\n        }\n\n        return null;\n    }\n\n    /**\n     * Parses given step, a React component, into a JSON object.\n     * @param step\n     * @param index\n     */\n    parseStep(step, index) {\n        const output = _.assign(\n            _.pick(step.props, _.keys(Step.defaultProps)),\n            {\n                index,\n                current: index === this.getCurrentStepIndex(),\n                completed: index < this.getCurrentStepIndex(),\n                actions: [],\n                content: null\n            });\n\n        React.Children.forEach(step.props.children, component => {\n            if (isElementOfType(component, Step.Content)) {\n                output.content = component.props.children;\n                return;\n            }\n\n            if (isElementOfType(component, Step.Actions)) {\n                React.Children.forEach(component.props.children, (action, actionIndex) => {\n                    if (React.isValidElement(action)) {\n                        output.actions.push(React.cloneElement(action, _.assign({}, action.props, {\n                            key: actionIndex,\n                            wizard: this\n                        })));\n                    }\n                });\n            }\n        });\n\n        return output;\n    }\n\n    /**\n     * For easier passing of callback params.\n     * @param merge\n     * @returns {{wizard: Container, form: *, model: *}}\n     */\n    getCallbackParams(merge) {\n        const output = { wizard: this, form: this.form, model: this.form.getModel() };\n        return merge ? _.assign(output, merge) : output;\n    }\n\n    /**\n     * Sets current step.\n     * @param index\n     * @returns {Promise.<void>}\n     */\n    async setStep(index) {\n        const steps = this.parseSteps();\n\n        const previous = steps[this.getCurrentStepIndex()];\n        const next = steps[index];\n\n        this.setState({ loading: true });\n\n        const params = this.getCallbackParams({ previous, next });\n        previous && await previous.onLeave(params);\n\n        await this.props.onTransition(params);\n\n        this.setState(state => {\n            state.loading = false;\n            state.steps.current = index;\n            return state;\n        }, () => next.onEnter(params));\n    }\n\n    /**\n     * Switches to next step.\n     */\n    nextStep() {\n        if (this.isLastStep()) {\n            return;\n        }\n        this.setStep(this.getCurrentStepIndex() + 1);\n    }\n\n    /**\n     * Switches to previous step.\n     */\n    previousStep() {\n        if (this.isFirstStep()) {\n            return;\n        }\n        this.setStep(this.getCurrentStepIndex() - 1);\n    }\n\n    /**\n     * Called when wizard is finished so additional actions can be made if needed.\n     * @returns {Promise.<void>}\n     */\n    async finish() {\n        this.setState({ loading: true });\n        await this.props.onFinish(this.getCallbackParams());\n        this.setState({ loading: false });\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const params = this.getCallbackParams({ steps: { list: [], current: null } });\n        const { styles } = this.props;\n\n        params.steps.list = this.parseSteps();\n        params.steps.current = params.steps.list[this.getCurrentStepIndex()];\n        params.styles = styles;\n\n\n        return this.props.renderLayout(_.assign(params, {\n            navigation: this.props.renderNavigation(params),\n            content: this.props.renderContent(params),\n            actions: this.props.renderActions(params),\n            loader: this.props.renderLoader(params)\n        }));\n    }\n}\n\nContainer.defaultProps = {\n    form: null,\n    initialStep: 0,\n    onTransition: _.noop,\n    onFinish: _.noop,\n    onStart: _.noop,\n    renderNavigation(params) {\n        return (\n            <LazyLoad modules={['Icon']}>\n                {({ Icon }) => (\n                    <ul className={params.styles.navigation}>\n                        {params.steps.list.map((step, index) => (\n                            <li key={index}\n                                className={classSet((step.completed ? params.styles.completed : null), (step.current ? params.styles.current : null))}>\n                                <div>\n                                    {step.completed ? (\n                                        <Icon type=\"success\" icon=\"icon-check\" className=\"animated rotateIn\"/>\n                                    ) : (\n                                        <span>{step.index + 1}</span>\n                                    )}\n                                </div>\n                                <label>{step.title}</label>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </LazyLoad>\n        );\n    },\n    renderContent(params) {\n        return (\n            <div className={params.styles.content}>\n                {params.steps.current.content}\n            </div>\n        );\n    },\n    renderActions(params) {\n        return (\n            <div className={params.styles.actions}>\n                {params.steps.current.actions}\n            </div>\n        );\n    },\n    renderLoader({ wizard }) {\n        const { Loader } = wizard.props;\n        return wizard.state.loading && <Loader/>;\n    },\n    renderLayout({ loader, navigation, content, actions, styles }) {\n        return (\n            <webiny-wizard className={styles.container}>\n                {loader}\n                {navigation}\n                {content}\n                {actions}\n            </webiny-wizard>\n        );\n    }\n};\n\nexport default createComponent(Container, { styles });"]}