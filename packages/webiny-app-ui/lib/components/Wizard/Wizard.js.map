{"version":3,"sources":["../../../src/components/Wizard/Wizard.js"],"names":["Wizard","container","props","render","call","Form","form","params","onSubmit","component","isLastStep","finish","nextStep","children","Ui","Component","defaultProps","contentRenderer","undefined","actionsRenderer","loaderRenderer","layoutRenderer","initialStep","onTransition","onFinish","onStart","createComponent","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;;;IAEMA,M;;;AACF,sBAAc;AAAA;;AAAA;;AAEV,cAAKC,SAAL,GAAiB,IAAjB;AAFU;AAGb;;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,uBAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAHI,gBAKGC,IALH,GAKY,KAAKH,KALjB,CAKGG,IALH;;;AAOL,mBACI;AAAC,oBAAD;AAAA,2CACQ,KAAKH,KAAL,CAAWI,IADnB;AAEI;AAAA,4GAAU,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACN;AACMC,oDAFA,GAEW,mBAAM,OAAKN,KAAL,CAAWI,IAAjB,EAAuB,UAAvB,CAFX;;AAAA,iDAGF,0BAAaE,QAAb,CAHE;AAAA;AAAA;AAAA;;AAAA;AAAA,mDAII,OAAKN,KAAL,CAAWI,IAAX,CAAgBE,QAAhB,CAAyBD,MAAzB,CAJJ;;AAAA;;AAON;AACMN,qDARA,GAQY,OAAKA,SAAL,CAAeQ,SAR3B;;AAAA,iDASFR,UAAUS,UAAV,EATE;AAAA;AAAA;AAAA;;AAAA,6EAUKT,UAAUU,MAAV,EAVL;;AAAA;AAAA,6EAaCV,UAAUW,QAAV,EAbD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAV;;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAiBK;AAAA,wBAAGN,IAAH,SAAGA,IAAH;AAAA,2BACG;AAAA;AAAA;AACI,iCAAK;AAAA,uCAAa,OAAKL,SAAL,GAAiBA,SAA9B;AAAA,6BADT;AAEI,kCAAMK,IAFV,IAEoB,oBAAO,OAAKJ,KAAZ,EAAmB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,UAA3B,CAAnB,CAFpB;AAGK,+BAAKA,KAAL,CAAWW;AAHhB,qBADH;AAAA;AAjBL,aADJ;AA2BH;;;EAxCgB,kBAAOC,EAAP,CAAUC,S;;AA2C/Bf,OAAOgB,YAAP,GAAsB;AAClBC,qBAAiBC,SADC;AAElBC,qBAAiBD,SAFC;AAGlBE,oBAAgBF,SAHE;AAIlBG,oBAAgBH,SAJE;AAKlBI,iBAAa,CALK;AAMlBC,gCANkB;AAOlBC,4BAPkB;AAQlBC,2BARkB;AASlBnB,UAAM;AATY,CAAtB;;kBAYeoB,gBAAgB1B,MAAhB,EAAwB;AACnC2B,aAAS,CAAC,MAAD,EAAS,QAAT;AAD0B,CAAxB,C","file":"Wizard.js","sourcesContent":["import React from 'react';\nimport { Webiny } from 'webiny-app';\nimport _ from 'lodash';\nimport Container from './Container';\n\nclass Wizard extends Webiny.Ui.Component {\n    constructor() {\n        super();\n        this.container = null;\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Form } = this.props;\n\n        return (\n            <Form\n                {...this.props.form}\n                onSubmit={async params => {\n                    // This callback won't be implemented by developers probably, because there are other valid Wizard callbacks.\n                    const onSubmit = _.get(this.props.form, 'onSubmit');\n                    if (_.isFunction(onSubmit)) {\n                        await this.props.form.onSubmit(params);\n                    }\n\n                    // We want to handle cases where user submits the form with keyboard, onSubmit gets triggered here.\n                    const container = this.container.component;\n                    if (container.isLastStep()) {\n                        return container.finish();\n                    }\n\n                    return container.nextStep();\n                }}>\n                {({ form }) => (\n                    <Container\n                        ref={container => this.container = container}\n                        form={form} {..._.omit(this.props, ['Form', 'form', 'render', 'children'])}>\n                        {this.props.children}\n                    </Container>\n                )}\n            </Form>\n        );\n    }\n}\n\nWizard.defaultProps = {\n    contentRenderer: undefined,\n    actionsRenderer: undefined,\n    loaderRenderer: undefined,\n    layoutRenderer: undefined,\n    initialStep: 0,\n    onTransition: _.noop,\n    onFinish: _.noop,\n    onStart: _.noop,\n    form: {}\n};\n\nexport default createComponent(Wizard, {\n    modules: ['Form', 'Loader']\n});"]}