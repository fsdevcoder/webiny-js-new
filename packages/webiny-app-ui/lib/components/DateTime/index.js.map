{"version":3,"sources":["../../../src/components/DateTime/index.js"],"names":["DateTime","props","valueChanged","bindMethods","nextProps","nextState","omit","oldProps","newProps","state","prevProps","prevState","isValid","input","setState","validationMessage","element","format","inputFormat","I18n","getDatetimeFormat","convertPhpToJsDateTimeFormat","datetimepicker","stepping","keepOpen","debug","minDate","Date","viewMode","widgetPositioning","horizontal","positionHorizontal","vertical","positionVertical","on","onChange","e","target","value","newValue","datetime","modelFormat","validate","getPlaceholder","Ui","FormComponent","defaultProps","extendProps","renderer","omitProps","Input","Icon","renderPreview","addonRight","onRef","ref","onComponentDidMount","setup","createComponent","modules"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { Webiny } from 'webiny-app';\n\nclass DateTime extends Webiny.Ui.FormComponent {\n\n    constructor(props) {\n        super(props);\n        this.valueChanged = false;\n\n        this.bindMethods('setup,onChange');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps['disabledBy']) {\n            return true;\n        }\n\n        const omit = ['children', 'key', 'ref', 'onChange'];\n        const oldProps = _.omit(this.props, omit);\n        const newProps = _.omit(nextProps, omit);\n\n        return !_.isEqual(newProps, oldProps) || !_.isEqual(nextState, this.state);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        super.componentDidUpdate();\n        if (prevState.isValid !== this.state.isValid) {\n            this.input.setState({\n                isValid: this.state.isValid,\n                validationMessage: this.state.validationMessage\n            });\n        }\n    }\n\n    setup() {\n        this.element = $(this.input);\n\n        let format = this.props.inputFormat || Webiny.I18n.getDatetimeFormat();\n        format = Webiny.I18n.convertPhpToJsDateTimeFormat(format);\n\n        this.element.datetimepicker({\n            format,\n            stepping: this.props.stepping,\n            keepOpen: false,\n            debug: this.props.debug || false,\n            minDate: this.props.minDate ? new Date(this.props.minDate) : false,\n            viewMode: this.props.viewMode,\n            widgetPositioning: {\n                horizontal: this.props.positionHorizontal || 'auto',\n                vertical: this.props.positionVertical || 'bottom'\n            }\n        }).on('dp.hide', e => {\n            if (this.valueChanged) {\n                this.onChange(e.target.value);\n            }\n            this.valueChanged = false;\n        }).on('dp.change', () => {\n            this.valueChanged = true;\n        });\n    }\n\n    onChange(newValue) {\n        if (newValue) {\n            newValue = Webiny.I18n.datetime(newValue, this.props.modelFormat, this.props.inputFormat || Webiny.I18n.getDatetimeFormat());\n        }\n\n        if (newValue !== this.props.value) {\n            this.props.onChange(newValue, this.validate);\n        }\n    }\n\n    renderPreview() {\n        if (!_.isEmpty(this.props.value)) {\n            return Webiny.I18n.datetime(this.props.value, this.props.inputFormat, this.props.modelFormat);\n        }\n\n        return this.getPlaceholder();\n    }\n}\n\nDateTime.defaultProps = Webiny.Ui.FormComponent.extendProps({\n    debug: false,\n    inputFormat: null,\n    modelFormat: 'Y-m-d H:i:s',\n    positionHorizontal: 'auto',\n    positionVertical: 'bottom',\n    viewMode: 'days',\n    renderer() {\n        const omitProps = ['attachToForm', 'attachValidators', 'detachFromForm', 'validateInput', 'form', 'renderer', 'name', 'onChange'];\n        const props = _.omit(this.props, omitProps);\n        const { Input, Icon } = props;\n        props.value = this.renderPreview();\n        props.addonRight = <Icon icon=\"icon-calendar\"/>;\n        props.onRef = ref => this.input = ref;\n        props.onComponentDidMount = input => {\n            this.input = input;\n            this.setup();\n        };\n\n        return <Input {...props}/>;\n    }\n});\n\nexport default Webiny.createComponent(DateTime, {\n    modules: ['Icon', 'Input', 'Webiny/Vendors/DateTimePicker']\n});\n"]}