{"version":3,"sources":["../../../src/components/Tooltip/index.js"],"names":["Tooltip","ref","state","click","target","hover","content","onClick","bind","onMouseEnter","onMouseLeave","onContentEnter","onContentLeave","props","trigger","first","on","off","setState","mustShowTooltipContent","children","placement","firstChild","Component","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport { createComponent } from \"webiny-app\";\nimport TooltipContent from './TooltipContent';\n\nclass Tooltip extends React.Component {\n    constructor() {\n        super();\n        this.ref = null;\n        this.state = {\n            click: {\n                target: false\n            },\n            hover: {\n                target: false,\n                content: false\n            }\n        };\n        this.onClick = this.onClick.bind(this);\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onContentEnter = this.onContentEnter.bind(this);\n        this.onContentLeave = this.onContentLeave.bind(this);\n    }\n\n    componentDidMount() {\n        // We attach different event listeners, depending on received 'trigger' prop.\n        switch (this.props.trigger) {\n            case 'click':\n                $(this.ref).first().on('click', this.onClick);\n                break;\n            default: // Hover\n                $(this.ref).first().on('mouseenter', this.onMouseEnter);\n                $(this.ref).first().on('mouseleave', this.onMouseLeave);\n        }\n    }\n\n    componentWillUnmount() {\n        $(this.ref).first().off();\n    }\n\n    onClick() {\n        this.setState(state => {\n            const click = state.click;\n            click.target = !click.target;\n            return { click };\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(state => {\n            const hover = state.hover;\n            hover.target = true;\n            return { hover };\n        });\n    }\n\n    onMouseLeave() {\n        this.setState(state => {\n            const hover = state.hover;\n            hover.target = false;\n            return { hover };\n        });\n    }\n\n    onContentEnter() {\n        this.setState(state => {\n            const hover = state.hover;\n            hover.content = true;\n            return { hover };\n        });\n    }\n\n    onContentLeave() {\n        this.setState(state => {\n            const hover = state.hover;\n            hover.content = false;\n            return { hover };\n        });\n    }\n\n    /**\n     * Tells us if tooltip content must be in the DOM, conditions depend on received 'trigger' prop.\n     * @returns {boolean}\n     */\n    mustShowTooltipContent() {\n        switch (this.props.trigger) {\n            case 'click':\n                return this.state.click.target;\n                break;\n            default: // hover\n                return this.state.hover.target;\n        }\n    }\n\n    render() {\n        return (\n            <span ref={ref => this.ref = ref}>\n                {this.props.target}\n                {this.mustShowTooltipContent() && (\n                    <TooltipContent\n                        trigger={this.props.trigger}\n                        onOutsideClick={this.onClick}\n                        onMouseEnter={this.onContentEnter}\n                        onMouseLeave={this.onContentLeave}\n                        content={this.props.children}\n                        placement={this.props.placement}\n                        targetFirstChildElement={this.ref.firstChild}/>\n                )}\n            </span>\n        );\n    }\n}\n\nTooltip.defaultProps = {\n    placement: 'right',\n    trigger: 'hover',\n    target: null\n};\n\nexport default createComponent(Tooltip);"]}