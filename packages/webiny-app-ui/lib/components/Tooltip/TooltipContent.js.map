{"version":3,"sources":["../../../src/components/Tooltip/TooltipContent.js"],"names":["TooltipContent","positioningInterval","ref","state","style","visibility","onClick","bind","setupPlacement","mounted","setInterval","setTimeout","clearInterval","registerEventListeners","unregisterEventListeners","target","width","props","targetFirstChildElement","offsetWidth","height","offsetHeight","position","content","placement","top","left","setState","trigger","document","addEventListener","removeEventListener","event","contains","onOutsideClick","onMouseEnter","onMouseLeave","innerContent","Component","defaultProps"],"mappings":"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","file":"TooltipContent.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport classSet from \"classnames\";\nimport styles from './styles.css';\n\nclass TooltipContent extends React.Component {\n    constructor() {\n        super();\n        this.positioningInterval = null;\n        this.ref = null;\n        this.state = {\n            style: { visibility: 'hidden' }\n        };\n        this.onClick = this.onClick.bind(this);\n        this.setupPlacement = this.setupPlacement.bind(this);\n        this.mounted = false;\n    }\n\n    /**\n     * During the first 500ms, we call the setupPlacement more frequently, every 50ms, because of the possible DOM changes in the child\n     * components. After that, we assume components are ready, and then we reduce the frequency to 750ms.\n     */\n    componentDidMount() {\n        this.mounted = true;\n        this.positioningInterval = setInterval(this.setupPlacement, 50);\n        setTimeout(() => {\n            if (this.mounted) {\n                clearInterval(this.positioningInterval);\n                this.positioningInterval = setInterval(this.setupPlacement, 750);\n                this.registerEventListeners();\n            }\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        this.unregisterEventListeners();\n        clearInterval(this.positioningInterval);\n    }\n\n    setupPlacement() {\n        if (!this.ref) {\n            return;\n        }\n\n        const target = _.assign({\n            width: this.props.targetFirstChildElement.offsetWidth,\n            height: this.props.targetFirstChildElement.offsetHeight,\n        }, $(this.props.targetFirstChildElement).position());\n\n        const content = {\n            width: this.ref.offsetWidth,\n            height: this.ref.offsetHeight\n        };\n\n        const style = {};\n        switch (this.props.placement) {\n            case 'bottomRight':\n                style.top = target.top + target.height;\n                style.left = target.left + target.width;\n                break;\n            case 'bottom':\n                style.top = target.top + target.height;\n                style.left = target.left + (-(content.width - target.width) / 2);\n                break;\n            case 'bottomLeft':\n                style.top = target.top + target.height;\n                style.left = target.left - content.width;\n                break;\n            case 'left':\n                style.top = target.top + (-(content.height - target.height) / 2);\n                style.left = target.left - content.width;\n                break;\n            case 'topLeft':\n                style.top = target.top - content.height;\n                style.left = target.left - content.width;\n                break;\n            case 'top':\n                style.top = target.top - content.height;\n                style.left = target.left + (-(content.width - target.width) / 2);\n                break;\n            case 'topRight':\n                style.top = target.top - content.height;\n                style.left = target.left + target.width;\n                break;\n            default: // 'right'\n                style.top = target.top + (-(content.height - target.height) / 2);\n                style.left = target.left + target.width;\n        }\n\n        this.setState({ style });\n    }\n\n    /**\n     * If tooltip was triggered by 'click' event, then we want to watch for all outside clicks, to automatically close the tooltip.\n     */\n    registerEventListeners() {\n        if (this.props.trigger === 'click') {\n            document.addEventListener('click', this.onClick)\n        }\n    }\n\n    unregisterEventListeners() {\n        if (this.props.trigger === 'click') {\n            document.removeEventListener('click', this.onClick)\n        }\n    }\n\n    onClick(event) {\n        if (!this.ref.contains(event.target)) {\n            this.props.onOutsideClick();\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={this.state.style}\n                className={classSet(styles.content, styles['content' + _.upperFirst(this.props.placement)])}\n                ref={ref => this.ref = ref}\n                onMouseEnter={this.props.onMouseEnter}\n                onMouseLeave={this.props.onMouseLeave}>\n                <div className={styles.innerContent}>\n                    {this.props.content}\n                </div>\n            </div>\n        );\n    }\n}\n\nTooltipContent.defaultProps = {\n    targetFirstChildElement: null,\n    content: null,\n    placement: 'right',\n    trigger: 'hover',\n    onOutsideClick: _.noop,\n    onMouseEnter: _.noop,\n    onMouseLeave: _.noop\n};\n\nexport default TooltipContent;"]}