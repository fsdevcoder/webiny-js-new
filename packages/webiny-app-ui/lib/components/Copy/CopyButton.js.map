{"version":3,"sources":["../../../src/components/Copy/CopyButton.jsx"],"names":["t","namespace","CopyButton","dom","interval","setInterval","clearInterval","setup","clipboard","destroy","props","Clipboard","text","value","on","onSuccessMessage","services","get","info","render","call","Button","ref","Component","defaultProps","label","onCopy","style","modules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA,IAAMA,IAAI,gBAAKC,SAAL,CAAe,2BAAf,CAAV;;IACMC,U;;;AACF,0BAAc;AAAA;;AAAA;;AAGV,cAAKC,GAAL,GAAW,IAAX;AAHU;AAIb;;;;4CAEmB;AAAA;;AAChB,iBAAKC,QAAL,GAAgBC,YAAY,YAAM;AAC9B,oBAAI,OAAKF,GAAT,EAAc;AACVG,kCAAc,OAAKF,QAAnB;AACA,2BAAKA,QAAL,GAAgB,IAAhB;AACA,2BAAKG,KAAL;AACH;AACJ,aANe,EAMb,GANa,CAAhB;AAOH;;;+CAEsB;AACnB,iBAAKC,SAAL,CAAeC,OAAf;AACH;;;gCAEO;AAAA;;AACJ,iBAAKD,SAAL,GAAiB,IAAI,KAAKE,KAAL,CAAWC,SAAf,CAAyB,KAAKR,GAA9B,EAAmC;AAChDS,sBAAM,gBAAM;AACR,2BAAO,OAAKF,KAAL,CAAWG,KAAlB;AACH;AAH+C,aAAnC,CAAjB;;AAMA,iBAAKL,SAAL,CAAeM,EAAf,CAAkB,SAAlB,EAA6B,YAAM;AAC/B,oBAAMC,mBAAmB,OAAKL,KAAL,CAAWK,gBAApC;AACA,oBAAI,0BAAaA,gBAAb,CAAJ,EAAoC;AAChCA;AACH,iBAFD,MAEO,IAAI,wBAAWA,gBAAX,CAAJ,EAAkC;AACrC,mCAAIC,QAAJ,CAAaC,GAAb,CAAiB,SAAjB,EAA4BC,IAA5B,CAAiCH,gBAAjC;AACH;AACJ,aAPD;AAQH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKL,KAAL,CAAWS,MAAf,EAAuB;AACnB,uBAAO,KAAKT,KAAL,CAAWS,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAED,gBAAMV,QAAQ,oBAAO,KAAKA,KAAZ,EAAmB,CAAC,UAAD,EAAa,kBAAb,EAAiC,QAAjC,EAA2C,OAA3C,CAAnB,CAAd;AALK,gBAMGW,MANH,GAMcX,KANd,CAMGW,MANH;;;AAQL,mBAAO,8BAAC,MAAD,2BAAQ,OAAO;AAAA,2BAAO,OAAKlB,GAAL,GAAWmB,GAAlB;AAAA,iBAAf,IAA0CZ,KAA1C,EAAP;AACH;;;EA/CoB,gBAAMa,S;;AAkD/BrB,WAAWsB,YAAX,GAA0B;AACtBC,WAAOzB,CAAP,iBADsB;AAEtBe,sBAAkBf,CAAlB,kBAFsB;AAGtB0B,0BAHsB;AAItBC,WAAO,IAJe;AAKtBd,WAAO;AALe,CAA1B;;kBAQe,gCAAgBX,UAAhB,EAA4B,EAAE0B,SAAS,CAAC,QAAD,EAAW,EAAEjB,WAAW;AAAA,mBAAM,OAAO,WAAP,CAAN;AAAA,SAAb,EAAX,CAAX,EAA5B,C","file":"CopyButton.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { app, i18n, createComponent } from 'webiny-app';\n\nconst t = i18n.namespace(\"Webiny.Ui.Copy.CopyButton\");\nclass CopyButton extends React.Component {\n    constructor() {\n        super();\n\n        this.dom = null;\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            if (this.dom) {\n                clearInterval(this.interval);\n                this.interval = null;\n                this.setup();\n            }\n        }, 100);\n    }\n\n    componentWillUnmount() {\n        this.clipboard.destroy();\n    }\n\n    setup() {\n        this.clipboard = new this.props.Clipboard(this.dom, {\n            text: () => {\n                return this.props.value;\n            }\n        });\n\n        this.clipboard.on('success', () => {\n            const onSuccessMessage = this.props.onSuccessMessage;\n            if (_.isFunction(onSuccessMessage)) {\n                onSuccessMessage();\n            } else if (_.isString(onSuccessMessage)) {\n                app.services.get('growler').info(onSuccessMessage);\n            }\n        });\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const props = _.omit(this.props, ['renderer', 'onSuccessMessage', 'onCopy', 'value']);\n        const { Button } = props;\n\n        return <Button onRef={ref => this.dom = ref} {...props}/>;\n    }\n}\n\nCopyButton.defaultProps = {\n    label: t`Copy`,\n    onSuccessMessage: t`Copied to clipboard!`,\n    onCopy: _.noop,\n    style: null,\n    value: null\n};\n\nexport default createComponent(CopyButton, { modules: ['Button', { Clipboard: () => import('clipboard') }] });\n"]}