{"version":3,"sources":["../../../src/components/Copy/CopyInput.jsx"],"names":["t","namespace","CopyInput","button","props","attachToForm","interval","setInterval","clearInterval","setup","clipboard","destroy","Clipboard","text","value","on","onSuccessMessage","services","get","info","render","call","Button","FormGroup","styles","readOnly","type","className","input","state","isValid","renderLabel","renderInfo","ref","btnCopy","actionLabel","renderDescription","Component","defaultProps","onCopy","modules"],"mappings":"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","file":"CopyInput.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { app, i18n, createComponent } from 'webiny-app';\nimport { FormComponent } from 'webiny-app-ui';\nimport styles from './styles.css';\n\nconst t = i18n.namespace(\"Webiny.Ui.Copy.CopyInput\");\nclass CopyInput extends React.Component {\n    constructor() {\n        super();\n        this.button = null;\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n\n        this.interval = setInterval(() => {\n            if (this.button) {\n                clearInterval(this.interval);\n                this.interval = null;\n                this.setup();\n            }\n        }, 100);\n    }\n\n    componentWillUnmount() {\n        this.clipboard.destroy();\n    }\n\n    setup() {\n\n        this.clipboard = new this.props.Clipboard(this.button, {\n            text: () => {\n                return this.props.value;\n            }\n        });\n\n        this.clipboard.on('success', () => {\n            const onSuccessMessage = this.props.onSuccessMessage;\n            if (_.isFunction(onSuccessMessage)) {\n                onSuccessMessage();\n            } else if (_.isString(onSuccessMessage)) {\n                app.services.get('growler').info(onSuccessMessage);\n            }\n        });\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Button, FormGroup, styles } = this.props;\n\n        const props = {\n            readOnly: true,\n            type: 'text',\n            className: styles.input,\n            value: this.props.value || ''\n        };\n\n        return (\n            <FormGroup valid={this.state.isValid} className={this.props.className}>\n                {this.props.renderLabel.call(this)}\n                {this.props.renderInfo.call(this)}\n                <div className=\"inputGroup\">\n                    <input {...props}/>\n                    <Button onRef={ref => this.button = ref} type=\"primary\" className={styles.btnCopy}>\n                        {this.props.actionLabel}\n                    </Button>\n                </div>\n                {this.props.renderDescription.call(this)}\n            </FormGroup>\n        );\n    }\n}\n\nCopyInput.defaultProps = {\n    actionLabel: t`Copy`,\n    onSuccessMessage: t`Copied to clipboard!`,\n    onCopy: _.noop\n};\n\nexport default createComponent([CopyInput, FormComponent], {\n    styles,\n    modules: ['Button', 'FormGroup', { Clipboard: () => import('clipboard') }]\n});\n"]}