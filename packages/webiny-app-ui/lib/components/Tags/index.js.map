{"version":3,"sources":["../../../src/components/Tags/index.js"],"names":["t","namespace","Tags","props","state","initialState","map","m","bind","attachToForm","autoFocus","tagInput","focus","index","value","splice","onChange","tag","data","e","ctrlKey","metaKey","tags","input","emptyField","canRemove","keyCode","skipAdd","key","removeTag","preventDefault","stopPropagation","validateTag","tagExists","then","push","setState","catch","onInvalidTag","event","validate","validateTags","render","call","FormGroup","styles","type","className","ref","onKeyDown","addTag","placeholder","onBlur","readOnly","isValid","renderLabel","container","focusTagInput","renderTag","renderDescription","renderValidationMessage","Component","defaultProps","Icon","block","modules","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent, i18n } from \"webiny-app\";\nimport { FormComponent } from \"webiny-app-ui\";\nimport { validation } from \"webiny-validation\";\nimport styles from \"./styles.css\";\n\nconst t = i18n.namespace(\"Webiny.Ui.Tags\");\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...props.initialState\n        };\n\n        [\"focusTagInput\", \"removeTag\", \"addTag\", \"validateTag\"].map(\n            m => (this[m] = this[m].bind(this))\n        );\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n\n        if (this.props.autoFocus) {\n            this.tagInput.focus();\n        }\n    }\n\n    focusTagInput() {\n        this.tagInput.focus();\n    }\n\n    removeTag(index) {\n        const { value } = this.props;\n        value.splice(index, 1);\n        this.props.onChange(value);\n    }\n\n    tagExists(tag) {\n        return _.find(this.props.value, data => data === tag);\n    }\n\n    addTag(e) {\n        if (e.ctrlKey || e.metaKey) {\n            return;\n        }\n        let tags = this.props.value;\n        const input = this.tagInput;\n        const emptyField = !input.value;\n        const canRemove = (emptyField && e.keyCode === 8) || e.keyCode === 46;\n        const skipAdd = e.key !== \"Tab\" && e.key !== \"Enter\";\n\n        if (canRemove) {\n            this.removeTag(_.findLastIndex(tags));\n        }\n\n        if (skipAdd) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (emptyField) {\n            return this.validateTag();\n        }\n\n        if (this.tagExists(input.value)) {\n            return;\n        }\n\n        if (!_.isArray(tags)) {\n            tags = [];\n        }\n\n        this.validateTag(input.value)\n            .then(() => {\n                tags.push(input.value);\n                input.value = \"\";\n                this.props.onChange(tags);\n                this.setState({ tag: \"\" });\n            })\n            .catch(e => {\n                this.props.onInvalidTag({ value: input.value, event: e });\n            });\n    }\n\n    validateTag(value = null) {\n        return validation.validate(value, this.props.validateTags);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { FormGroup, styles } = this.props;\n\n        const input = {\n            type: \"text\",\n            className: styles.input,\n            ref: tagInput => (this.tagInput = tagInput),\n            onKeyDown: this.addTag,\n            placeholder: this.props.placeholder,\n            onBlur: this.props.validate,\n            readOnly: _.get(this.props, \"readOnly\", false)\n        };\n\n        return (\n            <FormGroup valid={this.state.isValid} className={this.props.className}>\n                {this.props.renderLabel.call(this)}\n                <div className={styles.container} onClick={this.focusTagInput}>\n                    <div className={styles.tag}>\n                        {_.isArray(this.props.value) &&\n                            this.props.value.map((value, index) =>\n                                this.props.renderTag.call(this, { value, index })\n                            )}\n                        <input {...input} />\n                    </div>\n                </div>\n                {this.props.renderDescription.call(this)}\n                {this.props.renderValidationMessage.call(this)}\n            </FormGroup>\n        );\n    }\n}\n\nTags.defaultProps = {\n    autoFocus: false,\n    validateTags: null,\n    placeholder: t`Type and hit ENTER`,\n    onInvalidTag: _.noop,\n    renderTag({ value, index }) {\n        const { Icon, styles } = this.props;\n        return (\n            <div key={value} className={styles.block}>\n                <p>{value}</p>\n                <Icon icon=\"icon-cancel\" onClick={() => this.removeTag(index)} />\n            </div>\n        );\n    }\n};\n\nexport default createComponent([Tags, FormComponent], {\n    modules: [\"Icon\", \"FormGroup\"],\n    styles,\n    formComponent: true\n});\n"]}