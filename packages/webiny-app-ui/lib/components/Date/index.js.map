{"version":3,"sources":["../../../src/components/Date/index.js"],"names":["Date","props","state","valueChanged","element","setup","bind","onChange","nextProps","nextState","omit","oldProps","newProps","prevProps","prevState","isValid","input","setState","validationMessage","format","inputFormat","datetimepicker","stepping","keepOpen","debug","minDate","viewMode","widgetPositioning","horizontal","positionHorizontal","vertical","positionVertical","on","e","target","value","newValue","modelFormat","withTimezone","Webiny","I18n","datetime","getDateFormat","validate","date","getPlaceholder","render","call","omitProps","Input","Icon","renderPreview","addonRight","onRef","ref","Component","defaultProps","modules"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { createComponent, i18n } from 'webiny-app';\nimport { FormComponent } from 'webiny-app-ui';\n\nclass Date extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.valueChanged = false;\n        this.element = null;\n\n        this.setup = this.setup.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps['disabledBy']) {\n            return true;\n        }\n\n        const omit = ['children', 'key', 'ref', 'onChange'];\n        const oldProps = _.omit(this.props, omit);\n        const newProps = _.omit(nextProps, omit);\n\n        return !_.isEqual(newProps, oldProps) || !_.isEqual(nextState, this.state);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.isValid !== this.state.isValid) {\n            this.input.setState({\n                isValid: this.state.isValid,\n                validationMessage: this.state.validationMessage\n            });\n        }\n    }\n\n    setup() {\n        let format = this.props.inputFormat;\n\n        this.element.datetimepicker({\n            format: format,\n            stepping: this.props.stepping,\n            keepOpen: false,\n            debug: this.props.debug || false,\n            minDate: this.props.minDate ? new Date(this.props.minDate) : false,\n            viewMode: this.props.viewMode,\n            widgetPositioning: {\n                horizontal: this.props.positionHorizontal,\n                vertical: this.props.positionVertical\n            }\n        }).on('dp.hide', e => {\n            if (this.valueChanged) {\n                this.onChange(e.target.value);\n            }\n            this.valueChanged = false;\n        }).on('dp.change', () => {\n            this.valueChanged = true;\n        });\n    }\n\n    onChange(newValue) {\n        if (newValue) {\n            const modelFormat = this.props.withTimezone ? 'Y-m-dTH:i:sO' : this.props.modelFormat;\n            newValue = Webiny.I18n.datetime(newValue, modelFormat, this.props.inputFormat || Webiny.I18n.getDateFormat());\n        }\n\n        if (newValue !== this.props.value) {\n            this.props.onChange(newValue, this.validate);\n        }\n    }\n\n    renderPreview() {\n        if (!_.isEmpty(this.props.value)) {\n            return Webiny.I18n.date(this.props.value, this.props.inputFormat, this.props.modelFormat);\n        }\n\n        return this.getPlaceholder();\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const omitProps = ['attachToForm', 'attachValidators', 'detachFromForm', 'validateInput', 'form', 'renderer', 'name', 'onChange'];\n        const props = _.omit(this.props, omitProps);\n        const { Input, Icon } = props;\n        props.value = this.renderPreview();\n        props.addonRight = <Icon icon=\"icon-calendar\"/>;\n        props.onRef = element => {\n            this.element = element;\n            this.setup();\n        };\n        return <Input ref={ref => this.input = ref} {...props}/>;\n    }\n}\n\nDate.defaultProps = {\n    debug: false,\n    inputFormat: null,\n    modelFormat: 'Y-m-d',\n    withTimezone: false,\n    positionHorizontal: 'auto',\n    positionVertical: 'bottom',\n    viewMode: 'days'\n};\n\nexport default createComponent([Date, FormComponent], {\n    modules: ['Icon', 'Input', 'Vendors/DateTimePicker']\n});\n"]}