{"version":3,"sources":["../../../src/components/FileReader/index.js"],"names":["t","namespace","FileReader","props","reset","dom","value","map","m","bind","onReady","getFiles","readFiles","click","e","target","files","output","errors","loadedFiles","reader","window","onloadend","data","name","f","size","type","errorMessage","accept","length","indexOf","file","sizeLimit","result","push","message","onChange","apply","multiple","readAs","readAsBinaryString","readAsDataURL","ref","display","Component","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { createComponent, i18n } from \"webiny-app\";\n\nconst t = i18n.namespace(\"Webiny.Ui.FileReader\");\nclass FileReader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.reset = () => {\n            this.dom.value = null;\n        };\n\n        this.dom = null;\n\n        [\"onChange\", \"getFiles\", \"readFiles\"].map(m => (this[m] = this[m].bind(this)));\n    }\n\n    componentDidMount() {\n        this.props.onReady({\n            getFiles: this.getFiles,\n            readFiles: this.readFiles\n        });\n    }\n\n    componentWillUnmount() {\n        this.reset = _.noop;\n    }\n\n    getFiles() {\n        this.dom.click();\n    }\n\n    onChange(e) {\n        this.readFiles(e.target.files);\n    }\n\n    readFiles(files) {\n        const output = [];\n        const errors = [];\n        let loadedFiles = 0;\n\n        _.each(files, file => {\n            const reader = new window.FileReader();\n\n            reader.onloadend = (f => {\n                return e => {\n                    loadedFiles++;\n                    const data = {\n                        name: f.name,\n                        size: f.size,\n                        type: f.type\n                    };\n\n                    let errorMessage = null;\n                    if (this.props.accept.length && this.props.accept.indexOf(file.type) === -1) {\n                        errorMessage = t`Unsupported file type ({type})`({ type: file.type });\n                    } else if (this.props.sizeLimit < file.size) {\n                        errorMessage = t`File is too big`;\n                    }\n\n                    if (!errorMessage) {\n                        data.data = e.target.result;\n                        output.push(data);\n                    } else {\n                        data.message = errorMessage;\n                        errors.push(data);\n                    }\n\n                    if (loadedFiles === files.length) {\n                        this.props.onChange.apply(\n                            this,\n                            this.props.multiple\n                                ? [output, errors]\n                                : [output[0] || null, errors[0] || null]\n                        );\n                        this.reset();\n                    }\n                };\n            })(file);\n\n            if (this.props.readAs === \"binary\") {\n                reader.readAsBinaryString(file);\n            } else {\n                reader.readAsDataURL(file);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <input\n                ref={ref => (this.dom = ref)}\n                accept={this.props.accept}\n                style={{ display: \"none\" }}\n                type=\"file\"\n                multiple={this.props.multiple}\n                onChange={this.onChange}\n            />\n        );\n    }\n}\n\nFileReader.defaultProps = {\n    accept: [],\n    multiple: false,\n    sizeLimit: 2097152, // 10485760\n    readAs: \"data\", // data || binary\n    onChange: _.noop,\n    onReady: _.noop\n};\n\nexport default createComponent(FileReader);\n"]}