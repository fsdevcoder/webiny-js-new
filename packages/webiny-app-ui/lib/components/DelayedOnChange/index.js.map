{"version":3,"sources":["../../../src/components/DelayedOnChange/index.js"],"names":["DelayedOnChange","props","delay","state","value","getChildElement","applyValue","bind","changed","setState","callback","clearTimeout","realOnChange","setTimeout","Children","toArray","children","childElement","onChange","e","target","realOnKeyDown","onKeyDown","realOnBlur","onBlur","persist","key","cloneElement","Component","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\n/**\n * This component is used to wrap Input and Textarea components to optimize form re-render.\n * These 2 are the only components that trigger form model change on each character input.\n * This means, whenever you type a letter an entire form re-renders.\n * On complex forms you will feel and see a significant delay if this component is not used.\n *\n * The logic behind this component is to serve as a middleware between Form and Input/Textarea, and only notify form of a change when\n * a user stops typing for given period of time (400ms by default).\n */\nclass DelayedOnChange extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.delay = null;\n        this.state = {\n            value: this.getChildElement(props).props.value\n        };\n\n        this.applyValue = this.applyValue.bind(this);\n        this.changed = this.changed.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n        if (!this.delay) {\n            this.setState({ value: this.getChildElement(props).props.value });\n        }\n    }\n\n    applyValue(value, callback = _.noop) {\n        clearTimeout(this.delay);\n        this.delay = null;\n        this.realOnChange(value, callback);\n    }\n\n    changed() {\n        clearTimeout(this.delay);\n        this.delay = null;\n        this.delay = setTimeout(() => this.applyValue(this.state.value), this.props.delay);\n    }\n\n    getChildElement(props = null) {\n        if (!props) {\n            props = this.props;\n        }\n\n        return React.Children.toArray(props.children)[0];\n    }\n\n    render() {\n        const childElement = this.getChildElement();\n        this.realOnChange = childElement.props.onChange;\n        const props = _.omit(childElement.props, ['onChange']);\n        props.value = this.state.value;\n        props.onChange = e => {\n            const value = _.isString(e) ? e : e.target.value;\n            this.setState({ value }, this.changed);\n        };\n        const realOnKeyDown = props.onKeyDown || _.noop;\n        const realOnBlur = props.onBlur || _.noop;\n        \n        // Need to apply value if input lost focus\n        props.onBlur = (e) => {\n            e.persist();\n            this.applyValue(e.target.value, () => realOnBlur(e));\n        };\n\n        // Need to listen for TAB key to apply new value immediately, without delay. Otherwise validation will be triggered with old value.\n        props.onKeyDown = (e) => {\n            e.persist();\n            if (e.key === 'Tab') {\n                this.applyValue(e.target.value, () => realOnKeyDown(e));\n            } else if (e.key === 'Enter' && props['data-on-enter']) {\n                this.applyValue(e.target.value, () => realOnKeyDown(e));\n            } else {\n                realOnKeyDown(e);\n            }\n        };\n\n        return React.cloneElement(childElement, props);\n    }\n}\n\nDelayedOnChange.defaultProps = {\n    delay: 400\n};\n\nexport default DelayedOnChange;"]}