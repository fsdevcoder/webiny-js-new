{"version":3,"sources":["../../../src/components/Gallery/index.js"],"names":["placeholder","document","createElement","className","textContent","t","namespace","Gallery","props","lastId","dragged","state","initialState","cropImage","actualWidth","actualHeight","images","dragOver","errors","map","m","bind","attachToForm","setupComponent","dom","findDOMNode","value","img","key","setState","create","image","index","stateImage","stateIndex","numberOfImages","maxImages","name","push","message","maxImagesMessage","getImageIndex","order","length","onChange","onSaveImage","newImage","saveImage","files","file","newCropper","e","stopPropagation","reader","getFiles","preventDefault","persist","readFiles","dataTransfer","cropIndex","splice","item","i","currentTarget","closest","setDragImage","setData","data","from","Number","dataset","id","to","over","nodePlacement","style","display","parentNode","removeChild","target","hasClass","relX","clientX","offset","left","width","offsetWidth","parent","insertBefore","nextElementSibling","children","cropper","editCropper","Cropper","inline","title","action","onCropperHidden","applyCropping","config","render","call","FileReader","Alert","Input","FormGroup","styles","mainText","onDrop","onDragLeave","onDragOver","onClick","css","trayBin","trayBinEmpty","err","container","imageProps","onEdit","editImage","onDelete","deleteImage","onDragStart","onImageDragStart","onDragEnd","onImageDragEnd","onImageDragOver","accept","sizeLimit","filesChanged","getCropper","bindTo","uploadAction","Component","defaultProps","Image","modules","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport classSet from \"classnames\";\nimport { createComponent, i18n } from \"webiny-app\";\nimport { FormComponent, LinkState } from \"webiny-app-ui\";\nimport Image from \"./Image\";\nimport styles from \"./styles.css\";\n\nconst placeholder = document.createElement(\"div\");\nplaceholder.className = styles.placeholder;\nplaceholder.textContent = \"Drop here\";\n\nconst t = i18n.namespace(\"Webiny.Ui.Gallery\");\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastId = null;\n        this.dragged = null;\n\n        this.state = {\n            ...props.initialState,\n            cropImage: null,\n            actualWidth: 0,\n            actualHeight: 0,\n            images: [],\n            dragOver: false,\n            errors: null\n        };\n\n        [\n            \"getFiles\",\n            \"getImageIndex\",\n            \"getCropper\",\n            \"saveImage\",\n            \"deleteImage\",\n            \"applyCropping\",\n            \"onCropperHidden\",\n            \"filesChanged\",\n            \"onDrop\",\n            \"onDragOver\",\n            \"onDragLeave\",\n            \"onImageDragOver\",\n            \"onImageDragStart\",\n            \"onImageDragEnd\"\n        ].map(m => (this[m] = this[m].bind(this)));\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n\n        this.setupComponent(this.props);\n    }\n\n    componentWillReceiveProps(props) {\n        this.setupComponent(props);\n    }\n\n    setupComponent(props) {\n        // TODO: @i18nRefactor ESLint Do not use findDOMNode (react/no-find-dom-node)\n        this.dom = ReactDOM.findDOMNode(this); // eslint-disable-line\n        if (props.value) {\n            const images = props.value.map(img => {\n                img.key = _.uniqueId(\"image-\");\n                return img;\n            });\n            this.setState({ images });\n        }\n    }\n\n    bindTo(key) {\n        return new LinkState(this, key).create();\n    }\n\n    getImageIndex(image) {\n        let index = null;\n        this.state.images.map((stateImage, stateIndex) => {\n            if (stateImage.key === image.key) {\n                index = stateIndex;\n            }\n        });\n        return index;\n    }\n\n    saveImage(image) {\n        const numberOfImages = _.get(this.props, \"value.length\", 0) + 1;\n        // Show error message if maximum images limit is reached and the image being saved does not yet exists in the gallery\n        if (\n            this.props.maxImages &&\n            numberOfImages > this.props.maxImages &&\n            !_.find(this.props.value, { name: image.name })\n        ) {\n            const errors = this.state.errors || [];\n            errors.push({ name: image.name, message: this.props.maxImagesMessage });\n            this.setState({ errors });\n            return;\n        }\n\n        const index = this.getImageIndex(image);\n        const state = this.state;\n        if (index !== null) {\n            _.set(state, \"images.\" + index, image);\n        } else {\n            image.order = state.images.length;\n            state.images.push(image);\n        }\n        this.props.onChange(state.images);\n        this.props.onSaveImage({ image });\n    }\n\n    applyCropping(newImage) {\n        this.setState({ cropImage: null }, () => {\n            this.saveImage(newImage);\n        });\n    }\n\n    onCropperHidden() {\n        this.setState({ cropImage: null });\n    }\n\n    filesChanged(files, errors) {\n        if (errors && errors.length) {\n            this.setState({ errors });\n        } else {\n            this.setState({ errors: null });\n        }\n\n        if (files.length === 1) {\n            const file = files[0];\n            file.key = _.uniqueId(\"image-\");\n            if (this.props.newCropper) {\n                return this.setState({ cropImage: file });\n            }\n\n            return this.setState({ cropImage: null }, () => {\n                this.saveImage(file);\n            });\n        }\n\n        files.map(img => {\n            img.key = _.uniqueId(\"image-\");\n            this.saveImage(img);\n        });\n    }\n\n    getFiles(e) {\n        e.stopPropagation();\n        this.reader.getFiles();\n    }\n\n    onDragOver(e) {\n        if (this.dragged) {\n            return;\n        }\n\n        e.preventDefault();\n        this.setState({\n            dragOver: true\n        });\n    }\n\n    onDragLeave() {\n        if (this.dragged) {\n            return;\n        }\n\n        this.setState({\n            dragOver: false\n        });\n    }\n\n    onDrop(e) {\n        if (this.dragged) {\n            e.preventDefault();\n            return;\n        }\n\n        e.preventDefault();\n        e.persist();\n\n        this.setState({\n            dragOver: false\n        });\n\n        this.reader.readFiles(e.dataTransfer.files);\n    }\n\n    editImage(image, index) {\n        this.setState({ cropImage: image, cropIndex: index });\n    }\n\n    deleteImage(image, index) {\n        const state = this.state;\n        state.images.splice(index, 1);\n        state.images = state.images.map((item, i) => {\n            item.order = i;\n            return item;\n        });\n        this.props.onChange(state.images);\n    }\n\n    onImageDragStart(e) {\n        this.dragged = $(e.currentTarget).closest('[data-role=\"image\"]')[0];\n        if (this.dragged) {\n            e.dataTransfer.setDragImage(this.dragged, 10, 50);\n            // Firefox requires calling dataTransfer.setData for the drag to properly work\n            e.dataTransfer.setData(\"text/html\", this.dragged);\n        }\n    }\n\n    onImageDragEnd(e) {\n        e.preventDefault();\n        if (!this.dragged) {\n            return;\n        }\n        // Update state\n        let data = this.state.images;\n        const from = Number(this.dragged.dataset.id);\n        let to = Number(this.over.dataset.id);\n        if (from < to) {\n            to--;\n        }\n        if (this.nodePlacement === \"after\") {\n            to++;\n        }\n\n        this.dragged.style.display = \"inline-block\";\n        if (this.dragged.parentNode === placeholder.parentNode) {\n            this.dragged.parentNode.removeChild(placeholder);\n        }\n        this.dragged = null;\n\n        data.splice(to, 0, data.splice(from, 1)[0]);\n        data = data.map((item, index) => {\n            item.order = index;\n            return item;\n        });\n        this.props.onChange(data);\n    }\n\n    onImageDragOver(e) {\n        if (!this.dragged) {\n            return;\n        }\n        e.preventDefault();\n        this.dragged.style.display = \"none\";\n        const over = $(e.target).closest('[data-role=\"image\"]')[0];\n        if (!over || $(over).hasClass(\"placeholder\")) {\n            return;\n        }\n        this.over = over;\n\n        // Inside the dragOver method\n        const relX = e.clientX - $(over).offset().left;\n        const width = over.offsetWidth / 2;\n        const parent = over.parentNode;\n\n        if (relX > width) {\n            this.nodePlacement = \"after\";\n            parent.insertBefore(placeholder, over.nextElementSibling);\n        } else if (relX < width) {\n            this.nodePlacement = \"before\";\n            parent.insertBefore(placeholder, over);\n        }\n    }\n\n    getCropper(children = null) {\n        let cropper = this.props.newCropper;\n        if (this.state.cropImage && this.state.cropImage.id) {\n            cropper = this.props.editCropper;\n        }\n\n        if (!cropper) {\n            return null;\n        }\n\n        const { Cropper } = this.props;\n\n        if (cropper.inline) {\n            return (\n                <Cropper.Inline\n                    title={cropper.title}\n                    action={cropper.action}\n                    onHidden={this.onCropperHidden}\n                    onCrop={this.applyCropping}\n                    config={cropper.config}\n                    image={this.state.cropImage}\n                >\n                    {children}\n                </Cropper.Inline>\n            );\n        }\n\n        return (\n            <Cropper.Modal\n                title={cropper.title}\n                action={cropper.action}\n                onHidden={this.onCropperHidden}\n                onCrop={this.applyCropping}\n                config={cropper.config}\n                image={this.state.cropImage}\n            >\n                {children}\n            </Cropper.Modal>\n        );\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { FileReader, Alert, Input, FormGroup, styles } = this.props;\n\n        let message = null;\n        if (this.state.images.length === 0) {\n            message = (\n                <div>\n                    <span className={styles.mainText}>{t`DRAG FILES HERE`}</span>\n                </div>\n            );\n        }\n\n        const props = {\n            onDrop: this.onDrop,\n            onDragLeave: this.onDragLeave,\n            onDragOver: this.onDragOver,\n            onClick: this.getFiles\n        };\n\n        let css = classSet(styles.trayBin, styles.trayBinEmpty);\n\n        if (this.state.images.length > 0) {\n            css = classSet(styles.trayBin);\n        }\n\n        let errors = null;\n        if (this.state.errors) {\n            const data = [];\n            _.each(this.state.errors, (err, key) => {\n                data.push(\n                    <li key={key}>\n                        <strong>{err.name}</strong>: {err.message}\n                    </li>\n                );\n            });\n\n            errors = (\n                <Alert title={t`Some files could not be added to the gallery`} type=\"error\">\n                    {data && <ul>{data}</ul>}\n                </Alert>\n            );\n        }\n\n        return (\n            <FormGroup>\n                <div className={css}>\n                    {errors}\n                    <div className={styles.container} {...props}>\n                        {message}\n                        {this.state.images.map((item, index) => {\n                            const imageProps = {\n                                key: item.id || index,\n                                index,\n                                image: item,\n                                onEdit: () => this.editImage(item, index),\n                                onDelete: () => {\n                                    this.deleteImage(item, index);\n                                },\n                                onDragStart: this.onImageDragStart,\n                                onDragEnd: this.onImageDragEnd,\n                                onDragOver: this.onImageDragOver\n                            };\n\n                            // eslint-disable-next-line\n                            return <Image {...imageProps} />;\n                        })}\n                        <FileReader\n                            accept={this.props.accept}\n                            multiple={true}\n                            onReady={reader => (this.reader = reader)}\n                            sizeLimit={this.props.sizeLimit}\n                            onChange={this.filesChanged}\n                        />\n                        {this.getCropper(\n                            <Input\n                                label={t`Title`}\n                                placeholder={t`Type in an image title`}\n                                {...this.bindTo(\"cropImage.title\")}\n                            />\n                        )}\n                    </div>\n                    <div className={styles.uploadAction}>\n                        <span>{t`Dragging not convenient?`}</span>&nbsp;\n                        <a href=\"#\" onClick={this.getFiles}>{t`SELECT FILES HERE`}</a>\n                    </div>\n                </div>\n            </FormGroup>\n        );\n    }\n}\n\nGallery.defaultProps = {\n    accept: [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"],\n    sizeLimit: 10000000,\n    maxImages: null,\n    maxImagesMessage: t`Maximum number of images reached!`,\n    newCropper: {},\n    editCropper: {},\n    onSaveImage: _.noop\n};\n\nGallery.Image = Image;\n\nexport default createComponent([Gallery, FormComponent], {\n    modules: [\"Alert\", \"Cropper\", \"FileReader\", \"Input\", \"FormGroup\"],\n    styles,\n    formComponent: true\n});\n"]}