{"version":3,"sources":["../../../src/components/Image/index.js"],"names":["t","namespace","Image","props","lastId","state","initialState","error","cropImage","actualWidth","actualHeight","map","m","bind","attachToForm","newImage","onChange","then","setState","file","id","cropper","type","value","e","stopPropagation","reader","getFiles","children","Cropper","inline","title","action","onCropperHidden","applyCropping","config","preventDefault","dragOver","evt","persist","readFiles","dataTransfer","files","Alert","message","render","call","getCropper","FileReader","FormGroup","styles","mainText","onDrop","onDragLeave","onDragOver","onClick","css","trayBin","trayBinEmpty","image","imageProps","onEdit","editFile","onDelete","removeFile","onDragStart","onImageDragStart","onDragEnd","onImageDragEnd","onImageDragOver","className","renderError","container","accept","sizeLimit","fileChanged","uploadAction","Component","defaultProps","modules","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport classSet from \"classnames\";\nimport { createComponent, i18n } from \"webiny-app\";\nimport { FormComponent } from \"webiny-app-ui\";\nimport ImagePreview from \"./Preview\";\nimport styles from \"./styles.css\";\n\nconst t = i18n.namespace(\"Webiny.Ui.Image\");\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastId = null;\n\n        this.state = {\n            ...props.initialState,\n            error: null,\n            cropImage: null,\n            actualWidth: 0,\n            actualHeight: 0\n        };\n\n        [\n            \"applyCropping\",\n            \"onCropperHidden\",\n            \"fileChanged\",\n            \"editFile\",\n            \"removeFile\",\n            \"getFiles\",\n            \"getCropper\",\n            \"onDrop\",\n            \"onDragOver\",\n            \"onDragLeave\"\n        ].map(m => (this[m] = this[m].bind(this)));\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n    }\n\n    applyCropping(newImage) {\n        this.props.onChange(newImage).then(() => this.setState({ cropImage: null }));\n    }\n\n    onCropperHidden() {\n        this.setState({ cropImage: null });\n    }\n\n    fileChanged(file, error) {\n        if (error) {\n            this.setState({ error });\n            return;\n        }\n\n        if (_.has(file, \"data\")) {\n            file.id = _.get(this.props, \"value.id\", this.lastId);\n            if (this.props.cropper && file.type !== \"image/svg+xml\") {\n                this.setState({ cropImage: file });\n            } else {\n                this.props.onChange(file);\n            }\n        }\n    }\n\n    editFile() {\n        this.setState({\n            cropImage: this.props.value\n        });\n    }\n\n    removeFile(e) {\n        if (e && e.stopPropagation) {\n            e.stopPropagation();\n        }\n        this.lastId = (this.props.value && this.props.value.id) || null;\n        this.props.onChange(null);\n    }\n\n    getFiles(e) {\n        this.setState({ error: null });\n        if (e && e.stopPropagation) {\n            e.stopPropagation();\n        }\n        this.reader.getFiles();\n    }\n\n    getCropper(children = null) {\n        const { cropper, Cropper } = this.props;\n\n        if (!cropper) {\n            return null;\n        }\n\n        if (cropper.inline) {\n            return (\n                <Cropper.Inline\n                    title={cropper.title}\n                    action={cropper.action}\n                    onHidden={this.onCropperHidden}\n                    onCrop={this.applyCropping}\n                    config={cropper.config}\n                    image={this.state.cropImage}\n                >\n                    {children}\n                </Cropper.Inline>\n            );\n        }\n\n        return (\n            <Cropper.Modal\n                title={cropper.title}\n                action={cropper.action}\n                onHidden={this.onCropperHidden}\n                onCrop={this.applyCropping}\n                config={cropper.config}\n                image={this.state.cropImage}\n            >\n                {children}\n            </Cropper.Modal>\n        );\n    }\n\n    onDragOver(e) {\n        e.preventDefault();\n        this.setState({\n            dragOver: true\n        });\n    }\n\n    onDragLeave() {\n        this.setState({\n            dragOver: false\n        });\n    }\n\n    onDrop(evt) {\n        evt.preventDefault();\n        evt.persist();\n\n        this.setState({\n            dragOver: false\n        });\n\n        this.reader.readFiles(evt.dataTransfer.files);\n    }\n\n    renderError() {\n        let error = null;\n        if (this.state.error) {\n            const { Alert } = this.props;\n            error = <Alert type=\"error\">{this.state.error.message}</Alert>;\n        }\n        return error;\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        if (this.state.cropImage && _.get(this.props, \"cropper.inline\", false)) {\n            return this.getCropper();\n        }\n\n        const { FileReader, FormGroup, styles } = this.props;\n\n        let message = null;\n        if (!this.props.value) {\n            message = (\n                <div>\n                    <span className={styles.mainText}>{t`DRAG FILES HERE`}</span>\n                </div>\n            );\n        }\n\n        const props = {\n            onDrop: this.onDrop,\n            onDragLeave: this.onDragLeave,\n            onDragOver: this.onDragOver,\n            onClick: this.getFiles\n        };\n\n        let css = classSet(styles.trayBin, styles.trayBinEmpty);\n\n        if (this.props.value) {\n            css = classSet(styles.trayBin);\n        }\n\n        let image = null;\n        if (this.props.value) {\n            const imageProps = {\n                image: this.props.value,\n                onEdit: this.props.cropper ? this.editFile : null,\n                onDelete: this.removeFile,\n                onDragStart: this.onImageDragStart,\n                onDragEnd: this.onImageDragEnd,\n                onDragOver: this.onImageDragOver\n            };\n\n            image = <ImagePreview {...imageProps} />;\n        }\n\n        return (\n            <FormGroup className={this.props.className}>\n                <div className={classSet(css)} {...props}>\n                    {this.renderError()}\n                    <div className={styles.container}>\n                        {message}\n                        {image}\n                        <FileReader\n                            onReady={reader => (this.reader = reader)}\n                            accept={this.props.accept}\n                            sizeLimit={this.props.sizeLimit}\n                            onChange={this.fileChanged}\n                        />\n                    </div>\n                    <div className={styles.uploadAction}>\n                        <span>{t`Dragging not convenient?`}</span>&nbsp;\n                        <a href=\"#\" onClick={this.getFiles}>{t`SELECT FILES HERE`}</a>\n                    </div>\n                </div>\n                {this.getCropper()}\n            </FormGroup>\n        );\n    }\n}\n\nImage.defaultProps = {\n    accept: [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"],\n    cropper: false,\n    sizeLimit: 2485760\n};\n\nexport default createComponent([Image, FormComponent], {\n    modules: [\"FileReader\", \"Alert\", \"Cropper\", \"FormGroup\"],\n    formComponent: true,\n    styles\n});\n"]}