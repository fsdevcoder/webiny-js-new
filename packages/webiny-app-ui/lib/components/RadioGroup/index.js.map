{"version":3,"sources":["../../../src/components/RadioGroup/index.js"],"names":["RadioGroup","props","state","initialState","renderOptions","bind","attachToForm","nextProps","options","value","callback","map","item","key","checked","valueKey","valueAttr","id","label","text","disabled","isDisabled","option","optionIndex","onChange","useDataAsValue","newValue","data","validate","renderRadio","render","renderRadioLabel","renderLabel","radio","call","FormGroup","styles","className","renderValidationMessage","Component","Radio","defaultProps","modules","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport classSet from \"classnames\";\nimport { createComponent } from 'webiny-app';\nimport { OptionComponent } from 'webiny-app-ui';\nimport Radio from './Radio';\nimport styles from './styles.css';\n\nclass RadioGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...props.initialState\n        };\n\n        this.renderOptions = this.renderOptions.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !_.isEqual(nextProps.options, this.props.options) || !_.isEqual(nextProps.value, this.props.value);\n    }\n\n    /**\n     * Render options elements\n     *\n     * Callback parameter is used when you need to implement a custom render and optionally wrap each option element with custom markup\n     *\n     * @returns {Array}\n     */\n    renderOptions(callback = null) {\n        return this.props.options.map((item, key) => {\n            let checked = false;\n            if (_.isPlainObject(this.props.value)) {\n                // If value is an object we need to fetch a single value to compare against option id.\n                // `valueKey` should be used for this purpose but we also use `valueAttr` as a fallback\n                // (although `valueAttr` should only be used for generating options, it contains the default identification attribute name)\n                checked = _.get(this.props.value, this.props.valueKey || this.props.valueAttr) === item.id;\n            } else {\n                checked = this.props.value === item.id;\n            }\n\n            const props = {\n                key,\n                label: item.text,\n                disabled: this.props.isDisabled(),\n                option: item,\n                optionIndex: key,\n                value: checked,\n                onChange: newValue => {\n                    this.props.onChange(this.props.useDataAsValue ? newValue.data : newValue.id, this.validate);\n                }\n            };\n\n            if (this.props.renderRadio) {\n                props.render = this.props.renderRadio;\n            }\n\n            if (this.props.renderRadioLabel) {\n                props.renderLabel = this.props.renderRadioLabel;\n            }\n\n            const radio = <Radio {...props}/>;\n\n            if (callback) {\n                return callback(radio, key);\n            }\n\n            return radio;\n        });\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { FormGroup, styles, className, disabled } = this.props;\n\n        return (\n            <FormGroup className={classSet(className, (disabled && styles.disabled))}>\n                {this.props.renderLabel.call(this)}\n                <div className=\"clearfix\"/>\n                {this.renderOptions()}\n                {this.props.renderValidationMessage.call(this)}\n            </FormGroup>\n        );\n    }\n\n}\n\nRadioGroup.Radio = Radio;\n\nRadioGroup.defaultProps = {\n    renderRadioLabel: null,\n    renderRadio: null\n};\n\nexport default createComponent([RadioGroup, OptionComponent], { modules: ['FormGroup'], styles, formComponent: true });"]}