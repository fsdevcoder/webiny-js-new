{"version":3,"sources":["../../../src/components/HtmlEditor/index.js"],"names":["t","namespace","HtmlEditor","props","state","initialState","cropImage","uploadPercentage","value","dom","editor","delay","index","api","create","url","uploader","map","m","bind","attachToForm","Quill","getTextareaElement","modules","toolbar","theme","bounds","document","body","getModule","addHandler","reader","getFiles","on","setState","root","innerHTML","changed","pasteHTML","nextProps","nextState","oldState","newState","clearTimeout","onChange","setTimeout","applyValue","file","error","getSelection","cropper","uploadImage","data","upload","percentage","insertEmbed","entity","src","setSelection","length","response","services","get","danger","message","children","Cropper","inline","title","action","onCropperHidden","config","Alert","render","call","Progress","FileReader","FormGroup","className","renderLabel","renderInfo","renderError","ref","accept","sizeLimit","fileChanged","getCropper","renderDescription","Component","defaultProps","imageApi","list","indent","size","header","color","background","font","align","closeOnClick","autoCropArea","formComponent"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { app, i18n, createComponent, Uploader } from \"webiny-app\";\nimport { FormComponent } from \"webiny-app-ui\";\nimport axios from \"axios\";\n\nconst t = i18n.namespace(\"Webiny.Ui.HtmlEditor\");\nclass HtmlEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...props.initialState,\n            cropImage: null,\n            uploadPercentage: null,\n            value: props.value\n        };\n\n        this.dom = null;\n        this.editor = null;\n        this.delay = null;\n        this.index = 0;\n\n        const api = axios.create({\n            url: props.api\n        });\n        this.uploader = new Uploader(api);\n\n        [\n            \"getTextareaElement\",\n            \"getEditor\",\n            \"getCropper\",\n            \"onCropperHidden\",\n            \"uploadImage\",\n            \"fileChanged\",\n            \"applyValue\",\n            \"changed\",\n            \"renderError\"\n        ].map(m => (this[m] = this[m].bind(this)));\n    }\n\n    componentDidMount() {\n        if (this.props.attachToForm) {\n            this.props.attachToForm(this);\n        }\n\n        const { Quill } = this.props;\n        this.editor = new Quill(this.getTextareaElement(), {\n            modules: {\n                toolbar: this.props.toolbar\n            },\n            theme: \"snow\",\n            bounds: document.body\n        });\n\n        const toolbar = this.editor.getModule(\"toolbar\");\n        toolbar.addHandler(\"image\", () => {\n            this.reader.getFiles();\n        });\n\n        this.editor.on(\"text-change\", () => {\n            this.setState({ value: this.editor.root.innerHTML }, this.changed);\n        });\n\n        this.editor.pasteHTML(this.props.value);\n    }\n\n    componentWillReceiveProps(props) {\n        if (!this.delay && props.value !== this.editor.root.innerHTML) {\n            this.editor.pasteHTML(props.value);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const oldState = _.pick(this.state, [\"cropImage\", \"uploadPercentage\", \"error\"]);\n        const newState = _.pick(nextState, [\"cropImage\", \"uploadPercentage\", \"error\"]);\n        return !_.isEqual(oldState, newState);\n    }\n\n    componentDidUpdate() {\n        this.editor.pasteHTML(this.state.value);\n    }\n\n    componentWillUnmount() {\n        delete this.editor;\n    }\n\n    applyValue(value) {\n        clearTimeout(this.delay);\n        this.delay = null;\n        this.props.onChange(value);\n    }\n\n    changed() {\n        clearTimeout(this.delay);\n        this.delay = null;\n        this.delay = setTimeout(() => this.applyValue(this.state.value), 300);\n    }\n\n    fileChanged(file, error) {\n        // mark current index\n        this.index = this.editor.getSelection(true).index;\n\n        if (error) {\n            this.setState({ error });\n            return;\n        }\n\n        this.setState({ error: null });\n\n        if (this.props.cropper) {\n            this.setState({ cropImage: file });\n        } else {\n            this.uploadImage(file);\n        }\n    }\n\n    uploadImage(data) {\n        this.uploader.upload(\n            data,\n            ({ percentage }) => {\n                this.setState({ uploadPercentage: percentage });\n            },\n            ({ file }) => {\n                this.editor.insertEmbed(this.index, \"image\", file.entity.src);\n                // reposition index to previous position\n                this.setState({ uploadPercentage: null });\n                this.editor.setSelection({ index: this.index, length: 0 });\n            },\n            ({ response }) => {\n                app.services.get(\"growler\").danger(response.message, t`Upload failed`);\n                this.setState({ uploadPercentage: null });\n            }\n        );\n    }\n\n    getCropper(children = null) {\n        const { cropper, Cropper } = this.props;\n\n        if (!cropper) {\n            return null;\n        }\n\n        if (cropper.inline) {\n            return (\n                <Cropper.Inline\n                    title={cropper.title}\n                    action={cropper.action}\n                    onHidden={this.onCropperHidden}\n                    onCrop={this.uploadImage}\n                    config={cropper.config}\n                    image={this.state.cropImage}\n                >\n                    {children}\n                </Cropper.Inline>\n            );\n        }\n\n        return (\n            <Cropper.Modal\n                title={cropper.title}\n                action={cropper.action}\n                onHidden={this.onCropperHidden}\n                onCrop={this.uploadImage}\n                config={cropper.config}\n                image={this.state.cropImage}\n            >\n                {children}\n            </Cropper.Modal>\n        );\n    }\n\n    onCropperHidden() {\n        this.setState({ cropImage: null });\n    }\n\n    getEditor() {\n        return this.editor;\n    }\n\n    getTextareaElement() {\n        return this.dom;\n    }\n\n    renderError() {\n        let error = null;\n        if (this.state.error) {\n            const { Alert } = this.props;\n            error = <Alert type=\"error\">{this.state.error.message}</Alert>;\n        }\n        return error;\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        const { Alert, Progress, FileReader, FormGroup } = this.props;\n\n        let uploader = null;\n        if (this.state.uploadPercentage !== null) {\n            uploader = (\n                <div>\n                    <strong>Your image is being uploaded...</strong>\n                    <Progress value={this.state.uploadPercentage} />\n                </div>\n            );\n        }\n\n        return (\n            <FormGroup className={this.props.className}>\n                {this.renderLabel.call(this)}\n                {this.renderInfo.call(this)}\n                <div className=\"inputGroup\">\n                    {this.renderError()}\n                    {uploader}\n                    <div ref={ref => (this.dom = ref)} className=\"editor\" />\n                    <FileReader\n                        accept={this.props.accept}\n                        onReady={reader => (this.reader = reader)}\n                        sizeLimit={this.props.sizeLimit}\n                        onChange={this.fileChanged}\n                    />\n                    {this.getCropper(\n                        <Alert type=\"info\" title={t`Hint`}>{t`Scroll to zoom in/out`}</Alert>\n                    )}\n                </div>\n                {this.props.renderDescription.call(this)}\n            </FormGroup>\n        );\n    }\n}\n\nHtmlEditor.defaultProps = {\n    imageApi: \"/entities/webiny/images\",\n    accept: [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"],\n    sizeLimit: 2485760,\n    toolbar: [\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\n        [\"blockquote\", \"code-block\", \"link\", \"image\"],\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\n        [{ indent: \"-1\" }, { indent: \"+1\" }],\n        [{ size: [\"small\", false, \"large\", \"huge\"] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [{ color: [] }, { background: [] }],\n        [{ font: [] }],\n        [{ align: [] }],\n        [\"clean\"]\n    ],\n    cropper: {\n        title: \"Crop your image\",\n        action: \"Insert image\",\n        config: {\n            closeOnClick: false,\n            autoCropArea: 0.7\n        }\n    }\n};\n\nexport default createComponent([HtmlEditor, FormComponent], {\n    modules: [\n        \"Alert\",\n        \"Cropper\",\n        \"FileReader\",\n        \"Progress\",\n        \"FormGroup\",\n        { Quill: \"Vendors/Quill\" }\n    ],\n    formComponent: true\n});\n"]}