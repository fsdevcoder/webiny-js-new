{"version":3,"sources":["../../../src/components/ViewSwitcher/View.jsx"],"names":["View","props","state","show","data","bind","attachView","detachView","Promise","showResolve","resolve","setState","modal","view","hide","render","call","params","showView","container","children","ref","dialogName","name","onReady","services","get","then","onHidden","cloneElement","Component","defaultProps","defaultView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEMA,I;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,kBAAM,KADG;AAETC,kBAAM;AAFG,SAAb;;AAKA,cAAKD,IAAL,GAAY,MAAKA,IAAL,CAAUE,IAAV,OAAZ;AARe;AASlB;;;;6CAEoB;AACjB,gBAAI,KAAKJ,KAAL,CAAWK,UAAf,EAA2B;AACvB,qBAAKL,KAAL,CAAWK,UAAX,CAAsB,IAAtB;AACH;AACJ;;;+CAEsB;AACnB,gBAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AACvB,qBAAKN,KAAL,CAAWM,UAAX,CAAsB,IAAtB;AACH;AACJ;;;kCAES;AACN,mBAAO,KAAKL,KAAL,CAAWC,IAAlB;AACH;;;6BAEIC,I,EAAM;AAAA;;AACP,mBAAO,IAAII,OAAJ,CAAY,mBAAW;AAC1B,uBAAKC,WAAL,GAAmBC,OAAnB;AACA,uBAAKC,QAAL,CAAc,EAAER,MAAM,IAAR,EAAcC,UAAd,EAAd;AACH,aAHM,CAAP;AAIH;;;+BAEM;AACH,gBAAI,KAAKH,KAAL,CAAWW,KAAX,IAAoB,KAAKV,KAAL,CAAWC,IAAnC,EAAyC;AACrC,uBAAO,KAAKU,IAAL,CAAUC,IAAV,EAAP;AACH;;AAED,gBAAI,KAAKZ,KAAL,CAAWC,IAAf,EAAqB;AACjB,qBAAKQ,QAAL,CAAc,EAAER,MAAM,KAAR,EAAeC,MAAM,IAArB,EAAd;AACH;;AAED,mBAAOI,QAAQE,OAAR,CAAgB,IAAhB,CAAP;AACH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKT,KAAL,CAAWc,MAAf,EAAuB;AACnB,uBAAO,KAAKd,KAAL,CAAWc,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;AACH;;AAED,gBAAI,KAAKd,KAAL,CAAWC,IAAf,EAAqB;AACjB,oBAAMc,SAAS;AACXC,8BAAU,KAAKjB,KAAL,CAAWkB,SAAX,CAAqBD,QADpB;AAEXd,0BAAM,KAAKF,KAAL,CAAWE;AAFN,iBAAf;;AAKA,oBAAMS,OAAO,KAAKZ,KAAL,CAAWmB,QAAX,CAAoBH,MAApB,CAAb;AACA,oBAAI,CAACJ,IAAL,EAAW;AACP,2BAAO,IAAP;AACH;;AAED,oBAAMZ,QAAQ,EAAEoB,KAAK;AAAA,+BAAO,OAAKR,IAAL,GAAYQ,IAAnB;AAAA,qBAAP,EAAd;AACA,oBAAI,KAAKpB,KAAL,CAAWW,KAAf,EAAsB;AAClB,wBAAMU,aAAaT,KAAKZ,KAAL,CAAWsB,IAA9B;AACA;AACAtB,0BAAMuB,OAAN,GAAgB,YAAM;AAClB,uCAAIC,QAAJ,CAAaC,GAAb,CAAiB,OAAjB,EAA0BvB,IAA1B,CAA+BmB,UAA/B,EAA2CK,IAA3C,CAAgD,OAAKlB,WAAL,kBAAhD;AACH,qBAFD;AAGAR,0BAAM2B,QAAN,GAAiB,YAAM;AACnB,+BAAKjB,QAAL,CAAc,EAAER,MAAM,KAAR,EAAeC,MAAM,IAArB,EAAd;AACH,qBAFD;AAGH;AACD,uBAAO,gBAAMyB,YAAN,CAAmBhB,IAAnB,EAAyBZ,KAAzB,CAAP;AACH;AACD,mBAAO,IAAP;AACH;;;EA9Ec,gBAAM6B,S;;AAiFzB9B,KAAK+B,YAAL,GAAoB;AAChBlB,UAAM,IADU;AAEhBmB,iBAAa,KAFG;AAGhBpB,WAAO;AAHS,CAApB;;kBAMe,gCAAgBZ,IAAhB,C","file":"View.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { app, createComponent } from 'webiny-app';\n\nclass View extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            data: null\n        };\n\n        this.show = this.show.bind(this);\n    }\n\n    componentWillMount() {\n        if (this.props.attachView) {\n            this.props.attachView(this);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.detachView) {\n            this.props.detachView(this);\n        }\n    }\n\n    isShown() {\n        return this.state.show;\n    }\n\n    show(data) {\n        return new Promise(resolve => {\n            this.showResolve = resolve;\n            this.setState({ show: true, data });\n        });\n    }\n\n    hide() {\n        if (this.props.modal && this.state.show) {\n            return this.view.hide();\n        }\n\n        if (this.state.show) {\n            this.setState({ show: false, data: null });\n        }\n\n        return Promise.resolve(true);\n    }\n\n    render() {\n        if (this.props.render) {\n            return this.props.render.call(this);\n        }\n\n        if (this.state.show) {\n            const params = {\n                showView: this.props.container.showView,\n                data: this.state.data\n            };\n\n            const view = this.props.children(params);\n            if (!view) {\n                return null;\n            }\n\n            const props = { ref: ref => this.view = ref };\n            if (this.props.modal) {\n                const dialogName = view.props.name;\n                // We need access to the actual mounted instance of component and not the proxy ComponentWrapper\n                props.onReady = () => {\n                    app.services.get('modal').show(dialogName).then(this.showResolve || _.noop);\n                };\n                props.onHidden = () => {\n                    this.setState({ show: false, data: null });\n                };\n            }\n            return React.cloneElement(view, props);\n        }\n        return null;\n    }\n}\n\nView.defaultProps = {\n    view: null,\n    defaultView: false,\n    modal: false\n};\n\nexport default createComponent(View);\n"]}