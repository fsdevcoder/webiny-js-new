{"version":3,"sources":["../../src/router/Router.cmp.js"],"names":["Router","state","route","router","props","history","unlisten","listen","matchRoute","location","pathname","then","setState","document","off","on","e","href","startsWith","endsWith","indexOf","window","origin","preventDefault","url","push","config","basename","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEMA,M;;;AACF,sBAAc;AAAA;;AAAA;;AAEV,cAAKC,KAAL,GAAa;AACTC,mBAAO;AADE,SAAb;AAFU;AAKb;;;;6CAEoB;AAAA;;AAAA,gBACTC,MADS,GACE,KAAKC,KADP,CACTD,MADS;AAAA,gBAETE,OAFS,GAEGF,MAFH,CAETE,OAFS;;;AAIjB,iBAAKC,QAAL,GAAgBD,QAAQE,MAAR,CAAe,YAAM;AACjCJ,uBAAOK,UAAP,CAAkBH,QAAQI,QAAR,CAAiBC,QAAnC,EAA6CC,IAA7C,CAAkD,iBAAS;AACvD,2BAAKC,QAAL,CAAc,EAAEV,YAAF,EAAd;AACH,iBAFD;AAGH,aAJe,CAAhB;;AAMA,kCAAEW,QAAF,EACKC,GADL,CACS,OADT,EACkB,GADlB,EAEKC,EAFL,CAEQ,OAFR,EAEiB,GAFjB,EAEsB,UAASC,CAAT,EAAY;AAC1B,oBAAI,KAAKC,IAAL,CAAUC,UAAV,CAAqB,oBAArB,KAA8C,KAAKD,IAAL,CAAUE,QAAV,CAAmB,GAAnB,CAAlD,EAA2E;AACvE;AACH;;AAED;AACA,oBAAI,KAAKF,IAAL,CAAUG,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA9B,EAAiC;AAC7B;AACH;;AAED,oBAAI,KAAKH,IAAL,CAAUC,UAAV,CAAqBG,OAAOZ,QAAP,CAAgBa,MAArC,CAAJ,EAAkD;AAC9CN,sBAAEO,cAAF;;AAEA,wBAAIC,MAAM,wBAAM,KAAKP,IAAX,EAAiB,IAAjB,CAAV;AACAZ,4BAAQoB,IAAR,CAAaD,IAAId,QAAjB,EAA2BP,OAAOuB,MAAP,CAAcC,QAAzC;AACH;AACJ,aAlBL;;AAoBAxB,mBAAOK,UAAP,CAAkBH,QAAQI,QAAR,CAAiBC,QAAnC,EAA6CC,IAA7C,CAAkD,iBAAS;AACvD,uBAAKC,QAAL,CAAc,EAAEV,YAAF,EAAd;AACH,aAFD;AAGH;;;kDAEyBE,K,EAAO;AAAA;;AAC7BA,kBAAMD,MAAN,CAAaK,UAAb,CAAwBJ,MAAMD,MAAN,CAAaE,OAAb,CAAqBI,QAArB,CAA8BC,QAAtD,EAAgEC,IAAhE,CAAqE,iBAAS;AAC1E,oBAAI,OAAO,OAAKL,QAAZ,KAAyB,UAA7B,EAAyC;AACrC,2BAAKM,QAAL,CAAc,EAAEV,YAAF,EAAd;AACH;AACJ,aAJD;AAKH;;;+CAEsB;AACnB,iBAAKI,QAAL;AACA,iBAAKA,QAAL,GAAgB,IAAhB;AACH;;;iCAEQ;AACL,mBAAO,KAAKL,KAAL,CAAWC,KAAlB;AACH;;;EA1DgB,gBAAM0B,S;;kBA6DZ5B,M","file":"Router.cmp.js","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\nimport parse from \"url-parse\";\n\nclass Router extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            route: null\n        };\n    }\n\n    componentWillMount() {\n        const { router } = this.props;\n        const { history } = router;\n\n        this.unlisten = history.listen(() => {\n            router.matchRoute(history.location.pathname).then(route => {\n                this.setState({ route });\n            });\n        });\n\n        $(document)\n            .off(\"click\", \"a\")\n            .on(\"click\", \"a\", function(e) {\n                if (this.href.startsWith(\"javascript:void(0)\") || this.href.endsWith(\"#\")) {\n                    return;\n                }\n\n                // Check if it's an anchor link\n                if (this.href.indexOf(\"#\") > -1) {\n                    return;\n                }\n\n                if (this.href.startsWith(window.location.origin)) {\n                    e.preventDefault();\n\n                    let url = parse(this.href, true);\n                    history.push(url.pathname, router.config.basename);\n                }\n            });\n\n        router.matchRoute(history.location.pathname).then(route => {\n            this.setState({ route });\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        props.router.matchRoute(props.router.history.location.pathname).then(route => {\n            if (typeof this.unlisten === \"function\") {\n                this.setState({ route });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unlisten();\n        this.unlisten = null;\n    }\n\n    render() {\n        return this.state.route;\n    }\n}\n\nexport default Router;\n"]}