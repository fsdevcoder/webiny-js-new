{"version":3,"sources":["../../src/router/sortRoutes.js"],"names":["length","arr","filter","v","routes","sort","routeA","routeB","a","path","b","startsWith","al","split","bl","position","av","match","bv"],"mappings":";;;;;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS;AAAA,WAAOC,IAAIC,MAAJ,CAAW;AAAA,eAAK,CAAC,uBAAUC,CAAV,CAAN;AAAA,KAAX,EAA+BH,MAAtC;AAAA,CAAf;;kBAEe,kBAAU;AACrBI,WAAOC,IAAP,CAAY,UAACC,MAAD,EAASC,MAAT,EAAoB;AAC5B;AACA;;AAEA,YAAMC,IAAIF,OAAOG,IAAjB;AACA,YAAMC,IAAIH,OAAOE,IAAjB;;AAEA,YAAID,MAAM,GAAV,EAAe;AACX,mBAAO,CAAP;AACH;;AAED,YAAIE,MAAM,GAAV,EAAe;AACX,mBAAO,CAAC,CAAR;AACH;;AAED,YAAIF,EAAEG,UAAF,CAAa,IAAb,KAAsB,CAACD,EAAEC,UAAF,CAAa,IAAb,CAA3B,EAA+C;AAC3C,mBAAO,CAAP;AACH;;AAED,YAAMC,KAAKZ,OAAOQ,EAAEK,KAAF,CAAQ,GAAR,CAAP,CAAX;AACA,YAAMC,KAAKd,OAAOU,EAAEG,KAAF,CAAQ,GAAR,CAAP,CAAX;AACA,YAAIE,WAAWH,OAAOE,EAAP,GAAaF,KAAKE,EAAL,GAAU,CAAC,CAAX,GAAe,CAA5B,GAAiC,CAAhD;;AAEA,YAAIC,aAAa,CAAjB,EAAoB;AAChB,mBAAOA,QAAP;AACH;;AAED;AACA,YAAMC,KAAKhB,OAAOQ,EAAES,KAAF,CAAQ,OAAR,KAAoB,EAA3B,CAAX;AACA,YAAMC,KAAKlB,OAAOU,EAAEO,KAAF,CAAQ,OAAR,KAAoB,EAA3B,CAAX;AACA,eAAOD,OAAOE,EAAP,GAAaF,KAAKE,EAAL,GAAU,CAAV,GAAc,CAAC,CAA5B,GAAiC,CAAxC;AACH,KA/BD;AAgCH,C","file":"sortRoutes.js","sourcesContent":["import _ from \"lodash\";\n\nconst length = arr => arr.filter(v => !_.isEmpty(v)).length;\n\nexport default routes => {\n    routes.sort((routeA, routeB) => {\n        // 1 means 'a' goes after 'b'\n        // -1 means 'a' goes before 'b'\n\n        const a = routeA.path;\n        const b = routeB.path;\n\n        if (a === \"*\") {\n            return 1;\n        }\n\n        if (b === \"*\") {\n            return -1;\n        }\n\n        if (a.startsWith(\"/:\") && !b.startsWith(\"/:\")) {\n            return 1;\n        }\n\n        const al = length(a.split(\"/\"));\n        const bl = length(b.split(\"/\"));\n        let position = al !== bl ? (al > bl ? -1 : 1) : 0;\n\n        if (position !== 0) {\n            return position;\n        }\n\n        // Compare number of variables\n        const av = length(a.match(/:|\\*/g) || []);\n        const bv = length(b.match(/:|\\*/g) || []);\n        return av !== bv ? (av > bv ? 1 : -1) : 0;\n    });\n};\n"]}