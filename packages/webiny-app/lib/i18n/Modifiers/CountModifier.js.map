{"version":3,"sources":["../../../src/i18n/Modifiers/CountModifier.js"],"names":["CountModifier","value","parameters","i","length","current","numbers","split"],"mappings":";;;;;;;;;;;;;;;;IAAMA,a;;;;;;;kCACQ;AACN,mBAAO,OAAP;AACH;;;gCAEOC,K,EAAOC,U,EAAY;AACvB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,WAAWE,MAA/B,EAAuCD,IAAIA,IAAI,CAA/C,EAAkD;AAC9C,oBAAME,UAAUH,WAAWC,CAAX,CAAhB;AACA,oBAAIE,YAAY,SAAhB,EAA2B;AACvB,2BAAOJ,QAAQ,GAAR,GAAcC,WAAWC,IAAI,CAAf,CAArB;AACH;;AAED,oBAAMG,UAAUD,QAAQE,KAAR,CAAc,GAAd,CAAhB;;AAEA;AACA,oBAAID,QAAQF,MAAR,KAAmB,CAAvB,EAA0B;AACtB,wBAAIH,SAASK,QAAQ,CAAR,CAAT,IAAuBL,SAASK,QAAQ,CAAR,CAApC,EAAgD;AAC5C,+BAAOL,QAAQ,GAAR,GAAcC,WAAWC,IAAI,CAAf,CAArB;AACH;AACD;AACH;;AAED,oBAAIF,UAAUK,QAAQ,CAAR,CAAd,EAA0B;AACtB,2BAAOL,QAAQ,GAAR,GAAcC,WAAWC,IAAI,CAAf,CAArB;AACH;AACJ;;AAED;AACA,mBAAOF,KAAP;AACH;;;;;kBAGUD,a","file":"CountModifier.js","sourcesContent":["class CountModifier {\n    getName() {\n        return 'count';\n    }\n\n    execute(value, parameters) {\n        // Numbers can be single number or ranges.\n        for (let i = 0; i < parameters.length; i = i + 2) {\n            const current = parameters[i];\n            if (current === 'default') {\n                return value + ' ' + parameters[i + 1];\n            }\n\n            const numbers = current.split('-');\n\n            // If we are dealing with a numbers range, then let's check if we are in it.\n            if (numbers.length === 2) {\n                if (value >= numbers[0] && value <= numbers[1]) {\n                    return value + ' ' + parameters[i + 1];\n                }\n                continue;\n            }\n\n            if (value === numbers[0]) {\n                return value + ' ' + parameters[i + 1];\n            }\n        }\n\n        // If we didn't match any condition, let's just remove the received value.\n        return value;\n    }\n}\n\nexport default CountModifier;"]}