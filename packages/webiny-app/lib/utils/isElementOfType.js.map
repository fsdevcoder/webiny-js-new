{"version":3,"sources":["../../src/utils/isElementOfType.js"],"names":["element","type","isValidElement","targetType","hasOwnProperty","__originalComponent","elementType","checkDeeper","prototype","Object","getPrototypeOf","constructor","e"],"mappings":";;;;;;;;;;AAYA;;;;;;kBAGe,UAACA,OAAD,EAAUC,IAAV,EAAmB;AAC9B,QAAI,CAACD,OAAD,IAAY,CAAC,gBAAME,cAAN,CAAqBF,OAArB,CAAb,IAA8C,wBAAWA,QAAQC,IAAnB,CAAlD,EAA4E;AACxE,eAAO,KAAP;AACH;;AAED;AACA;AACA,QAAIE,aAAaF,IAAjB;AACA,QAAIA,KAAKG,cAAL,CAAoB,qBAApB,CAAJ,EAAgD;AAC5CD,qBAAaF,KAAKI,mBAAlB;AACH;;AAED;AACA;AACA,QAAIC,cAAcN,QAAQC,IAA1B;AACA,QAAIK,YAAYF,cAAZ,CAA2B,qBAA3B,CAAJ,EAAuD;AACnDE,sBAAcA,YAAYD,mBAA1B;AACH;;AAED;AACA,QAAME,cAAc,SAAdA,WAAc,CAACD,WAAD,EAAiB;AACjC,YAAI,CAACA,WAAL,EAAkB;AACd,mBAAO,KAAP;AACH;;AAED,YAAIA,gBAAgBH,UAAhB,IAA8BG,YAAYE,SAAZ,YAAiCL,UAAnE,EAA+E;AAC3E,mBAAO,IAAP;AACH;;AAED,eAAOI,YAAYE,OAAOC,cAAP,CAAsBJ,YAAYE,SAAlC,EAA6CG,WAA7C,CAAyDN,mBAArE,CAAP;AACH,KAVD;;AAYA,QAAIC,gBAAgBH,UAAhB,IAA8BG,YAAYE,SAAZ,YAAiCL,UAAnE,EAA+E;AAC3E,eAAO,IAAP;AACH;;AAED,QAAI;AACA,eAAOI,YAAYE,OAAOC,cAAP,CAAsBJ,YAAYE,SAAlC,EAA6CG,WAA7C,CAAyDN,mBAArE,CAAP;AACH,KAFD,CAEE,OAAOO,CAAP,EAAU;AACR,eAAO,KAAP;AACH;AACJ,C,EAxDD","file":"isElementOfType.js","sourcesContent":["/**\n * Compare element types.\n *\n * Comparing element types (classes) in Webiny is not very straightforward as we wrap our component classes with another class\n * called `ComponentWrapper` but in your code we do not want you to worry about existence of that wrapper.\n *\n * It is also important to mention that `react-hot-loader` creates its own wrapper around components so comparison is different in production and in development.\n *\n *\n * Usage:\n * isElementOfType(element, componentClassToCompareWith)\n */\nimport React from 'react';\nimport _ from 'lodash';\n\nexport default (element, type) => {\n    if (!element || !React.isValidElement(element) || _.isString(element.type)) {\n        return false;\n    }\n\n    // If a class to compare against has an \"__originalComponent\" property it means it's a ComponentWrapper\n    // Need to compare against originalComponent class\n    let targetType = type;\n    if (type.hasOwnProperty('__originalComponent')) {\n        targetType = type.__originalComponent;\n    }\n\n    // If the element type has an \"__originalComponent\" property it means it's a ComponentWrapper\n    // Need to compare against originalComponent class\n    let elementType = element.type;\n    if (elementType.hasOwnProperty('__originalComponent')) {\n        elementType = elementType.__originalComponent;\n    }\n\n    // Check if targetType can be found in the inheritance tree with possible ComponentWrapper being an intermediate class\n    const checkDeeper = (elementType) => {\n        if (!elementType) {\n            return false;\n        }\n\n        if (elementType === targetType || elementType.prototype instanceof targetType) {\n            return true;\n        }\n\n        return checkDeeper(Object.getPrototypeOf(elementType.prototype).constructor.__originalComponent);\n    };\n\n    if (elementType === targetType || elementType.prototype instanceof targetType) {\n        return true;\n    }\n\n    try {\n        return checkDeeper(Object.getPrototypeOf(elementType.prototype).constructor.__originalComponent);\n    } catch (e) {\n        return false;\n    }\n};"]}