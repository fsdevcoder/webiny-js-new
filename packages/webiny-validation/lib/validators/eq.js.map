{"version":3,"sources":["../../src/validators/eq.js"],"names":["value","params"],"mappings":";;;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;kBAce,CAACA,KAAD,EAAaC,MAAb,KAAuC;AAClD,QAAI,CAACD,KAAL,EAAY;AACZA,YAAQA,QAAQ,EAAhB;;AAEA;AACA,QAAIA,SAASC,OAAO,CAAP,CAAb,EAAwB;AACpB;AACH;AACD,UAAM,8BAAoB,4BAA4BA,OAAO,CAAP,CAA5B,GAAwC,GAA5D,CAAN;AACH,C","file":"eq.js","sourcesContent":["// @flow\nimport ValidationError from \"./../validationError\";\n\n/**\n * @name eq\n * @description Equality validator. This validator checks if the given values are equal.\n * @param {any} value This is the value that will be validated.\n * @param {Array<string>} params This is the value to validate against. It is passed as a validator parameter: `eq:valueToCompareWith`\n * @throws {ValidationError}\n * @example\n * import { validation } from 'webiny-validation';\n * validation.validate('email@gmail.com', 'eq:another@gmail.com').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\nexport default (value: any, params: Array<string>) => {\n    if (!value) return;\n    value = value + \"\";\n\n    // Intentionally put '==' instead of '===' because passed parameter for this validator is always sent inside a string (eg. \"eq:test\").\n    if (value == params[0]) {\n        return;\n    }\n    throw new ValidationError(\"Value must be equal to \" + params[0] + \".\");\n};\n"]}