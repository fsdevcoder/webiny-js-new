{"version":3,"sources":["../../src/validators/gte.js"],"names":["value","params","parseFloat"],"mappings":";;;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;kBAce,CAACA,KAAD,EAAaC,MAAb,KAAuC;AAClD,QAAI,CAACD,KAAL,EAAY;;AAEZ,QAAIE,WAAWF,KAAX,KAAqBE,WAAWD,OAAO,CAAP,CAAX,CAAzB,EAAgD;AAC5C;AACH;AACD,UAAM,8BAAoB,gDAAgDA,OAAO,CAAP,CAAhD,GAA4D,GAAhF,CAAN;AACH,C","file":"gte.js","sourcesContent":["// @flow\nimport ValidationError from \"./../validationError\";\n\n/**\n * @name gte\n * @description \"Greater than or equals\" validator. This validator checks if the given values is greater than or equal to the `min` value.\n * @param {any} value This is the value that will be validated.\n * @param {any} min This is the value to validate against. It is passed as a validator parameter: `gte:valueToCompareAgainst`\n * @throws {ValidationError}\n * @example\n * import { validation } from 'webiny-validation';\n * validation.validate(10, 'gte:100').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\nexport default (value: any, params: Array<string>) => {\n    if (!value) return;\n\n    if (parseFloat(value) >= parseFloat(params[0])) {\n        return;\n    }\n    throw new ValidationError(\"Value needs to be greater than or equal to \" + params[0] + \".\");\n};\n"]}