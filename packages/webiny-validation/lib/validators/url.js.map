{"version":3,"sources":["../../src/validators/url.js"],"names":["value","params","regex","RegExp","ipRegex","test","includes"],"mappings":";;;;;;AAAA;;;;;;kBAEe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAC9B,QAAI,CAACD,KAAL,EAAY;AACZA,YAAQA,QAAQ,EAAhB;;AAEA,UAAME,QAAQ,IAAIC,MAAJ;AACV;AACA,0JAFU,CAAd;;AAKA,UAAMC,UAAU,IAAID,MAAJ;AACZ;AACA,mLAFY,CAAhB;;AAKA,QAAID,MAAMG,IAAN,CAAWL,KAAX,CAAJ,EAAuB;AACnB,YAAI,CAACC,OAAOK,QAAP,CAAgB,MAAhB,CAAL,EAA8B;AAC1B;AACH;;AAED,YAAI,CAACF,QAAQC,IAAR,CAAaL,KAAb,CAAL,EAA0B;AACtB;AACH;AACJ;;AAED,UAAM,8BAAoB,4BAApB,CAAN;AACH,C","file":"url.js","sourcesContent":["import ValidationError from \"./../validationError\";\n\nexport default (value, params) => {\n    if (!value) return;\n    value = value + \"\";\n\n    const regex = new RegExp(\n        // eslint-disable-next-line\n        /^(https?:\\/\\/)((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i\n    );\n\n    const ipRegex = new RegExp(\n        // eslint-disable-next-line\n        /^(https?:\\/\\/)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    );\n\n    if (regex.test(value)) {\n        if (!params.includes(\"noIp\")) {\n            return;\n        }\n\n        if (!ipRegex.test(value)) {\n            return;\n        }\n    }\n\n    throw new ValidationError(\"Value must be a valid URL.\");\n};\n"]}