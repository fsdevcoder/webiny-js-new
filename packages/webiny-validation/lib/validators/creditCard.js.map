{"version":3,"sources":["../../src/validators/creditCard.js"],"names":["value","length","test","nCheck","nDigit","bEven","replace","n","cDigit","charAt","parseInt"],"mappings":";;;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;kBAagBA,KAAD,IAAsB;AACjC,QAAI,CAACA,KAAL,EAAY;AACZA,YAAQA,QAAQ,EAAhB;;AAEA,QAAIA,MAAMC,MAAN,GAAe,EAAnB,EAAuB;AACnB,cAAM,8BAAoB,+BAApB,CAAN;AACH;;AAED,QAAI,aAAaC,IAAb,CAAkBF,KAAlB,CAAJ,EAA8B,MAAM,8BAAoB,6BAApB,CAAN;;AAE9B,QAAIG,SAAS,CAAb;AACA,QAAIC,SAAS,CAAb;AACA,QAAIC,QAAQ,KAAZ;;AAEAL,YAAQA,MAAMM,OAAN,CAAc,IAAd,EAAoB,EAApB,CAAR;AACAN,YAAQA,MAAMM,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;;AAEA,SAAK,IAAIC,IAAIP,MAAMC,MAAN,GAAe,CAA5B,EAA+BM,KAAK,CAApC,EAAuCA,GAAvC,EAA4C;AACxC,cAAMC,SAASR,MAAMS,MAAN,CAAaF,CAAb,CAAf;AACAH,iBAASM,SAASF,MAAT,CAAT;;AAEA,YAAIH,KAAJ,EAAW;AACPD,sBAAU,CAAV;AACA,gBAAIA,SAAS,CAAb,EAAgB;AACZA,0BAAU,CAAV;AACH;AACJ;;AAEDD,kBAAUC,MAAV;AACAC,gBAAQ,CAACA,KAAT;AACH;;AAED,QAAIF,SAAS,EAAT,KAAgB,CAApB,EAAuB;AACnB;AACH;;AAED,UAAM,8BAAoB,6BAApB,CAAN;AACH,C","file":"creditCard.js","sourcesContent":["// @flow\nimport ValidationError from \"./../validationError\";\n\n/**\n * @name creditCard\n * @description Credit card validator. This validator will check if the given value is a credit card number.\n * @param {any} value This is the value that will be validated.\n * @throws {ValidationError}\n * @example\n * import { validation } from 'webiny-validation';\n * validation.validate('notACreditCard', 'creditCard').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\nexport default (value: any): void => {\n    if (!value) return;\n    value = value + \"\";\n\n    if (value.length < 12) {\n        throw new ValidationError(\"Credit card number too short.\");\n    }\n\n    if (/[^0-9-\\s]+/.test(value)) throw new ValidationError(\"Credit card number invalid.\");\n\n    let nCheck = 0;\n    let nDigit = 0;\n    let bEven = false;\n\n    value = value.replace(/ /g, \"\");\n    value = value.replace(/\\D/g, \"\");\n\n    for (let n = value.length - 1; n >= 0; n--) {\n        const cDigit = value.charAt(n);\n        nDigit = parseInt(cDigit);\n\n        if (bEven) {\n            nDigit *= 2;\n            if (nDigit > 9) {\n                nDigit -= 9;\n            }\n        }\n\n        nCheck += nDigit;\n        bEven = !bEven;\n    }\n\n    if (nCheck % 10 === 0) {\n        return;\n    }\n\n    throw new ValidationError(\"Credit card number invalid.\");\n};\n"]}