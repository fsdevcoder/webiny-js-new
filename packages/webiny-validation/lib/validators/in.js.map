{"version":3,"sources":["../../src/validators/in.js"],"names":["value","params","includes","join"],"mappings":";;;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;kBAce,CAACA,KAAD,EAAaC,MAAb,KAAuC;AAClD,QAAI,CAACD,KAAL,EAAY;AACZA,YAAQA,QAAQ,EAAhB;;AAEA,QAAIC,OAAOC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AACxB;AACH;;AAED,UAAM,8BAAoB,yCAAyCC,OAAOE,IAAP,CAAY,IAAZ,CAAzC,GAA6D,GAAjF,CAAN;AACH,C","file":"in.js","sourcesContent":["// @flow\nimport ValidationError from \"./../validationError\";\n\n/**\n * @name in\n * @description \"In array\" validator. This validator checks if the given values is greater than or equal to the `min` value.\n * @param {any} value This is the value that will be validated.\n * @param {any} params This is the array of values to search in. It is passed as a validator parameter: `in:1:2:3`. Array values are separated by `:`.\n * @throws {ValidationError}\n * @example\n * import { validation } from 'webiny-validation';\n * validation.validate(10, 'in:10:20:30').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\nexport default (value: any, params: Array<string>) => {\n    if (!value) return;\n    value = value + \"\";\n\n    if (params.includes(value)) {\n        return;\n    }\n\n    throw new ValidationError(\"Value must be one of the following: \" + params.join(\", \") + \".\");\n};\n"]}