{"version":3,"sources":["../../src/validators/gt.js"],"names":["value","params","parseFloat"],"mappings":";;;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;kBAce,CAACA,KAAD,EAAaC,MAAb,KAAuC;AAClD,QAAI,CAACD,KAAL,EAAY;;AAEZ,QAAIE,WAAWF,KAAX,IAAoBE,WAAWD,OAAO,CAAP,CAAX,CAAxB,EAA+C;AAC3C;AACH;AACD,UAAM,8BAAoB,oCAAoCA,OAAO,CAAP,CAApC,GAAgD,GAApE,CAAN;AACH,C","file":"gt.js","sourcesContent":["// @flow\nimport ValidationError from \"./../validationError\";\n\n/**\n * @name gt\n * @description \"Greater than\" validator. This validator checks if the given values is greater than the `min` value.\n * @param {any} value This is the value that will be validated.\n * @param {Array<string>} params This is the value to validate against. It is passed as a validator parameter: `gt:valueToCompareAgainst`\n * @throws {ValidationError}\n * @example\n * import { validation } from 'webiny-validation';\n * validation.validate(10, 'gt:100').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\nexport default (value: any, params: Array<string>) => {\n    if (!value) return;\n\n    if (parseFloat(value) > parseFloat(params[0])) {\n        return;\n    }\n    throw new ValidationError(\"Value needs to be greater than \" + params[0] + \".\");\n};\n"]}