{"version":3,"sources":["../../src/extractor/index.js"],"names":["Extractor","setGlob","glob","setContent","content","execute","results","paths","sync","forEach","path","console","log","contents","readFileSync","parsed","key","setListOnly","flag","listOnly"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAN,CAAgB;;AAKZC,YAAQC,IAAR,EAAiC;AAC7B,aAAKA,IAAL,GAAYA,IAAZ;AACA,eAAO,IAAP;AACH;;AAEDC,eAAWC,OAAX,EAAuC;AACnC,aAAKA,OAAL,GAAeA,OAAf;AACA,eAAO,IAAP;AACH;;AAEDC,cAAU;AACN,cAAMC,UAAU,EAAhB;;AAEA,YAAI,KAAKJ,IAAT,EAAe;AACX,kBAAMK,QAAQ,eAAKC,IAAL,CAAU,KAAKN,IAAf,CAAd;AACAK,kBAAME,OAAN,CAAcC,QAAQ;AAClBC,wBAAQC,GAAR,CAAYF,IAAZ;AACA,sBAAMG,WAAW,aAAGC,YAAH,CAAgBJ,IAAhB,EAAsB,MAAtB,CAAjB;AACA,sBAAMK,SAAS,uBAAQF,QAAR,CAAf;AACA,qBAAK,IAAIG,GAAT,IAAgBD,MAAhB,EAAwB;AACpBT,4BAAQU,GAAR,IAAeD,OAAOC,GAAP,CAAf;AACH;AACJ,aAPD;AAQH;;AAEDL,gBAAQC,GAAR,CAAYN,OAAZ;AACH;;AAEDW,gBAAYC,OAAgB,IAA5B,EAA6C;AACzC,aAAKC,QAAL,GAAgBD,IAAhB;AACA,eAAO,IAAP;AACH;AApCW;kBAuCDlB,S","file":"index.js","sourcesContent":["// @flow\nimport extract from \"./extract\";\nimport glob from \"glob\";\nimport fs from \"fs\";\n\nclass Extractor {\n    glob: string;\n    content: string;\n    listOnly: boolean;\n\n    setGlob(glob: string): Extractor {\n        this.glob = glob;\n        return this;\n    }\n\n    setContent(content: string): Extractor {\n        this.content = content;\n        return this;\n    }\n\n    execute() {\n        const results = {};\n\n        if (this.glob) {\n            const paths = glob.sync(this.glob);\n            paths.forEach(path => {\n                console.log(path);\n                const contents = fs.readFileSync(path, \"utf8\");\n                const parsed = extract(contents);\n                for (let key in parsed) {\n                    results[key] = parsed[key];\n                }\n            });\n        }\n\n        console.log(results);\n    }\n\n    setListOnly(flag: boolean = true): Extractor {\n        this.listOnly = flag;\n        return this;\n    }\n}\n\nexport default Extractor;\n"]}